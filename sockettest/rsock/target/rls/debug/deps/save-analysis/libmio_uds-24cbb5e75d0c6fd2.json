{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8","program":"/home/pythomancer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","mio_uds","/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=24cbb5e75d0c6fd2","-C","extra-filename=-24cbb5e75d0c6fd2","--out-dir","/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps","-L","dependency=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps","--extern","iovec=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libiovec-8258f2e3173f4457.rmeta","--extern","libc=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/liblibc-2c19b4515329ea54.rmeta","--extern","mio=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libmio-71b149aa98062354.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pythomancer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libmio_uds-24cbb5e75d0c6fd2.rmeta"},"prelude":{"crate_id":{"name":"mio_uds","disambiguator":[12930490739112825949,0]},"crate_root":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src","external_crates":[{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17410308932696108380,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14414087034259949263,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13372101680896079740,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5118101865554607907,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8025854276978217217,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4385070015268585674,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9992538824178466914,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15270312766295648766,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[18385953104680678603,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9852578511365041000,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2269743475717416395,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17706006846336192414,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6383024135923770218,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[10215543262378548890,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[4195348899700366916,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[10100673089080813811,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[341892175500051738,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[141027009196343679,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[5788120405916140848,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":20,"id":{"name":"iovec","disambiguator":[5789726875524886104,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":21,"id":{"name":"libc","disambiguator":[5170842456214530381,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":22,"id":{"name":"mio","disambiguator":[4146690332751651028,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":23,"id":{"name":"net2","disambiguator":[10793289574677156777,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":24,"id":{"name":"cfg_if","disambiguator":[17320212013605925823,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":25,"id":{"name":"slab","disambiguator":[6582748322332325229,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":26,"id":{"name":"log","disambiguator":[7872699690716267234,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":27,"id":{"name":"cfg_if","disambiguator":[2189248502941426736,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","num":28,"id":{"name":"value_bag","disambiguator":[11661376207768581083,0]}}],"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","byte_start":0,"byte_end":496,"line_start":1,"line_end":28,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":308},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","byte_start":276,"byte_end":286,"line_start":18,"line_end":18,"column_start":17,"column_end":27},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":304},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","byte_start":306,"byte_end":318,"line_start":19,"line_end":19,"column_start":19,"column_end":31},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","byte_start":338,"byte_end":350,"line_start":20,"line_end":20,"column_start":19,"column_end":31},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","byte_start":0,"byte_end":496,"line_start":1,"line_end":28,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":85},{"krate":0,"index":152},{"krate":0,"index":197},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299}],"decl_id":null,"docs":" MIO bindings for Unix Domain Sockets\n","sig":null,"attributes":[{"value":"/ MIO bindings for Unix Domain Sockets","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"cfg(unix)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","byte_start":42,"byte_end":55,"line_start":3,"line_end":3,"column_start":1,"column_end":14}},{"value":"deny(missing_docs)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/lib.rs","byte_start":56,"byte_end":78,"line_start":4,"line_end":4,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":300},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":815,"byte_end":827,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":301}],"decl_id":null,"docs":" A Unix datagram socket.\n","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":759,"byte_end":786,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":958,"byte_end":962,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.\n","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":887,"byte_end":946,"line_start":22,"line_end":22,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":1702,"byte_end":1715,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"from_datagram","qualname":"<UnixDatagram>::from_datagram","value":"fn from_datagram(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a standard library `UnixDatagram` and returns a wrapped\n `UnixDatagram` compatible with mio.","sig":null,"attributes":[{"value":"/ Consumes a standard library `UnixDatagram` and returns a wrapped","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":1442,"byte_end":1510,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ `UnixDatagram` compatible with mio.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":1515,"byte_end":1554,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":1559,"byte_end":1562,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The returned stream is moved into nonblocking mode and is otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":1567,"byte_end":1638,"line_start":42,"line_end":42,"column_start":5,"column_end":76}},{"value":"/ ready to get associated with an event loop.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":1643,"byte_end":1690,"line_start":43,"line_end":43,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":2011,"byte_end":2015,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Create an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create an unnamed pair of connected sockets.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":1871,"byte_end":1919,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":1924,"byte_end":1927,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Returns two `UnixDatagrams`s which are connected to each other.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":1932,"byte_end":1999,"line_start":51,"line_end":51,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":2359,"byte_end":2366,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix Datagram socket which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a Unix Datagram socket which is not bound to any address.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":2278,"byte_end":2347,"line_start":60,"line_end":60,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":2773,"byte_end":2780,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"fn connect<P>(&Self, P) -> io::Result<()> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":2554,"byte_end":2603,"line_start":67,"line_end":67,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":2608,"byte_end":2611,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":2616,"byte_end":2688,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":2693,"byte_end":2761,"line_start":70,"line_end":70,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3193,"byte_end":3202,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<UnixDatagram>::try_clone","value":"fn try_clone(&Self) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[{"value":"/ Creates a new independently owned handle to the underlying socket.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":2877,"byte_end":2947,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":2952,"byte_end":2955,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned `UnixListener` is a reference to the same socket that this","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":2960,"byte_end":3035,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ object references. Both handles can be used to accept incoming","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3040,"byte_end":3106,"line_start":78,"line_end":78,"column_start":5,"column_end":71}},{"value":"/ connections and options set on one listener will affect the other.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3111,"byte_end":3181,"line_start":79,"line_end":79,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3392,"byte_end":3402,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"fn local_addr(&Self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.\n","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3341,"byte_end":3380,"line_start":86,"line_end":86,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3616,"byte_end":3625,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"fn peer_addr(&Self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3486,"byte_end":3532,"line_start":91,"line_end":91,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3537,"byte_end":3540,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3545,"byte_end":3604,"line_start":93,"line_end":93,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3866,"byte_end":3875,"line_start":102,"line_end":102,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, net::SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3708,"byte_end":3742,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3747,"byte_end":3750,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3755,"byte_end":3824,"line_start":100,"line_end":100,"column_start":5,"column_end":74}},{"value":"/ whence the data came.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3829,"byte_end":3854,"line_start":101,"line_end":101,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4094,"byte_end":4098,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"recv","qualname":"<UnixDatagram>::recv","value":"fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":3986,"byte_end":4020,"line_start":106,"line_end":106,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4025,"byte_end":4028,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4033,"byte_end":4082,"line_start":108,"line_end":108,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4316,"byte_end":4323,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"fn send_to<P>(&Self, &[u8], P) -> io::Result<usize> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4185,"byte_end":4239,"line_start":113,"line_end":113,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4244,"byte_end":4247,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4252,"byte_end":4304,"line_start":115,"line_end":115,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4727,"byte_end":4731,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"send","qualname":"<UnixDatagram>::send","value":"fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4440,"byte_end":4490,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4495,"byte_end":4498,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The peer address may be set by the `connect` method, and this method","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4503,"byte_end":4575,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ will return an error if the socket has not already been connected.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4580,"byte_end":4650,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4655,"byte_end":4658,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4663,"byte_end":4715,"line_start":125,"line_end":125,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4873,"byte_end":4883,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4814,"byte_end":4861,"line_start":130,"line_end":130,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":5249,"byte_end":5257,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":4969,"byte_end":5034,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":5039,"byte_end":5042,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":5047,"byte_end":5115,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":5120,"byte_end":5190,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":5195,"byte_end":5237,"line_start":139,"line_end":139,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":5381,"byte_end":5389,"line_start":146,"line_end":146,"column_start":8,"column_end":16},"name":"register","qualname":"<UnixDatagram as mio::Evented>::register","value":"fn register(&Self, &Poll, Token, Ready, PollOpt) -> io::Result<()>","parent":{"krate":22,"index":26},"children":[],"decl_id":{"krate":22,"index":27},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":5625,"byte_end":5635,"line_start":154,"line_end":154,"column_start":8,"column_end":18},"name":"reregister","qualname":"<UnixDatagram as mio::Evented>::reregister","value":"fn reregister(&Self, &Poll, Token, Ready, PollOpt) -> io::Result<()>","parent":{"krate":22,"index":26},"children":[],"decl_id":{"krate":22,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":5881,"byte_end":5891,"line_start":162,"line_end":162,"column_start":8,"column_end":18},"name":"deregister","qualname":"<UnixDatagram as mio::Evented>::deregister","value":"fn deregister(&Self, &Poll) -> io::Result<()>","parent":{"krate":22,"index":26},"children":[],"decl_id":{"krate":22,"index":29},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":6034,"byte_end":6043,"line_start":168,"line_end":168,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<UnixDatagram as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> i32","parent":{"krate":1,"index":6753},"children":[],"decl_id":{"krate":1,"index":6754},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":6141,"byte_end":6152,"line_start":174,"line_end":174,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<UnixDatagram as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> i32","parent":{"krate":1,"index":6757},"children":[],"decl_id":{"krate":1,"index":6758},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":6258,"byte_end":6269,"line_start":180,"line_end":180,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<UnixDatagram as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(i32) -> UnixDatagram","parent":{"krate":1,"index":6755},"children":[],"decl_id":{"krate":1,"index":6756},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":304},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":6881,"byte_end":6893,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":305}],"decl_id":null,"docs":" A structure representing a Unix domain socket server.","sig":null,"attributes":[{"value":"/ A structure representing a Unix domain socket server.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":6626,"byte_end":6683,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":6684,"byte_end":6687,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This listener can be used to accept new streams connected to a remote","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":6688,"byte_end":6761,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ endpoint, through which the `read` and `write` methods can be used to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":6762,"byte_end":6835,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ communicate.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":6836,"byte_end":6852,"line_start":19,"line_end":19,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":7028,"byte_end":7032,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified socket.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified socket.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":6953,"byte_end":7016,"line_start":26,"line_end":26,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":7824,"byte_end":7837,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"from_listener","qualname":"<UnixListener>::from_listener","value":"fn from_listener(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a standard library `UnixListener` and returns a wrapped\n `UnixListener` compatible with mio.","sig":null,"attributes":[{"value":"/ Consumes a standard library `UnixListener` and returns a wrapped","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":7564,"byte_end":7632,"line_start":44,"line_end":44,"column_start":5,"column_end":73}},{"value":"/ `UnixListener` compatible with mio.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":7637,"byte_end":7676,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":7681,"byte_end":7684,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The returned stream is moved into nonblocking mode and is otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":7689,"byte_end":7760,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ ready to get associated with an event loop.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":7765,"byte_end":7812,"line_start":48,"line_end":48,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8359,"byte_end":8365,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"accept","qualname":"<UnixListener>::accept","value":"fn accept(&Self) -> io::Result<Option<(UnixStream, net::SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":7993,"byte_end":8048,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8053,"byte_end":8056,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ When established, the corresponding `UnixStream` and the remote peer's","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8061,"byte_end":8135,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ address will be returned as `Ok(Some(...))`. If there is no connection","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8140,"byte_end":8214,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ waiting to be accepted, then `Ok(None)` is returned.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8219,"byte_end":8275,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8280,"byte_end":8283,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ If an error happens while accepting, `Err` is returned.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8288,"byte_end":8347,"line_start":60,"line_end":60,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8971,"byte_end":8981,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"accept_std","qualname":"<UnixListener>::accept_std","value":"fn accept_std(&Self) -> io::Result<Option<(net::UnixStream, net::SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8607,"byte_end":8662,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8667,"byte_end":8670,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method is the same as `accept`, except that it returns a `net::UnixStream` *in blocking mode*","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8675,"byte_end":8777,"line_start":70,"line_end":70,"column_start":5,"column_end":107}},{"value":"/ which isn't bound to a `mio` type. This can later be converted to a `mio` type, if","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8782,"byte_end":8868,"line_start":71,"line_end":71,"column_start":5,"column_end":91}},{"value":"/ necessary.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8873,"byte_end":8887,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8892,"byte_end":8895,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If an error happens while accepting, `Err` is returned.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":8900,"byte_end":8959,"line_start":74,"line_end":74,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":9672,"byte_end":9681,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<UnixListener>::try_clone","value":"fn try_clone(&Self) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[{"value":"/ Creates a new independently owned handle to the underlying socket.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":9356,"byte_end":9426,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":9431,"byte_end":9434,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The returned `UnixListener` is a reference to the same socket that this","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":9439,"byte_end":9514,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ object references. Both handles can be used to accept incoming","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":9519,"byte_end":9585,"line_start":88,"line_end":88,"column_start":5,"column_end":71}},{"value":"/ connections and options set on one listener will affect the other.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":9590,"byte_end":9660,"line_start":89,"line_end":89,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":9862,"byte_end":9872,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"fn local_addr(&Self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":9796,"byte_end":9850,"line_start":94,"line_end":94,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10015,"byte_end":10025,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":9956,"byte_end":10003,"line_start":99,"line_end":99,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10148,"byte_end":10156,"line_start":106,"line_end":106,"column_start":8,"column_end":16},"name":"register","qualname":"<UnixListener as mio::Evented>::register","value":"fn register(&Self, &Poll, Token, Ready, PollOpt) -> io::Result<()>","parent":{"krate":22,"index":26},"children":[],"decl_id":{"krate":22,"index":27},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10328,"byte_end":10338,"line_start":110,"line_end":110,"column_start":8,"column_end":18},"name":"reregister","qualname":"<UnixListener as mio::Evented>::reregister","value":"fn reregister(&Self, &Poll, Token, Ready, PollOpt) -> io::Result<()>","parent":{"krate":22,"index":26},"children":[],"decl_id":{"krate":22,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10559,"byte_end":10569,"line_start":120,"line_end":120,"column_start":8,"column_end":18},"name":"deregister","qualname":"<UnixListener as mio::Evented>::deregister","value":"fn deregister(&Self, &Poll) -> io::Result<()>","parent":{"krate":22,"index":26},"children":[],"decl_id":{"krate":22,"index":29},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10712,"byte_end":10721,"line_start":126,"line_end":126,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<UnixListener as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> i32","parent":{"krate":1,"index":6753},"children":[],"decl_id":{"krate":1,"index":6754},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10819,"byte_end":10830,"line_start":132,"line_end":132,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<UnixListener as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> i32","parent":{"krate":1,"index":6757},"children":[],"decl_id":{"krate":1,"index":6758},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10936,"byte_end":10947,"line_start":138,"line_end":138,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<UnixListener as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(i32) -> UnixListener","parent":{"krate":1,"index":6755},"children":[],"decl_id":{"krate":1,"index":6756},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17760,"byte_end":17770,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":309}],"decl_id":null,"docs":" A Unix stream socket.","sig":null,"attributes":[{"value":"/ A Unix stream socket.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":16909,"byte_end":16934,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":16935,"byte_end":16938,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type represents a `SOCK_STREAM` connection of the `AF_UNIX` family,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":16939,"byte_end":17015,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ otherwise known as Unix domain sockets or Unix sockets. This stream is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17016,"byte_end":17090,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ readable/writable and acts similarly to a TCP stream where reads/writes are","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17091,"byte_end":17170,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ all in order with respect to the other connected end.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17171,"byte_end":17228,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17229,"byte_end":17232,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Streams can either be connected to paths locally or another ephemeral socket","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17233,"byte_end":17313,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ created by the `pair` function.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17314,"byte_end":17349,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17350,"byte_end":17353,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A `UnixStream` implements the `Read`, `Write`, `Evented`, `AsRawFd`,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17354,"byte_end":17426,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `IntoRawFd`, and `FromRawFd` traits for interoperating with other I/O code.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17427,"byte_end":17506,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17507,"byte_end":17510,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that all values of this type are typically in nonblocking mode, so the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17511,"byte_end":17590,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ `read` and `write` methods may return an error with the kind of","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17591,"byte_end":17658,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/ `WouldBlock`, indicating that it's not ready to read/write just yet.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17659,"byte_end":17731,"line_start":34,"line_end":34,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":18116,"byte_end":18123,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixStream>::connect","value":"fn connect<P>(P) -> io::Result<UnixStream> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17826,"byte_end":17869,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17874,"byte_end":17877,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ The socket returned may not be readable and/or writable yet, as the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17882,"byte_end":17953,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"/ connection may be in progress. The socket should be registered with an","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17958,"byte_end":18032,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ event loop to wait on both of these properties being available.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":18037,"byte_end":18104,"line_start":45,"line_end":45,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":19024,"byte_end":19035,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<UnixStream>::from_stream","value":"fn from_stream(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a standard library `UnixStream` and returns a wrapped\n `UnixStream` compatible with mio.","sig":null,"attributes":[{"value":"/ Consumes a standard library `UnixStream` and returns a wrapped","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":18768,"byte_end":18834,"line_start":65,"line_end":65,"column_start":5,"column_end":71}},{"value":"/ `UnixStream` compatible with mio.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":18839,"byte_end":18876,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":18881,"byte_end":18884,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ The returned stream is moved into nonblocking mode and is otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":18889,"byte_end":18960,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ ready to get associated with an event loop.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":18965,"byte_end":19012,"line_start":69,"line_end":69,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":19323,"byte_end":19327,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":19185,"byte_end":19234,"line_start":75,"line_end":75,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":19239,"byte_end":19242,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Returns two `UnixStream`s which are connected to each other.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":19247,"byte_end":19311,"line_start":77,"line_end":77,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":19897,"byte_end":19906,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<UnixStream>::try_clone","value":"fn try_clone(&Self) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[{"value":"/ Creates a new independently owned handle to the underlying socket.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":19558,"byte_end":19628,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":19633,"byte_end":19636,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The returned `UnixStream` is a reference to the same stream that this","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":19641,"byte_end":19714,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ object references. Both handles will read and write the same stream of","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":19719,"byte_end":19793,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ data, and options set on one stream will be propogated to the other","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":19798,"byte_end":19869,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ stream.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":19874,"byte_end":19885,"line_start":90,"line_end":90,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20121,"byte_end":20131,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"fn local_addr(&Self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20041,"byte_end":20109,"line_start":97,"line_end":97,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20296,"byte_end":20305,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"fn peer_addr(&Self) -> io::Result<net::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20215,"byte_end":20284,"line_start":102,"line_end":102,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20447,"byte_end":20457,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20388,"byte_end":20435,"line_start":107,"line_end":107,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20824,"byte_end":20832,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20543,"byte_end":20609,"line_start":112,"line_end":112,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20614,"byte_end":20617,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20622,"byte_end":20690,"line_start":114,"line_end":114,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20695,"byte_end":20765,"line_start":115,"line_end":115,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20770,"byte_end":20812,"line_start":116,"line_end":116,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":21566,"byte_end":21575,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"read_bufs","qualname":"<UnixStream>::read_bufs","value":"fn read_bufs(&Self, &mut [&mut IoVec]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Read in a list of buffers all at once.","sig":null,"attributes":[{"value":"/ Read in a list of buffers all at once.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20919,"byte_end":20961,"line_start":121,"line_end":121,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20966,"byte_end":20969,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This operation will attempt to read bytes from this socket and place","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":20974,"byte_end":21046,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ them into the list of buffers provided. Note that each buffer is an","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":21051,"byte_end":21122,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ `IoVec` which can be created from a byte slice.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":21127,"byte_end":21178,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":21183,"byte_end":21186,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The buffers provided will be filled in sequentially. A buffer will be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":21191,"byte_end":21264,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ entirely filled up before the next is written to.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":21269,"byte_end":21322,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":21327,"byte_end":21330,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The number of bytes read is returned, if successful, or an error is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":21335,"byte_end":21406,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/ returned otherwise. If no bytes are available to be read yet then","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":21411,"byte_end":21480,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/ a \"would block\" error is returned. This operation does not block.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":21485,"byte_end":21554,"line_start":132,"line_end":132,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":22709,"byte_end":22719,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"write_bufs","qualname":"<UnixStream>::write_bufs","value":"fn write_bufs(&Self, &[&IoVec]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Write a list of buffers all at once.","sig":null,"attributes":[{"value":"/ Write a list of buffers all at once.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":22102,"byte_end":22142,"line_start":148,"line_end":148,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":22147,"byte_end":22150,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This operation will attempt to write a list of byte buffers to this","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":22155,"byte_end":22226,"line_start":150,"line_end":150,"column_start":5,"column_end":76}},{"value":"/ socket. Note that each buffer is an `IoVec` which can be created from a","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":22231,"byte_end":22306,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ byte slice.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":22311,"byte_end":22326,"line_start":152,"line_end":152,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":22331,"byte_end":22334,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ The buffers provided will be written sequentially. A buffer will be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":22339,"byte_end":22410,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ entirely written before the next is written.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":22415,"byte_end":22463,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":22468,"byte_end":22471,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ The number of bytes written is returned, if successful, or an error is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":22476,"byte_end":22550,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ returned otherwise. If the socket is not currently writable then a","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":22555,"byte_end":22625,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ \"would block\" error is returned. This operation does not block.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":22630,"byte_end":22697,"line_start":159,"line_end":159,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":23272,"byte_end":23280,"line_start":177,"line_end":177,"column_start":8,"column_end":16},"name":"register","qualname":"<UnixStream as mio::Evented>::register","value":"fn register(&Self, &Poll, Token, Ready, PollOpt) -> io::Result<()>","parent":{"krate":22,"index":26},"children":[],"decl_id":{"krate":22,"index":27},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":23516,"byte_end":23526,"line_start":185,"line_end":185,"column_start":8,"column_end":18},"name":"reregister","qualname":"<UnixStream as mio::Evented>::reregister","value":"fn reregister(&Self, &Poll, Token, Ready, PollOpt) -> io::Result<()>","parent":{"krate":22,"index":26},"children":[],"decl_id":{"krate":22,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":23772,"byte_end":23782,"line_start":193,"line_end":193,"column_start":8,"column_end":18},"name":"deregister","qualname":"<UnixStream as mio::Evented>::deregister","value":"fn deregister(&Self, &Poll) -> io::Result<()>","parent":{"krate":22,"index":26},"children":[],"decl_id":{"krate":22,"index":29},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":23920,"byte_end":23924,"line_start":199,"line_end":199,"column_start":8,"column_end":12},"name":"read","qualname":"<UnixStream as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4527},"children":[],"decl_id":{"krate":1,"index":4528},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24059,"byte_end":24063,"line_start":205,"line_end":205,"column_start":8,"column_end":12},"name":"read","qualname":"<&'a UnixStream as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4527},"children":[],"decl_id":{"krate":1,"index":4528},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24194,"byte_end":24199,"line_start":211,"line_end":211,"column_start":8,"column_end":13},"name":"write","qualname":"<UnixStream as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4584},"children":[],"decl_id":{"krate":1,"index":4585},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24294,"byte_end":24299,"line_start":215,"line_end":215,"column_start":8,"column_end":13},"name":"flush","qualname":"<UnixStream as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4584},"children":[],"decl_id":{"krate":1,"index":4589},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24410,"byte_end":24415,"line_start":221,"line_end":221,"column_start":8,"column_end":13},"name":"write","qualname":"<&'a UnixStream as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4584},"children":[],"decl_id":{"krate":1,"index":4585},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24513,"byte_end":24518,"line_start":225,"line_end":225,"column_start":8,"column_end":13},"name":"flush","qualname":"<&'a UnixStream as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4584},"children":[],"decl_id":{"krate":1,"index":4589},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24626,"byte_end":24635,"line_start":231,"line_end":231,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<UnixStream as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> i32","parent":{"krate":1,"index":6753},"children":[],"decl_id":{"krate":1,"index":6754},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24731,"byte_end":24742,"line_start":237,"line_end":237,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<UnixStream as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> i32","parent":{"krate":1,"index":6757},"children":[],"decl_id":{"krate":1,"index":6758},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24846,"byte_end":24857,"line_start":243,"line_end":243,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<UnixStream as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(i32) -> UnixStream","parent":{"krate":1,"index":6755},"children":[],"decl_id":{"krate":1,"index":6756},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":868,"byte_end":880,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":5359,"byte_end":5371,"line_start":145,"line_end":145,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":6012,"byte_end":6024,"line_start":167,"line_end":167,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":6119,"byte_end":6131,"line_start":173,"line_end":173,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":6229,"byte_end":6241,"line_start":179,"line_end":179,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":6934,"byte_end":6946,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10126,"byte_end":10138,"line_start":105,"line_end":105,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10690,"byte_end":10702,"line_start":125,"line_end":125,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10797,"byte_end":10809,"line_start":131,"line_end":131,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10907,"byte_end":10919,"line_start":137,"line_end":137,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/socket.rs","byte_start":12127,"byte_end":12133,"line_start":42,"line_end":42,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/socket.rs","byte_start":14911,"byte_end":14917,"line_start":116,"line_end":116,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17809,"byte_end":17819,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":23252,"byte_end":23262,"line_start":176,"line_end":176,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":23900,"byte_end":23910,"line_start":198,"line_end":198,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24174,"byte_end":24184,"line_start":210,"line_end":210,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24606,"byte_end":24616,"line_start":230,"line_end":230,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24711,"byte_end":24721,"line_start":236,"line_end":236,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24819,"byte_end":24829,"line_start":242,"line_end":242,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":868,"byte_end":880,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":5359,"byte_end":5371,"line_start":145,"line_end":145,"column_start":18,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":300},"to":{"krate":22,"index":26}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":6012,"byte_end":6024,"line_start":167,"line_end":167,"column_start":18,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":300},"to":{"krate":1,"index":6753}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":6119,"byte_end":6131,"line_start":173,"line_end":173,"column_start":20,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":300},"to":{"krate":1,"index":6757}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/datagram.rs","byte_start":6229,"byte_end":6241,"line_start":179,"line_end":179,"column_start":20,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":300},"to":{"krate":1,"index":6755}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":6934,"byte_end":6946,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10126,"byte_end":10138,"line_start":105,"line_end":105,"column_start":18,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":304},"to":{"krate":22,"index":26}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10690,"byte_end":10702,"line_start":125,"line_end":125,"column_start":18,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":6753}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10797,"byte_end":10809,"line_start":131,"line_end":131,"column_start":20,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":6757}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/listener.rs","byte_start":10907,"byte_end":10919,"line_start":137,"line_end":137,"column_start":20,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":6755}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/socket.rs","byte_start":12127,"byte_end":12133,"line_start":42,"line_end":42,"column_start":6,"column_end":12},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/socket.rs","byte_start":14911,"byte_end":14917,"line_start":116,"line_end":116,"column_start":15,"column_end":21},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":3420}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":17809,"byte_end":17819,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":23252,"byte_end":23262,"line_start":176,"line_end":176,"column_start":18,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":308},"to":{"krate":22,"index":26}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":23900,"byte_end":23910,"line_start":198,"line_end":198,"column_start":15,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":308},"to":{"krate":1,"index":4527}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24174,"byte_end":24184,"line_start":210,"line_end":210,"column_start":16,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":308},"to":{"krate":1,"index":4584}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24606,"byte_end":24616,"line_start":230,"line_end":230,"column_start":18,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":308},"to":{"krate":1,"index":6753}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24711,"byte_end":24721,"line_start":236,"line_end":236,"column_start":20,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":308},"to":{"krate":1,"index":6757}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-uds-0.6.8/src/stream.rs","byte_start":24819,"byte_end":24829,"line_start":242,"line_end":242,"column_start":20,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":308},"to":{"krate":1,"index":6755}}]}