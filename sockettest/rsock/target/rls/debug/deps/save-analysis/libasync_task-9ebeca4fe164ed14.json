{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1","program":"/home/pythomancer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_task","--edition=2018","/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9ebeca4fe164ed14","-C","extra-filename=-9ebeca4fe164ed14","--out-dir","/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps","-L","dependency=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps","--extern","libc=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/liblibc-2c19b4515329ea54.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pythomancer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libasync_task-9ebeca4fe164ed14.rmeta"},"prelude":{"crate_id":{"name":"async_task","disambiguator":[5346394820997263809,0]},"crate_root":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src","external_crates":[{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14414087034259949263,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13372101680896079740,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5118101865554607907,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[8025854276978217217,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","num":5,"id":{"name":"libc","disambiguator":[5170842456214530381,0]}}],"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":0,"byte_end":4653,"line_start":1,"line_end":136,"column_start":1,"column_end":34}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":4509,"byte_end":4519,"line_start":131,"line_end":131,"column_start":29,"column_end":39},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":307},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":4543,"byte_end":4548,"line_start":132,"line_end":132,"column_start":23,"column_end":28},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":4550,"byte_end":4554,"line_start":132,"line_end":132,"column_start":30,"column_end":34},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":395},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":4582,"byte_end":4590,"line_start":133,"line_end":133,"column_start":26,"column_end":34},"alias_span":null,"name":"waker_fn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":4641,"byte_end":4652,"line_start":136,"line_end":136,"column_start":22,"column_end":33},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":0,"byte_end":4653,"line_start":1,"line_end":136,"column_start":1,"column_end":34},"name":"","qualname":"::","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":51},{"krate":0,"index":125},{"krate":0,"index":255},{"krate":0,"index":265},{"krate":0,"index":353},{"krate":0,"index":374},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421}],"decl_id":null,"docs":" Task abstraction for building executors.","sig":null,"attributes":[{"value":"/ Task abstraction for building executors.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":0,"byte_end":44,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":45,"byte_end":48,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Spawning","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":49,"byte_end":63,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":64,"byte_end":67,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ To spawn a future onto an executor, we first need to allocate it on the heap and keep some","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":68,"byte_end":162,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ state alongside it. The state indicates whether the future is ready for polling, waiting to be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":163,"byte_end":261,"line_start":6,"line_end":6,"column_start":1,"column_end":99}},{"value":"/ woken up, or completed. Such a future is called a *task*.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":262,"byte_end":323,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":324,"byte_end":327,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All executors have some kind of queue that holds runnable tasks:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":328,"byte_end":396,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":397,"byte_end":400,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":401,"byte_end":408,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ let (sender, receiver) = crossbeam::channel::unbounded();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":409,"byte_end":470,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":471,"byte_end":476,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ # // A future that will get spawned.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":477,"byte_end":517,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/ # let future = async { 1 + 2 };","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":518,"byte_end":553,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":554,"byte_end":559,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/ # // A function that schedules the task when it gets woken up.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":560,"byte_end":626,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ # let schedule = move |task| sender.send(task).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":627,"byte_end":687,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":688,"byte_end":693,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # // Construct a task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":694,"byte_end":720,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ # let (task, handle) = async_task::spawn(future, schedule, ());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":721,"byte_end":788,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":789,"byte_end":796,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":797,"byte_end":800,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ A task is constructed using either [`spawn`] or [`spawn_local`]:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":801,"byte_end":869,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":870,"byte_end":873,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":874,"byte_end":881,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # let (sender, receiver) = crossbeam::channel::unbounded();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":882,"byte_end":945,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":946,"byte_end":951,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ // A future that will be spawned.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":952,"byte_end":989,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/ let future = async { 1 + 2 };","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":990,"byte_end":1023,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1024,"byte_end":1027,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // A function that schedules the task when it gets woken up.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1028,"byte_end":1092,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/ let schedule = move |task| sender.send(task).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1093,"byte_end":1151,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1152,"byte_end":1155,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Construct a task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1156,"byte_end":1180,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/ let (task, handle) = async_task::spawn(future, schedule, ());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1181,"byte_end":1246,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1247,"byte_end":1250,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Push the task into the queue by invoking its schedule function.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1251,"byte_end":1321,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/ task.schedule();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1322,"byte_end":1342,"line_start":39,"line_end":39,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1343,"byte_end":1350,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1351,"byte_end":1354,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The last argument to the [`spawn`] function is a *tag*, an arbitrary piece of data associated","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1355,"byte_end":1452,"line_start":42,"line_end":42,"column_start":1,"column_end":98}},{"value":"/ with the task. In most executors, this is typically a task identifier or task-local storage.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1453,"byte_end":1549,"line_start":43,"line_end":43,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1550,"byte_end":1553,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The function returns a runnable [`Task`] and a [`JoinHandle`] that can await the result.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1554,"byte_end":1646,"line_start":45,"line_end":45,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1647,"byte_end":1650,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Execution","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1651,"byte_end":1666,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1667,"byte_end":1670,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Task executors have some kind of main loop that drives tasks to completion. That means taking","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1671,"byte_end":1768,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/ runnable tasks out of the queue and running each one in order:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1769,"byte_end":1835,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1836,"byte_end":1839,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1840,"byte_end":1853,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/ # let (sender, receiver) = crossbeam::channel::unbounded();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1854,"byte_end":1917,"line_start":53,"line_end":53,"column_start":1,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1918,"byte_end":1923,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ # // A future that will get spawned.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1924,"byte_end":1964,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/ # let future = async { 1 + 2 };","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":1965,"byte_end":2000,"line_start":56,"line_end":56,"column_start":1,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2001,"byte_end":2006,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ # // A function that schedules the task when it gets woken up.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2007,"byte_end":2073,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ # let schedule = move |task| sender.send(task).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2074,"byte_end":2134,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2135,"byte_end":2140,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ # // Construct a task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2141,"byte_end":2167,"line_start":61,"line_end":61,"column_start":1,"column_end":27}},{"value":"/ # let (task, handle) = async_task::spawn(future, schedule, ());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2168,"byte_end":2235,"line_start":62,"line_end":62,"column_start":1,"column_end":68}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2236,"byte_end":2241,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ # // Push the task into the queue by invoking its schedule function.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2242,"byte_end":2314,"line_start":64,"line_end":64,"column_start":1,"column_end":73}},{"value":"/ # task.schedule();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2315,"byte_end":2337,"line_start":65,"line_end":65,"column_start":1,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2338,"byte_end":2343,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ for task in receiver {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2344,"byte_end":2370,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/     task.run();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2371,"byte_end":2390,"line_start":68,"line_end":68,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2391,"byte_end":2396,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2397,"byte_end":2404,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2405,"byte_end":2408,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a task is run, its future gets polled. If polling does not complete the task, that means","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2409,"byte_end":2506,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/ it's waiting for another future and needs to go to sleep. When woken up, its schedule function","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2507,"byte_end":2605,"line_start":73,"line_end":73,"column_start":1,"column_end":99}},{"value":"/ will be invoked, pushing it back into the queue so that it can be run again.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2606,"byte_end":2686,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2687,"byte_end":2690,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2691,"byte_end":2709,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2710,"byte_end":2713,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Both [`Task`] and [`JoinHandle`] have methods that cancel the task. When cancelled, the task's","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2714,"byte_end":2812,"line_start":78,"line_end":78,"column_start":1,"column_end":99}},{"value":"/ future will not be polled again and will get dropped instead.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2813,"byte_end":2878,"line_start":79,"line_end":79,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2879,"byte_end":2882,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ If cancelled by the [`Task`] instance, the task is destroyed immediately. If cancelled by the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2883,"byte_end":2980,"line_start":81,"line_end":81,"column_start":1,"column_end":98}},{"value":"/ [`JoinHandle`] instance, it will be scheduled one more time and the next attempt to run it will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":2981,"byte_end":3080,"line_start":82,"line_end":82,"column_start":1,"column_end":100}},{"value":"/ simply destroy it.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3081,"byte_end":3103,"line_start":83,"line_end":83,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3104,"byte_end":3107,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3108,"byte_end":3125,"line_start":85,"line_end":85,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3126,"byte_end":3129,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Task construction incurs a single allocation that holds its state, the schedule function, and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3130,"byte_end":3227,"line_start":87,"line_end":87,"column_start":1,"column_end":98}},{"value":"/ the future or the result of the future if completed.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3228,"byte_end":3284,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3285,"byte_end":3288,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The layout of a task is equivalent to 4 `usize`s followed by the schedule function, and then by","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3289,"byte_end":3388,"line_start":90,"line_end":90,"column_start":1,"column_end":100}},{"value":"/ a union of the future and its output.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3389,"byte_end":3430,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3431,"byte_end":3434,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # Waking","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3435,"byte_end":3447,"line_start":93,"line_end":93,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3448,"byte_end":3451,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The handy [`waker_fn`] constructor converts any function into a [`Waker`]. Every time it is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3452,"byte_end":3547,"line_start":95,"line_end":95,"column_start":1,"column_end":96}},{"value":"/ woken, the function gets called:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3548,"byte_end":3584,"line_start":96,"line_end":96,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3585,"byte_end":3588,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3589,"byte_end":3596,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/ let waker = async_task::waker_fn(|| println!(\"Wake!\"));","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3597,"byte_end":3656,"line_start":99,"line_end":99,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3657,"byte_end":3660,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Prints \"Wake!\" twice.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3661,"byte_end":3689,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/ waker.wake_by_ref();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3690,"byte_end":3714,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/ waker.wake_by_ref();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3715,"byte_end":3739,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3740,"byte_end":3747,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3748,"byte_end":3751,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This is useful for implementing single-future executors like [`block_on`].","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3752,"byte_end":3830,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3831,"byte_end":3834,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3835,"byte_end":3863,"line_start":108,"line_end":108,"column_start":1,"column_end":29}},{"value":"/ [`spawn_local`]: fn.spawn_local.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3864,"byte_end":3904,"line_start":109,"line_end":109,"column_start":1,"column_end":41}},{"value":"/ [`waker_fn`]: fn.waker_fn.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3905,"byte_end":3939,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"/ [`Task`]: struct.Task.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3940,"byte_end":3970,"line_start":111,"line_end":111,"column_start":1,"column_end":31}},{"value":"/ [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":3971,"byte_end":4013,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`Waker`]: https://doc.rust-lang.org/std/task/struct.Waker.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":4014,"byte_end":4081,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"/ [`block_on`]: https://github.com/async-rs/async-task/blob/master/examples/block.rs","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":4082,"byte_end":4168,"line_start":114,"line_end":114,"column_start":1,"column_end":87}},{"value":"no_std","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":4170,"byte_end":4180,"line_start":116,"line_end":116,"column_start":1,"column_end":11}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/lib.rs","byte_start":4181,"byte_end":4252,"line_start":117,"line_end":117,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":91},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":11847,"byte_end":11857,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"JoinHandle","qualname":"::join_handle::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" A handle that awaits the result of a task.","sig":null,"attributes":[{"value":"/ A handle that awaits the result of a task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":11572,"byte_end":11618,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":11619,"byte_end":11622,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type is a future that resolves to an `Option<R>` where:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":11623,"byte_end":11687,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":11688,"byte_end":11691,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `None` indicates the task has panicked or was cancelled.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":11692,"byte_end":11754,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/ * `Some(result)` indicates the task has completed with `result` of type `R`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":11755,"byte_end":11835,"line_start":18,"line_end":18,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12416,"byte_end":12422,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"cancel","qualname":"<JoinHandle<R, T>>::cancel","value":"fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancels the task.","sig":null,"attributes":[{"value":"/ Cancels the task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12212,"byte_end":12233,"line_start":33,"line_end":33,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12238,"byte_end":12241,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ If the task has already completed, calling this method will have no effect.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12246,"byte_end":12325,"line_start":35,"line_end":35,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12330,"byte_end":12333,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ When a task is cancelled, its future will not be polled again.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12338,"byte_end":12404,"line_start":37,"line_end":37,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":14136,"byte_end":14139,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"tag","qualname":"<JoinHandle<R, T>>::tag","value":"fn tag(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the tag stored inside the task.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the tag stored inside the task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":14066,"byte_end":14124,"line_start":85,"line_end":85,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":14423,"byte_end":14428,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"waker","qualname":"<JoinHandle<R, T>>::waker","value":"fn waker(&Self) -> Waker","parent":null,"children":[],"decl_id":null,"docs":" Returns a waker associated with the task.\n","sig":null,"attributes":[{"value":"/ Returns a waker associated with the task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":14366,"byte_end":14411,"line_start":96,"line_end":96,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":14719,"byte_end":14723,"line_start":109,"line_end":109,"column_start":8,"column_end":12},"name":"drop","qualname":"<JoinHandle<R, T> as core::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":1,"index":3420},"children":[],"decl_id":{"krate":1,"index":3421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":18303,"byte_end":18307,"line_start":192,"line_end":192,"column_start":8,"column_end":12},"name":"poll","qualname":"<JoinHandle<R, T> as core::future::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13444},"children":[],"decl_id":{"krate":1,"index":13446},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":21242,"byte_end":21245,"line_start":259,"line_end":259,"column_start":8,"column_end":11},"name":"fmt","qualname":"<JoinHandle<R, T> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10016},"children":[],"decl_id":{"krate":1,"index":10017},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":307},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50974,"byte_end":50979,"line_start":49,"line_end":49,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn","value":"fn spawn<F, R, S, T>(F, S, T) -> (Task<T>, JoinHandle<R, T>) where\nF: Future<Output = R> + Send + 'static, R: Send + 'static, S: Fn(Task<T>) ->\n() + Send + Sync + 'static, T: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new task.","sig":null,"attributes":[{"value":"/ Creates a new task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":49665,"byte_end":49688,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":49689,"byte_end":49692,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This constructor returns a [`Task`] reference that runs the future and a [`JoinHandle`] that","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":49693,"byte_end":49789,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ awaits its result.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":49790,"byte_end":49812,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":49813,"byte_end":49816,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When run, the task polls `future`. When woken up, it gets scheduled for running by the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":49817,"byte_end":49907,"line_start":18,"line_end":18,"column_start":1,"column_end":91}},{"value":"/ `schedule` function. Argument `tag` is an arbitrary piece of data stored inside the task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":49908,"byte_end":50001,"line_start":19,"line_end":19,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50002,"byte_end":50005,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The schedule function should not attempt to run the task nor to drop it. Instead, it should","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50006,"byte_end":50101,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ push the task into some kind of queue so that it can be processed later.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50102,"byte_end":50178,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50179,"byte_end":50182,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ If you need to spawn a future that does not implement [`Send`], consider using the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50183,"byte_end":50269,"line_start":24,"line_end":24,"column_start":1,"column_end":87}},{"value":"/ [`spawn_local`] function instead.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50270,"byte_end":50307,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50308,"byte_end":50311,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`Task`]: struct.Task.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50312,"byte_end":50342,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/ [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50343,"byte_end":50385,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/ [`Send`]: https://doc.rust-lang.org/std/marker/trait.Send.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50386,"byte_end":50452,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ [`spawn_local`]: fn.spawn_local.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50453,"byte_end":50493,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50494,"byte_end":50497,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50498,"byte_end":50512,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50513,"byte_end":50516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50517,"byte_end":50524,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use crossbeam::channel;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50525,"byte_end":50552,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50553,"byte_end":50556,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // The future inside the task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50557,"byte_end":50591,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ let future = async {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50592,"byte_end":50616,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50617,"byte_end":50651,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ };","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50652,"byte_end":50658,"line_start":40,"line_end":40,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50659,"byte_end":50662,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // If the task gets woken up, it will be sent into this channel.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50663,"byte_end":50731,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/ let (s, r) = channel::unbounded();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50732,"byte_end":50770,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ let schedule = move |task| s.send(task).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50771,"byte_end":50824,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50825,"byte_end":50828,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Create a task with the future and the schedule function.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50829,"byte_end":50892,"line_start":46,"line_end":46,"column_start":1,"column_end":64}},{"value":"/ let (task, handle) = async_task::spawn(future, schedule, ());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50893,"byte_end":50958,"line_start":47,"line_end":47,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":50959,"byte_end":50966,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":312},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52864,"byte_end":52875,"line_start":105,"line_end":105,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn_local","value":"fn spawn_local<F, R, S, T>(F, S, T) -> (Task<T>, JoinHandle<R, T>) where\nF: Future<Output = R> + 'static, R: 'static, S: Fn(Task<T>) -> () + Send +\nSync + 'static, T: Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new local task.","sig":null,"attributes":[{"value":"/ Creates a new local task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":51463,"byte_end":51492,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":51493,"byte_end":51496,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This constructor returns a [`Task`] reference that runs the future and a [`JoinHandle`] that","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":51497,"byte_end":51593,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/ awaits its result.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":51594,"byte_end":51616,"line_start":71,"line_end":71,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":51617,"byte_end":51620,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ When run, the task polls `future`. When woken up, it gets scheduled for running by the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":51621,"byte_end":51711,"line_start":73,"line_end":73,"column_start":1,"column_end":91}},{"value":"/ `schedule` function. Argument `tag` is an arbitrary piece of data stored inside the task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":51712,"byte_end":51805,"line_start":74,"line_end":74,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":51806,"byte_end":51809,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The schedule function should not attempt to run the task nor to drop it. Instead, it should","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":51810,"byte_end":51905,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/ push the task into some kind of queue so that it can be processed later.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":51906,"byte_end":51982,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":51983,"byte_end":51986,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Unlike [`spawn`], this function does not require the future to implement [`Send`]. If the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":51987,"byte_end":52080,"line_start":79,"line_end":79,"column_start":1,"column_end":94}},{"value":"/ [`Task`] reference is run or dropped on a thread it was not created on, a panic will occur.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52081,"byte_end":52176,"line_start":80,"line_end":80,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52177,"byte_end":52180,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [`Task`]: struct.Task.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52181,"byte_end":52211,"line_start":82,"line_end":82,"column_start":1,"column_end":31}},{"value":"/ [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52212,"byte_end":52254,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52255,"byte_end":52283,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/ [`Send`]: https://doc.rust-lang.org/std/marker/trait.Send.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52284,"byte_end":52350,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52351,"byte_end":52354,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52355,"byte_end":52369,"line_start":87,"line_end":87,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52370,"byte_end":52373,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52374,"byte_end":52381,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ use crossbeam::channel;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52382,"byte_end":52409,"line_start":90,"line_end":90,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52410,"byte_end":52413,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ // The future inside the task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52414,"byte_end":52448,"line_start":92,"line_end":92,"column_start":1,"column_end":35}},{"value":"/ let future = async {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52449,"byte_end":52473,"line_start":93,"line_end":93,"column_start":1,"column_end":25}},{"value":"/     println!(\"Hello, world!\");","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52474,"byte_end":52508,"line_start":94,"line_end":94,"column_start":1,"column_end":35}},{"value":"/ };","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52509,"byte_end":52515,"line_start":95,"line_end":95,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52516,"byte_end":52519,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ // If the task gets woken up, it will be sent into this channel.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52520,"byte_end":52588,"line_start":97,"line_end":97,"column_start":1,"column_end":69}},{"value":"/ let (s, r) = channel::unbounded();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52589,"byte_end":52627,"line_start":98,"line_end":98,"column_start":1,"column_end":39}},{"value":"/ let schedule = move |task| s.send(task).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52628,"byte_end":52681,"line_start":99,"line_end":99,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52682,"byte_end":52685,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Create a task with the future and the schedule function.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52686,"byte_end":52749,"line_start":101,"line_end":101,"column_start":1,"column_end":64}},{"value":"/ let (task, handle) = async_task::spawn_local(future, schedule, ());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52750,"byte_end":52821,"line_start":102,"line_end":102,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52822,"byte_end":52829,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"cfg(any(unix, windows))","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":52830,"byte_end":52856,"line_start":104,"line_end":104,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55703,"byte_end":55707,"line_start":190,"line_end":190,"column_start":12,"column_end":16},"name":"Task","qualname":"::task::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"decl_id":null,"docs":" A task reference that runs its future.","sig":null,"attributes":[{"value":"/ A task reference that runs its future.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":54509,"byte_end":54551,"line_start":170,"line_end":170,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":54552,"byte_end":54555,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ At any moment in time, there is at most one [`Task`] reference associated with a particular","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":54556,"byte_end":54651,"line_start":172,"line_end":172,"column_start":1,"column_end":96}},{"value":"/ task. Running consumes the [`Task`] reference and polls its internal future. If the future is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":54652,"byte_end":54749,"line_start":173,"line_end":173,"column_start":1,"column_end":98}},{"value":"/ still pending after getting polled, the [`Task`] reference simply won't exist until a [`Waker`]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":54750,"byte_end":54849,"line_start":174,"line_end":174,"column_start":1,"column_end":100}},{"value":"/ notifies the task. If the future completes, its result becomes available to the [`JoinHandle`].","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":54850,"byte_end":54949,"line_start":175,"line_end":175,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":54950,"byte_end":54953,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ When a task is woken up, its [`Task`] reference is recreated and passed to the schedule","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":54954,"byte_end":55045,"line_start":177,"line_end":177,"column_start":1,"column_end":92}},{"value":"/ function. In most executors, scheduling simply pushes the [`Task`] reference into a queue of","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55046,"byte_end":55142,"line_start":178,"line_end":178,"column_start":1,"column_end":97}},{"value":"/ runnable tasks.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55143,"byte_end":55162,"line_start":179,"line_end":179,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55163,"byte_end":55166,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ If the [`Task`] reference is dropped without getting run, the task is automatically cancelled.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55167,"byte_end":55265,"line_start":181,"line_end":181,"column_start":1,"column_end":99}},{"value":"/ When cancelled, the task won't be scheduled again even if a [`Waker`] wakes it. It is possible","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55266,"byte_end":55364,"line_start":182,"line_end":182,"column_start":1,"column_end":99}},{"value":"/ for the [`JoinHandle`] to cancel while the [`Task`] reference exists, in which case an attempt","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55365,"byte_end":55463,"line_start":183,"line_end":183,"column_start":1,"column_end":99}},{"value":"/ to run the task won't do anything.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55464,"byte_end":55502,"line_start":184,"line_end":184,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55503,"byte_end":55506,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ [`run()`]: struct.Task.html#method.run","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55507,"byte_end":55549,"line_start":186,"line_end":186,"column_start":1,"column_end":43}},{"value":"/ [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55550,"byte_end":55592,"line_start":187,"line_end":187,"column_start":1,"column_end":43}},{"value":"/ [`Task`]: struct.Task.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55593,"byte_end":55623,"line_start":188,"line_end":188,"column_start":1,"column_end":31}},{"value":"/ [`Waker`]: https://doc.rust-lang.org/std/task/struct.Waker.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55624,"byte_end":55691,"line_start":189,"line_end":189,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56217,"byte_end":56225,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"schedule","qualname":"<Task<T>>::schedule","value":"fn schedule(Self)","parent":null,"children":[],"decl_id":null,"docs":" Schedules the task.","sig":null,"attributes":[{"value":"/ Schedules the task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55983,"byte_end":56006,"line_start":202,"line_end":202,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56011,"byte_end":56014,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method that simply reschedules the task by passing it to its schedule","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56019,"byte_end":56114,"line_start":204,"line_end":204,"column_start":5,"column_end":100}},{"value":"/ function.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56119,"byte_end":56132,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56137,"byte_end":56140,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ If the task is cancelled, this method won't do anything.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56145,"byte_end":56205,"line_start":207,"line_end":207,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57265,"byte_end":57268,"line_start":233,"line_end":233,"column_start":12,"column_end":15},"name":"run","qualname":"<Task<T>>::run","value":"fn run(Self)","parent":null,"children":[],"decl_id":null,"docs":" Runs the task.","sig":null,"attributes":[{"value":"/ Runs the task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56431,"byte_end":56449,"line_start":218,"line_end":218,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56454,"byte_end":56457,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ This method polls the task's future. If the future completes, its result will become","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56462,"byte_end":56550,"line_start":220,"line_end":220,"column_start":5,"column_end":93}},{"value":"/ available to the [`JoinHandle`]. And if the future is still pending, the task will have to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56555,"byte_end":56649,"line_start":221,"line_end":221,"column_start":5,"column_end":99}},{"value":"/ be woken up in order to be rescheduled and run again.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56654,"byte_end":56711,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56716,"byte_end":56719,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ If the task was cancelled by a [`JoinHandle`] before it gets run, then this method won't do","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56724,"byte_end":56819,"line_start":224,"line_end":224,"column_start":5,"column_end":100}},{"value":"/ anything.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56824,"byte_end":56837,"line_start":225,"line_end":225,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56842,"byte_end":56845,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ It is possible that polling the future panics, in which case the panic will be propagated","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56850,"byte_end":56943,"line_start":227,"line_end":227,"column_start":5,"column_end":98}},{"value":"/ into the caller. It is advised that invocations of this method are wrapped inside","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":56948,"byte_end":57033,"line_start":228,"line_end":228,"column_start":5,"column_end":90}},{"value":"/ [`catch_unwind`]. If a panic occurs, the task is automatically cancelled.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57038,"byte_end":57115,"line_start":229,"line_end":229,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57120,"byte_end":57123,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57128,"byte_end":57170,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/ [`catch_unwind`]: https://doc.rust-lang.org/std/panic/fn.catch_unwind.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57175,"byte_end":57253,"line_start":232,"line_end":232,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57726,"byte_end":57732,"line_start":249,"line_end":249,"column_start":12,"column_end":18},"name":"cancel","qualname":"<Task<T>>::cancel","value":"fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancels the task.","sig":null,"attributes":[{"value":"/ Cancels the task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57469,"byte_end":57490,"line_start":243,"line_end":243,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57495,"byte_end":57498,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ When cancelled, the task won't be scheduled again even if a [`Waker`] wakes it. An attempt","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57503,"byte_end":57597,"line_start":245,"line_end":245,"column_start":5,"column_end":99}},{"value":"/ to run it won't do anything.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57602,"byte_end":57634,"line_start":246,"line_end":246,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57639,"byte_end":57642,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ [`Waker`]: https://doc.rust-lang.org/std/task/struct.Waker.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57647,"byte_end":57714,"line_start":248,"line_end":248,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57968,"byte_end":57971,"line_start":259,"line_end":259,"column_start":12,"column_end":15},"name":"tag","qualname":"<Task<T>>::tag","value":"fn tag(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the tag stored inside the task.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the tag stored inside the task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":57898,"byte_end":57956,"line_start":258,"line_end":258,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":58263,"byte_end":58271,"line_start":270,"line_end":270,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Task<T>>::into_raw","value":"fn into_raw(Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts this task into a raw pointer to the tag.\n","sig":null,"attributes":[{"value":"/ Converts this task into a raw pointer to the tag.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":58198,"byte_end":58251,"line_start":269,"line_end":269,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":58691,"byte_end":58699,"line_start":283,"line_end":283,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Task<T>>::from_raw","value":"unsafe fn from_raw(*const T) -> Task<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer to the tag into a task.","sig":null,"attributes":[{"value":"/ Converts a raw pointer to the tag into a task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":58481,"byte_end":58531,"line_start":278,"line_end":278,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":58536,"byte_end":58539,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This method should only be used with raw pointers returned from [`into_raw`].","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":58544,"byte_end":58625,"line_start":280,"line_end":280,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":58630,"byte_end":58633,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ [`into_raw`]: #method.into_raw","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":58638,"byte_end":58672,"line_start":282,"line_end":282,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":59015,"byte_end":59020,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"waker","qualname":"<Task<T>>::waker","value":"fn waker(&Self) -> Waker","parent":null,"children":[],"decl_id":null,"docs":" Returns a waker associated with this task.\n","sig":null,"attributes":[{"value":"/ Returns a waker associated with this task.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":58957,"byte_end":59003,"line_start":293,"line_end":293,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":59299,"byte_end":59303,"line_start":306,"line_end":306,"column_start":8,"column_end":12},"name":"drop","qualname":"<Task<T> as core::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":1,"index":3420},"children":[],"decl_id":{"krate":1,"index":3421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":59725,"byte_end":59728,"line_start":324,"line_end":324,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Task<T> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10016},"children":[],"decl_id":{"krate":1,"index":10017},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":395},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/waker_fn.rs","byte_start":62096,"byte_end":62104,"line_start":8,"line_end":8,"column_start":8,"column_end":16},"name":"waker_fn","qualname":"::waker_fn::waker_fn","value":"fn waker_fn<F>(F) -> Waker where F: Fn() -> () + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a waker from a wake function.","sig":null,"attributes":[{"value":"/ Creates a waker from a wake function.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/waker_fn.rs","byte_start":61983,"byte_end":62024,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/waker_fn.rs","byte_start":62025,"byte_end":62028,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The function gets called every time the waker is woken.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/waker_fn.rs","byte_start":62029,"byte_end":62088,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/header.rs","byte_start":5628,"byte_end":5634,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/header.rs","byte_start":10709,"byte_end":10715,"line_start":179,"line_end":179,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12068,"byte_end":12078,"line_start":27,"line_end":27,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12115,"byte_end":12125,"line_start":28,"line_end":28,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12157,"byte_end":12167,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12189,"byte_end":12199,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":14693,"byte_end":14703,"line_start":108,"line_end":108,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":18247,"byte_end":18257,"line_start":189,"line_end":189,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":21216,"byte_end":21226,"line_start":258,"line_end":258,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/raw.rs","byte_start":23746,"byte_end":23753,"line_start":82,"line_end":82,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/raw.rs","byte_start":23797,"byte_end":23804,"line_start":84,"line_end":84,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/raw.rs","byte_start":24063,"byte_end":24070,"line_start":96,"line_end":96,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/raw.rs","byte_start":43788,"byte_end":43793,"line_start":608,"line_end":608,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":53457,"byte_end":53464,"line_start":129,"line_end":129,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":53781,"byte_end":53788,"line_start":141,"line_end":141,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55914,"byte_end":55918,"line_start":198,"line_end":198,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55949,"byte_end":55953,"line_start":199,"line_end":199,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55969,"byte_end":55973,"line_start":201,"line_end":201,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":59282,"byte_end":59286,"line_start":305,"line_end":305,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":59708,"byte_end":59712,"line_start":323,"line_end":323,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/utils.rs","byte_start":60213,"byte_end":60218,"line_start":10,"line_end":10,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/utils.rs","byte_start":60602,"byte_end":60606,"line_start":27,"line_end":27,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/waker_fn.rs","byte_start":62371,"byte_end":62377,"line_start":16,"line_end":16,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/header.rs","byte_start":5628,"byte_end":5634,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/header.rs","byte_start":10709,"byte_end":10715,"line_start":179,"line_end":179,"column_start":21,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":36},"to":{"krate":1,"index":10016}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12068,"byte_end":12078,"line_start":27,"line_end":27,"column_start":34,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":91},"to":{"krate":1,"index":3177}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12115,"byte_end":12125,"line_start":28,"line_end":28,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":91},"to":{"krate":1,"index":3189}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12157,"byte_end":12167,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":91},"to":{"krate":1,"index":3218}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":12189,"byte_end":12199,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":14693,"byte_end":14703,"line_start":108,"line_end":108,"column_start":21,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":91},"to":{"krate":1,"index":3420}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":18247,"byte_end":18257,"line_start":189,"line_end":189,"column_start":23,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":91},"to":{"krate":1,"index":13444}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/join_handle.rs","byte_start":21216,"byte_end":21226,"line_start":258,"line_end":258,"column_start":27,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":91},"to":{"krate":1,"index":10016}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/raw.rs","byte_start":23746,"byte_end":23753,"line_start":82,"line_end":82,"column_start":27,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":199},"to":{"krate":1,"index":3187}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/raw.rs","byte_start":23797,"byte_end":23804,"line_start":84,"line_end":84,"column_start":28,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":199},"to":{"krate":1,"index":2799}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/raw.rs","byte_start":24063,"byte_end":24070,"line_start":96,"line_end":96,"column_start":18,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/raw.rs","byte_start":43788,"byte_end":43793,"line_start":608,"line_end":608,"column_start":35,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":242},"to":{"krate":1,"index":3420}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":53457,"byte_end":53464,"line_start":129,"line_end":129,"column_start":22,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":318},"to":{"krate":1,"index":3420}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":53781,"byte_end":53788,"line_start":141,"line_end":141,"column_start":32,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":318},"to":{"krate":1,"index":13444}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55914,"byte_end":55918,"line_start":198,"line_end":198,"column_start":25,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":3177}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55949,"byte_end":55953,"line_start":199,"line_end":199,"column_start":25,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":3189}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":55969,"byte_end":55973,"line_start":201,"line_end":201,"column_start":9,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":59282,"byte_end":59286,"line_start":305,"line_end":305,"column_start":18,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":3420}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/task.rs","byte_start":59708,"byte_end":59712,"line_start":323,"line_end":323,"column_start":36,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":10016}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/utils.rs","byte_start":60213,"byte_end":60218,"line_start":10,"line_end":10,"column_start":19,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":361},"to":{"krate":1,"index":3420}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/utils.rs","byte_start":60602,"byte_end":60606,"line_start":27,"line_end":27,"column_start":19,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":368},"to":{"krate":1,"index":3420}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/async-task-1.3.1/src/waker_fn.rs","byte_start":62371,"byte_end":62377,"line_start":16,"line_end":16,"column_start":39,"column_end":45},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}}]}