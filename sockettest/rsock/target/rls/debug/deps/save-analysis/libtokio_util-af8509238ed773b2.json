{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3","program":"/home/pythomancer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"tracing\"","-C","metadata=af8509238ed773b2","-C","extra-filename=-af8509238ed773b2","--out-dir","/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps","-L","dependency=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps","--extern","bytes=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libbytes-0b6620405fcf1713.rmeta","--extern","futures_core=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libfutures_core-b16e3589cc235645.rmeta","--extern","futures_sink=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libfutures_sink-724c77cc78f9c38a.rmeta","--extern","pin_project_lite=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libpin_project_lite-194da388bfcdfa6d.rmeta","--extern","tokio=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libtokio-d2e27408043dbc5e.rmeta","--extern","tracing=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libtracing-d6b5fd9812b49c98.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pythomancer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libtokio_util-af8509238ed773b2.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[12336035712587980210,0]},"crate_root":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src","external_crates":[{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17410308932696108380,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[14414087034259949263,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13372101680896079740,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5118101865554607907,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8025854276978217217,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4385070015268585674,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9992538824178466914,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15270312766295648766,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[18385953104680678603,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9852578511365041000,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2269743475717416395,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17706006846336192414,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6383024135923770218,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[10215543262378548890,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[4195348899700366916,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[10100673089080813811,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[341892175500051738,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[141027009196343679,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[5788120405916140848,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[12399428828412449574,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":21,"id":{"name":"futures_sink","disambiguator":[9744715726271407579,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":22,"id":{"name":"tokio","disambiguator":[932313415556055432,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":23,"id":{"name":"parking_lot","disambiguator":[13039624511573906650,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":24,"id":{"name":"lock_api","disambiguator":[18446632685904857366,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":25,"id":{"name":"scopeguard","disambiguator":[11208421646433713922,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":26,"id":{"name":"parking_lot_core","disambiguator":[3237741365129822904,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":27,"id":{"name":"smallvec","disambiguator":[607474780413758284,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":28,"id":{"name":"cfg_if","disambiguator":[2189248502941426736,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":29,"id":{"name":"libc","disambiguator":[5170842456214530381,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":30,"id":{"name":"mio","disambiguator":[16512633421269482169,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":31,"id":{"name":"log","disambiguator":[7872699690716267234,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":32,"id":{"name":"value_bag","disambiguator":[11661376207768581083,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","num":33,"id":{"name":"bytes","disambiguator":[1649634778790121020,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":34,"id":{"name":"once_cell","disambiguator":[16277954999387493271,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":35,"id":{"name":"tokio_macros","disambiguator":[2322866657323424618,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":36,"id":{"name":"memchr","disambiguator":[15770521965296659860,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":37,"id":{"name":"socket2","disambiguator":[4100547929985580081,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":38,"id":{"name":"num_cpus","disambiguator":[11364998923732647585,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","num":39,"id":{"name":"signal_hook_registry","disambiguator":[9486472988770709175,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","num":40,"id":{"name":"futures_core","disambiguator":[181259821522072081,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","num":41,"id":{"name":"tracing","disambiguator":[11258792444297989981,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","num":42,"id":{"name":"tracing_core","disambiguator":[10281659842029255993,0]}}],"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":0,"byte_end":5507,"line_start":1,"line_end":204,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420070,"byte_end":16420080,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420119,"byte_end":16420126,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420165,"byte_end":16420172,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1475},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420334,"byte_end":16420340,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1201},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420342,"byte_end":16420353,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1434},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420401,"byte_end":16420411,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420460,"byte_end":16420471,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420533,"byte_end":16420553,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":973},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420555,"byte_end":16420580,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1243},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420629,"byte_end":16420639,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1265},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420641,"byte_end":16420656,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420721,"byte_end":16420738,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1297},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420740,"byte_end":16420762,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":458}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7099,"byte_end":7108,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7110,"byte_end":7127,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1309},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7129,"byte_end":7154,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1346},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7183,"byte_end":7196,"line_start":7,"line_end":7,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1368},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7198,"byte_end":7208,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7256,"byte_end":7269,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7312,"byte_end":7329,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":0,"byte_end":5507,"line_start":1,"line_end":204,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":458},{"krate":0,"index":14},{"krate":0,"index":340},{"krate":0,"index":409}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":458},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1162}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/cfg.rs","byte_start":5583,"byte_end":5608,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16409798,"byte_end":16409851,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16409852,"byte_end":16409855,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16409856,"byte_end":16409931,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16409932,"byte_end":16409997,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16409998,"byte_end":16410001,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410002,"byte_end":16410082,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410083,"byte_end":16410158,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410159,"byte_end":16410207,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410208,"byte_end":16410211,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410212,"byte_end":16410235,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410236,"byte_end":16410239,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410240,"byte_end":16410319,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410320,"byte_end":16410399,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410400,"byte_end":16410471,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410472,"byte_end":16410542,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410543,"byte_end":16410621,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410622,"byte_end":16410698,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410699,"byte_end":16410732,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410733,"byte_end":16410736,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410737,"byte_end":16410817,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410818,"byte_end":16410898,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410899,"byte_end":16410949,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410950,"byte_end":16410953,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16410954,"byte_end":16411005,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411006,"byte_end":16411055,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411056,"byte_end":16411107,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411108,"byte_end":16411111,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411112,"byte_end":16411177,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411178,"byte_end":16411181,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411182,"byte_end":16411259,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411260,"byte_end":16411301,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411302,"byte_end":16411305,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411306,"byte_end":16411386,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411387,"byte_end":16411466,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411467,"byte_end":16411545,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411546,"byte_end":16411625,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411626,"byte_end":16411640,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411641,"byte_end":16411644,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411645,"byte_end":16411724,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411725,"byte_end":16411804,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411805,"byte_end":16411822,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411823,"byte_end":16411826,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411827,"byte_end":16411904,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411905,"byte_end":16411984,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16411985,"byte_end":16412062,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412063,"byte_end":16412133,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412134,"byte_end":16412183,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412184,"byte_end":16412187,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412188,"byte_end":16412201,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412202,"byte_end":16412234,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412235,"byte_end":16412302,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412303,"byte_end":16412417,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412418,"byte_end":16412455,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412456,"byte_end":16412517,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412518,"byte_end":16412567,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412568,"byte_end":16412571,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412572,"byte_end":16412613,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412614,"byte_end":16412624,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412625,"byte_end":16412709,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412710,"byte_end":16412766,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412767,"byte_end":16412770,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412771,"byte_end":16412792,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412793,"byte_end":16412860,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412861,"byte_end":16412889,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412890,"byte_end":16412903,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412904,"byte_end":16412922,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412923,"byte_end":16412932,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412933,"byte_end":16412936,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412937,"byte_end":16412996,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16412997,"byte_end":16413021,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413022,"byte_end":16413031,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413032,"byte_end":16413037,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413038,"byte_end":16413046,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413047,"byte_end":16413054,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413055,"byte_end":16413129,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413130,"byte_end":16413133,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413134,"byte_end":16413156,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413157,"byte_end":16413160,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413161,"byte_end":16413238,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413239,"byte_end":16413315,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413316,"byte_end":16413395,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413396,"byte_end":16413450,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413451,"byte_end":16413454,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413455,"byte_end":16413499,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413500,"byte_end":16413507,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413508,"byte_end":16413543,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413544,"byte_end":16413575,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413576,"byte_end":16413579,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413580,"byte_end":16413609,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413610,"byte_end":16413613,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413614,"byte_end":16413653,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413654,"byte_end":16413657,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413658,"byte_end":16413696,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413697,"byte_end":16413724,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413725,"byte_end":16413761,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413762,"byte_end":16413765,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413766,"byte_end":16413784,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413785,"byte_end":16413807,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413808,"byte_end":16413838,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413839,"byte_end":16413893,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413894,"byte_end":16413924,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413925,"byte_end":16413982,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16413983,"byte_end":16414015,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414016,"byte_end":16414029,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414030,"byte_end":16414033,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414034,"byte_end":16414068,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414069,"byte_end":16414113,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414114,"byte_end":16414166,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414167,"byte_end":16414234,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414235,"byte_end":16414238,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414239,"byte_end":16414313,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414314,"byte_end":16414380,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414381,"byte_end":16414410,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414411,"byte_end":16414458,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414459,"byte_end":16414511,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414512,"byte_end":16414583,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414584,"byte_end":16414603,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414604,"byte_end":16414617,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414618,"byte_end":16414621,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414622,"byte_end":16414661,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414662,"byte_end":16414717,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414718,"byte_end":16414736,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414737,"byte_end":16414813,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414814,"byte_end":16414880,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414881,"byte_end":16414933,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414934,"byte_end":16414937,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16414938,"byte_end":16415018,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415019,"byte_end":16415044,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415045,"byte_end":16415077,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415078,"byte_end":16415091,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415092,"byte_end":16415095,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415096,"byte_end":16415168,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415169,"byte_end":16415195,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415196,"byte_end":16415247,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415248,"byte_end":16415284,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415285,"byte_end":16415288,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415289,"byte_end":16415367,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415368,"byte_end":16415411,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415412,"byte_end":16415459,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415460,"byte_end":16415496,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415497,"byte_end":16415541,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415542,"byte_end":16415598,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415599,"byte_end":16415647,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415648,"byte_end":16415670,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415671,"byte_end":16415689,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415690,"byte_end":16415703,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415704,"byte_end":16415713,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415714,"byte_end":16415719,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415720,"byte_end":16415727,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415728,"byte_end":16415731,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415732,"byte_end":16415755,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415756,"byte_end":16415759,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415760,"byte_end":16415838,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415839,"byte_end":16415912,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415913,"byte_end":16415989,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16415990,"byte_end":16416070,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416071,"byte_end":16416087,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416088,"byte_end":16416091,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416092,"byte_end":16416172,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416173,"byte_end":16416252,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416253,"byte_end":16416333,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416334,"byte_end":16416406,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416407,"byte_end":16416410,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416411,"byte_end":16416488,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416489,"byte_end":16416567,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416568,"byte_end":16416641,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416642,"byte_end":16416708,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416709,"byte_end":16416712,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416713,"byte_end":16416726,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416727,"byte_end":16416760,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416761,"byte_end":16416795,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416796,"byte_end":16416833,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416834,"byte_end":16416901,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416902,"byte_end":16416937,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16416938,"byte_end":16416999,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417000,"byte_end":16417046,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417047,"byte_end":16417108,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417109,"byte_end":16417112,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417113,"byte_end":16417141,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417142,"byte_end":16417145,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417146,"byte_end":16417187,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417188,"byte_end":16417198,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417199,"byte_end":16417223,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417224,"byte_end":16417298,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417299,"byte_end":16417341,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417342,"byte_end":16417356,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417357,"byte_end":16417414,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417415,"byte_end":16417464,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417465,"byte_end":16417479,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417480,"byte_end":16417517,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417518,"byte_end":16417569,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417570,"byte_end":16417616,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417617,"byte_end":16417647,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417648,"byte_end":16417662,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417663,"byte_end":16417672,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417673,"byte_end":16417678,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417679,"byte_end":16417686,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417687,"byte_end":16417694,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417695,"byte_end":16417770,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417771,"byte_end":16417844,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417845,"byte_end":16417887,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417888,"byte_end":16417891,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417892,"byte_end":16417914,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417915,"byte_end":16417918,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417919,"byte_end":16417996,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16417997,"byte_end":16418073,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418074,"byte_end":16418150,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418151,"byte_end":16418174,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418175,"byte_end":16418178,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418179,"byte_end":16418224,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418225,"byte_end":16418232,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418233,"byte_end":16418268,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418269,"byte_end":16418293,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418294,"byte_end":16418297,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418298,"byte_end":16418327,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418328,"byte_end":16418331,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418332,"byte_end":16418371,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418372,"byte_end":16418375,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418376,"byte_end":16418422,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418423,"byte_end":16418459,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418460,"byte_end":16418463,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418464,"byte_end":16418555,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418556,"byte_end":16418630,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418631,"byte_end":16418653,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418654,"byte_end":16418687,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418688,"byte_end":16418735,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418736,"byte_end":16418788,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418789,"byte_end":16418864,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418865,"byte_end":16418884,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418885,"byte_end":16418898,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418899,"byte_end":16418902,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418903,"byte_end":16418955,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16418956,"byte_end":16419033,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419034,"byte_end":16419098,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419099,"byte_end":16419102,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419103,"byte_end":16419146,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419147,"byte_end":16419187,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419188,"byte_end":16419191,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419192,"byte_end":16419249,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419250,"byte_end":16419296,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419297,"byte_end":16419348,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419349,"byte_end":16419367,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419368,"byte_end":16419377,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419378,"byte_end":16419383,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419384,"byte_end":16419391,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419392,"byte_end":16419395,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419396,"byte_end":16419435,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419436,"byte_end":16419477,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419478,"byte_end":16419514,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419515,"byte_end":16419547,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419548,"byte_end":16419644,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419645,"byte_end":16419696,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419697,"byte_end":16419750,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419751,"byte_end":16419794,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419795,"byte_end":16419839,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419840,"byte_end":16419888,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419889,"byte_end":16419937,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419938,"byte_end":16419984,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16419985,"byte_end":16420024,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422048,"byte_end":16422058,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16420891,"byte_end":16420976,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16420977,"byte_end":16420980,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16420981,"byte_end":16421019,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421020,"byte_end":16421058,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421059,"byte_end":16421062,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421063,"byte_end":16421076,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421077,"byte_end":16421080,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421081,"byte_end":16421162,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421163,"byte_end":16421166,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421167,"byte_end":16421206,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421207,"byte_end":16421240,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421241,"byte_end":16421270,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421271,"byte_end":16421274,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421275,"byte_end":16421282,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421283,"byte_end":16421301,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421302,"byte_end":16421332,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421333,"byte_end":16421357,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421358,"byte_end":16421365,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421366,"byte_end":16421395,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421396,"byte_end":16421448,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421449,"byte_end":16421452,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421453,"byte_end":16421471,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421472,"byte_end":16421489,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421490,"byte_end":16421570,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421571,"byte_end":16421605,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421606,"byte_end":16421659,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421660,"byte_end":16421671,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421672,"byte_end":16421679,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421680,"byte_end":16421685,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421686,"byte_end":16421733,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421734,"byte_end":16421787,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421788,"byte_end":16421846,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421847,"byte_end":16421926,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421927,"byte_end":16421939,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421940,"byte_end":16421947,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421948,"byte_end":16421955,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16421956,"byte_end":16421959,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422160,"byte_end":16422163,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422087,"byte_end":16422148,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422306,"byte_end":16422312,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"decode","qualname":"<BytesCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<BytesMut>, io::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":514},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422617,"byte_end":16422623,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, Bytes, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422851,"byte_end":16422857,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, BytesMut, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":511},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424401,"byte_end":16424408,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423115,"byte_end":16423150,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423151,"byte_end":16423154,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423155,"byte_end":16423224,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423225,"byte_end":16423304,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423305,"byte_end":16423377,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423378,"byte_end":16423402,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423403,"byte_end":16423406,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423407,"byte_end":16423475,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423476,"byte_end":16423553,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423554,"byte_end":16423615,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423616,"byte_end":16423619,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423620,"byte_end":16423681,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423682,"byte_end":16423744,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423745,"byte_end":16423748,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423749,"byte_end":16423812,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423813,"byte_end":16423876,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423877,"byte_end":16423956,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16423957,"byte_end":16424031,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424032,"byte_end":16424051,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424052,"byte_end":16424055,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424056,"byte_end":16424124,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424125,"byte_end":16424187,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424188,"byte_end":16424263,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424264,"byte_end":16424304,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424305,"byte_end":16424308,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424309,"byte_end":16424345,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424346,"byte_end":16424390,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":512},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424456,"byte_end":16424460,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424415,"byte_end":16424446,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":513},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425226,"byte_end":16425231,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424467,"byte_end":16424519,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424524,"byte_end":16424527,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424532,"byte_end":16424601,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424606,"byte_end":16424676,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424681,"byte_end":16424727,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424732,"byte_end":16424735,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424740,"byte_end":16424816,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424821,"byte_end":16424896,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424901,"byte_end":16424976,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16424981,"byte_end":16425021,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425026,"byte_end":16425029,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425034,"byte_end":16425108,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425113,"byte_end":16425159,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425164,"byte_end":16425167,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425172,"byte_end":16425216,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428167,"byte_end":16428173,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425255,"byte_end":16425320,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425325,"byte_end":16425328,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425333,"byte_end":16425407,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425412,"byte_end":16425484,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425489,"byte_end":16425562,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425567,"byte_end":16425610,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425615,"byte_end":16425618,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425623,"byte_end":16425696,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425701,"byte_end":16425764,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425769,"byte_end":16425844,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425849,"byte_end":16425924,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425929,"byte_end":16425952,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425957,"byte_end":16425960,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16425965,"byte_end":16426037,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426042,"byte_end":16426116,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426121,"byte_end":16426191,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426196,"byte_end":16426199,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426204,"byte_end":16426272,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426277,"byte_end":16426348,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426353,"byte_end":16426433,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426438,"byte_end":16426450,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426455,"byte_end":16426458,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426463,"byte_end":16426533,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426538,"byte_end":16426613,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426618,"byte_end":16426655,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426660,"byte_end":16426663,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426668,"byte_end":16426704,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426709,"byte_end":16426753,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426758,"byte_end":16426761,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426766,"byte_end":16426789,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426794,"byte_end":16426797,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426802,"byte_end":16426876,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426881,"byte_end":16426955,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16426960,"byte_end":16427013,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427018,"byte_end":16427021,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427026,"byte_end":16427097,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427102,"byte_end":16427172,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427177,"byte_end":16427193,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427198,"byte_end":16427201,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427206,"byte_end":16427219,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427224,"byte_end":16427242,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427247,"byte_end":16427252,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427257,"byte_end":16427283,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427288,"byte_end":16427325,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427330,"byte_end":16427335,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427340,"byte_end":16427361,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427366,"byte_end":16427371,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427376,"byte_end":16427406,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427411,"byte_end":16427425,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427430,"byte_end":16427461,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427466,"byte_end":16427499,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427504,"byte_end":16427507,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427512,"byte_end":16427605,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427610,"byte_end":16427628,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427633,"byte_end":16427636,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427641,"byte_end":16427713,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427718,"byte_end":16427778,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427783,"byte_end":16427835,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427840,"byte_end":16427902,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427907,"byte_end":16427974,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427979,"byte_end":16427982,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16427987,"byte_end":16428015,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428020,"byte_end":16428029,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428034,"byte_end":16428039,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428044,"byte_end":16428051,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428056,"byte_end":16428059,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428064,"byte_end":16428133,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428138,"byte_end":16428159,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16429339,"byte_end":16429349,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428254,"byte_end":16428326,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428331,"byte_end":16428380,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428385,"byte_end":16428388,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428393,"byte_end":16428461,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428466,"byte_end":16428533,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428538,"byte_end":16428606,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428611,"byte_end":16428687,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428692,"byte_end":16428758,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428763,"byte_end":16428766,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428771,"byte_end":16428839,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428844,"byte_end":16428919,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16428924,"byte_end":16428999,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16429004,"byte_end":16429076,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16429081,"byte_end":16429123,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16429128,"byte_end":16429131,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16429136,"byte_end":16429211,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16429216,"byte_end":16429294,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16429299,"byte_end":16429331,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430957,"byte_end":16430963,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"fn framed<T>(Self, T) -> Framed<T, Self> where T: AsyncRead + AsyncWrite +\nSized, Self: Sized","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16429767,"byte_end":16429847,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16429852,"byte_end":16429928,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16429933,"byte_end":16429936,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16429941,"byte_end":16430016,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430021,"byte_end":16430091,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430096,"byte_end":16430167,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430172,"byte_end":16430244,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430249,"byte_end":16430307,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430312,"byte_end":16430315,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430320,"byte_end":16430389,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430394,"byte_end":16430469,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430474,"byte_end":16430550,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430555,"byte_end":16430577,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430582,"byte_end":16430585,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430590,"byte_end":16430663,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430668,"byte_end":16430741,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430746,"byte_end":16430822,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430827,"byte_end":16430830,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430835,"byte_end":16430871,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430876,"byte_end":16430908,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/decoder.rs","byte_start":16430913,"byte_end":16430949,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":528},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431297,"byte_end":16431304,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431142,"byte_end":16431214,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431215,"byte_end":16431235,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431236,"byte_end":16431239,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431240,"byte_end":16431286,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":530},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431569,"byte_end":16431574,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431317,"byte_end":16431349,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431354,"byte_end":16431357,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431362,"byte_end":16431439,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431444,"byte_end":16431500,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431505,"byte_end":16431508,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431513,"byte_end":16431559,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431925,"byte_end":16431931,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431598,"byte_end":16431643,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431648,"byte_end":16431651,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431656,"byte_end":16431730,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431735,"byte_end":16431815,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431820,"byte_end":16431858,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431863,"byte_end":16431866,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/encoder.rs","byte_start":16431871,"byte_end":16431917,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1475},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16445571,"byte_end":16445577,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1478}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447350,"byte_end":16447353,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16445719,"byte_end":16445799,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16445804,"byte_end":16445885,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16445890,"byte_end":16445893,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16445898,"byte_end":16445973,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16445978,"byte_end":16446048,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446053,"byte_end":16446122,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446127,"byte_end":16446199,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446204,"byte_end":16446262,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446267,"byte_end":16446270,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446275,"byte_end":16446346,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446351,"byte_end":16446428,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446433,"byte_end":16446509,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446514,"byte_end":16446536,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446541,"byte_end":16446544,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446549,"byte_end":16446622,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446627,"byte_end":16446700,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446705,"byte_end":16446781,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446786,"byte_end":16446789,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446794,"byte_end":16446870,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446875,"byte_end":16446951,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16446956,"byte_end":16447031,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447036,"byte_end":16447071,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447076,"byte_end":16447079,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447084,"byte_end":16447120,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447125,"byte_end":16447157,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447162,"byte_end":16447199,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447204,"byte_end":16447242,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447247,"byte_end":16447338,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448961,"byte_end":16448974,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447566,"byte_end":16447646,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447651,"byte_end":16447732,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447737,"byte_end":16447786,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447791,"byte_end":16447794,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447799,"byte_end":16447874,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447879,"byte_end":16447949,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16447954,"byte_end":16448023,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448028,"byte_end":16448100,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448105,"byte_end":16448163,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448168,"byte_end":16448171,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448176,"byte_end":16448247,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448252,"byte_end":16448329,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448334,"byte_end":16448410,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448415,"byte_end":16448437,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448442,"byte_end":16448445,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448450,"byte_end":16448523,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448528,"byte_end":16448601,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448606,"byte_end":16448682,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448687,"byte_end":16448690,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448695,"byte_end":16448731,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448736,"byte_end":16448768,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448773,"byte_end":16448810,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448815,"byte_end":16448853,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16448858,"byte_end":16448949,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16451121,"byte_end":16451131,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16449544,"byte_end":16449624,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16449629,"byte_end":16449710,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16449715,"byte_end":16449718,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16449723,"byte_end":16449798,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16449803,"byte_end":16449873,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16449878,"byte_end":16449949,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16449954,"byte_end":16450026,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450031,"byte_end":16450089,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450094,"byte_end":16450097,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450102,"byte_end":16450173,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450178,"byte_end":16450255,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450260,"byte_end":16450336,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450341,"byte_end":16450363,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450368,"byte_end":16450371,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450376,"byte_end":16450455,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450460,"byte_end":16450537,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450542,"byte_end":16450545,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450550,"byte_end":16450623,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450628,"byte_end":16450701,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450706,"byte_end":16450782,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450787,"byte_end":16450790,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450795,"byte_end":16450831,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450836,"byte_end":16450868,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450873,"byte_end":16450911,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450916,"byte_end":16450954,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16450959,"byte_end":16451013,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16451018,"byte_end":16451109,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16451766,"byte_end":16451773,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16451483,"byte_end":16451546,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16451551,"byte_end":16451564,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16451569,"byte_end":16451572,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16451577,"byte_end":16451652,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16451657,"byte_end":16451727,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16451732,"byte_end":16451754,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452117,"byte_end":16452124,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16451826,"byte_end":16451897,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16451902,"byte_end":16451915,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16451920,"byte_end":16451923,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16451928,"byte_end":16452003,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452008,"byte_end":16452078,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452083,"byte_end":16452105,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452487,"byte_end":16452498,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452189,"byte_end":16452267,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452272,"byte_end":16452285,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452290,"byte_end":16452293,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452298,"byte_end":16452373,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452378,"byte_end":16452448,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452453,"byte_end":16452475,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452845,"byte_end":16452850,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452594,"byte_end":16452652,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452657,"byte_end":16452670,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452675,"byte_end":16452678,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452683,"byte_end":16452757,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452762,"byte_end":16452833,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16453162,"byte_end":16453171,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452903,"byte_end":16452969,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452974,"byte_end":16452987,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16452992,"byte_end":16452995,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16453000,"byte_end":16453074,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16453079,"byte_end":16453150,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16453508,"byte_end":16453517,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16453236,"byte_end":16453304,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16453309,"byte_end":16453333,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16453338,"byte_end":16453341,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16453346,"byte_end":16453420,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16453425,"byte_end":16453496,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454208,"byte_end":16454221,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"fn codec_pin_mut(Pin<&mut Self>) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16453949,"byte_end":16454015,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454020,"byte_end":16454033,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454038,"byte_end":16454041,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454046,"byte_end":16454120,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454125,"byte_end":16454196,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454367,"byte_end":16454378,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454312,"byte_end":16454355,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454513,"byte_end":16454528,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454450,"byte_end":16454501,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454668,"byte_end":16454680,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454612,"byte_end":16454656,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454817,"byte_end":16454833,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454753,"byte_end":16454805,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16455183,"byte_end":16455193,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454918,"byte_end":16454981,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454986,"byte_end":16454989,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16454994,"byte_end":16455069,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16455074,"byte_end":16455144,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16455149,"byte_end":16455171,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16455565,"byte_end":16455575,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16455243,"byte_end":16455317,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16455322,"byte_end":16455363,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16455368,"byte_end":16455371,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16455376,"byte_end":16455451,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16455456,"byte_end":16455526,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16455531,"byte_end":16455553,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16456028,"byte_end":16456037,"line_start":290,"line_end":290,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Framed<T, U> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":40,"index":96},"children":[],"decl_id":{"krate":40,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16456369,"byte_end":16456379,"line_start":304,"line_end":304,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16456517,"byte_end":16456527,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Framed<T, U> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16456648,"byte_end":16456658,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16456796,"byte_end":16456806,"line_start":316,"line_end":316,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457031,"byte_end":16457034,"line_start":326,"line_end":326,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Framed<T, U> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10016},"children":[],"decl_id":{"krate":2,"index":10017},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457549,"byte_end":16457560,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457234,"byte_end":16457305,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457306,"byte_end":16457378,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457379,"byte_end":16457439,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457440,"byte_end":16457443,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457444,"byte_end":16457480,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457498,"byte_end":16457537,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457646,"byte_end":16457648,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457573,"byte_end":16457637,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457680,"byte_end":16457685,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457658,"byte_end":16457671,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457750,"byte_end":16457758,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457695,"byte_end":16457741,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1207},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457845,"byte_end":16457854,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16457775,"byte_end":16457836,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16458087,"byte_end":16458090,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16458035,"byte_end":16458075,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1434},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16458819,"byte_end":16458829,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1437}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16459080,"byte_end":16459083,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16459012,"byte_end":16459068,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16459431,"byte_end":16459444,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16459315,"byte_end":16459397,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16459402,"byte_end":16459419,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460198,"byte_end":16460205,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16459911,"byte_end":16459974,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16459979,"byte_end":16459996,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460001,"byte_end":16460004,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460009,"byte_end":16460084,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460089,"byte_end":16460159,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460164,"byte_end":16460186,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460553,"byte_end":16460560,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460258,"byte_end":16460329,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460334,"byte_end":16460351,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460356,"byte_end":16460359,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460364,"byte_end":16460439,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460444,"byte_end":16460514,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460519,"byte_end":16460541,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460927,"byte_end":16460938,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460625,"byte_end":16460703,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460708,"byte_end":16460725,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460730,"byte_end":16460733,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460738,"byte_end":16460813,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460818,"byte_end":16460888,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16460893,"byte_end":16460915,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16461303,"byte_end":16461313,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16461034,"byte_end":16461101,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16461106,"byte_end":16461109,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16461114,"byte_end":16461189,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16461194,"byte_end":16461264,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16461269,"byte_end":16461291,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16461425,"byte_end":16461432,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16461363,"byte_end":16461413,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16461555,"byte_end":16461566,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16461485,"byte_end":16461543,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16461731,"byte_end":16461742,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16461631,"byte_end":16461690,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16461695,"byte_end":16461719,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16462258,"byte_end":16462273,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"fn decoder_pin_mut(Pin<&mut Self>) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16462188,"byte_end":16462246,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16462419,"byte_end":16462430,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16462364,"byte_end":16462407,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16462560,"byte_end":16462575,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16462497,"byte_end":16462548,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16462838,"byte_end":16462847,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedRead<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":40,"index":96},"children":[],"decl_id":{"krate":40,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16463127,"byte_end":16463137,"line_start":168,"line_end":168,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16463291,"byte_end":16463301,"line_start":172,"line_end":172,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedRead<T, D> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16463438,"byte_end":16463448,"line_start":176,"line_end":176,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16463602,"byte_end":16463612,"line_start":180,"line_end":180,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16463857,"byte_end":16463860,"line_start":190,"line_end":190,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedRead<T, D> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10016},"children":[],"decl_id":{"krate":2,"index":10017},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16464676,"byte_end":16464687,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1396}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16464894,"byte_end":16464897,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16464825,"byte_end":16464882,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465455,"byte_end":16465462,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465167,"byte_end":16465230,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465235,"byte_end":16465253,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465258,"byte_end":16465261,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465266,"byte_end":16465341,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465346,"byte_end":16465416,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465421,"byte_end":16465443,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465811,"byte_end":16465818,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465515,"byte_end":16465586,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465591,"byte_end":16465609,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465614,"byte_end":16465617,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465622,"byte_end":16465697,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465702,"byte_end":16465772,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465777,"byte_end":16465799,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466186,"byte_end":16466197,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465883,"byte_end":16465961,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465966,"byte_end":16465984,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465989,"byte_end":16465992,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465997,"byte_end":16466072,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466077,"byte_end":16466147,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466152,"byte_end":16466174,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466563,"byte_end":16466573,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466293,"byte_end":16466361,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466366,"byte_end":16466369,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466374,"byte_end":16466449,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466454,"byte_end":16466524,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466529,"byte_end":16466551,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466685,"byte_end":16466692,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466623,"byte_end":16466673,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466815,"byte_end":16466826,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466745,"byte_end":16466803,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466992,"byte_end":16467003,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466891,"byte_end":16466951,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16466956,"byte_end":16466980,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16467521,"byte_end":16467536,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"fn encoder_pin_mut(Pin<&mut Self>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16467451,"byte_end":16467509,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16467683,"byte_end":16467695,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16467627,"byte_end":16467671,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16467826,"byte_end":16467842,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16467762,"byte_end":16467814,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16468129,"byte_end":16468139,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16468277,"byte_end":16468287,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16468408,"byte_end":16468418,"line_start":145,"line_end":145,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16468556,"byte_end":16468566,"line_start":149,"line_end":149,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16468848,"byte_end":16468857,"line_start":161,"line_end":161,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedWrite<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":40,"index":96},"children":[],"decl_id":{"krate":40,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16469097,"byte_end":16469100,"line_start":171,"line_end":171,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedWrite<T, U> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10016},"children":[],"decl_id":{"krate":2,"index":10017},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":916},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":1213},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":973},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":975},{"krate":0,"index":982},{"krate":0,"index":986},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":999},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16469369,"byte_end":16469421,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16469422,"byte_end":16469425,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16469426,"byte_end":16469496,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16469497,"byte_end":16469555,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16469556,"byte_end":16469628,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16469629,"byte_end":16469699,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16469700,"byte_end":16469767,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16469768,"byte_end":16469771,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16469772,"byte_end":16469793,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16469794,"byte_end":16469797,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16469798,"byte_end":16469873,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16469874,"byte_end":16469945,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16469946,"byte_end":16470017,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470018,"byte_end":16470088,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470089,"byte_end":16470129,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470130,"byte_end":16470133,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470134,"byte_end":16470141,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470142,"byte_end":16470185,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470186,"byte_end":16470244,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470245,"byte_end":16470248,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470249,"byte_end":16470304,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470305,"byte_end":16470347,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470348,"byte_end":16470353,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470354,"byte_end":16470406,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470407,"byte_end":16470412,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470413,"byte_end":16470435,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470436,"byte_end":16470443,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470444,"byte_end":16470447,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470448,"byte_end":16470520,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470521,"byte_end":16470592,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470593,"byte_end":16470612,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470613,"byte_end":16470616,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470617,"byte_end":16470628,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470629,"byte_end":16470678,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470679,"byte_end":16470728,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470729,"byte_end":16470778,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470779,"byte_end":16470786,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470787,"byte_end":16470790,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470791,"byte_end":16470829,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470830,"byte_end":16470833,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470834,"byte_end":16470841,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470842,"byte_end":16470885,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470886,"byte_end":16470944,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470945,"byte_end":16470948,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470949,"byte_end":16470974,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470975,"byte_end":16470996,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16470997,"byte_end":16471000,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471001,"byte_end":16471077,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471078,"byte_end":16471087,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471088,"byte_end":16471130,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471131,"byte_end":16471136,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471137,"byte_end":16471210,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471211,"byte_end":16471258,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471259,"byte_end":16471262,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471263,"byte_end":16471300,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471301,"byte_end":16471315,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471316,"byte_end":16471321,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471322,"byte_end":16471329,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471330,"byte_end":16471333,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471334,"byte_end":16471376,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471377,"byte_end":16471380,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471381,"byte_end":16471392,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471393,"byte_end":16471432,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471433,"byte_end":16471472,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471473,"byte_end":16471512,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471513,"byte_end":16471520,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471521,"byte_end":16471524,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471525,"byte_end":16471539,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471540,"byte_end":16471543,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471544,"byte_end":16471619,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471620,"byte_end":16471693,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471694,"byte_end":16471760,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471761,"byte_end":16471830,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471831,"byte_end":16471896,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471897,"byte_end":16471900,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471901,"byte_end":16471917,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471918,"byte_end":16471921,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471922,"byte_end":16471998,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16471999,"byte_end":16472040,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472041,"byte_end":16472044,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472045,"byte_end":16472052,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472053,"byte_end":16472084,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472085,"byte_end":16472135,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472136,"byte_end":16472177,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472178,"byte_end":16472213,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472214,"byte_end":16472262,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472263,"byte_end":16472298,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472299,"byte_end":16472347,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472348,"byte_end":16472397,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472398,"byte_end":16472420,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472421,"byte_end":16472428,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472429,"byte_end":16472451,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472452,"byte_end":16472459,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472460,"byte_end":16472463,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472464,"byte_end":16472512,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472513,"byte_end":16472516,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472517,"byte_end":16472528,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472529,"byte_end":16472581,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472582,"byte_end":16472647,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472648,"byte_end":16472713,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472714,"byte_end":16472779,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472780,"byte_end":16472787,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472788,"byte_end":16472791,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472792,"byte_end":16472868,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472869,"byte_end":16472943,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16472944,"byte_end":16473016,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473017,"byte_end":16473093,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473094,"byte_end":16473136,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473137,"byte_end":16473140,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473141,"byte_end":16473157,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473158,"byte_end":16473161,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473162,"byte_end":16473237,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473238,"byte_end":16473279,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473280,"byte_end":16473283,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473284,"byte_end":16473291,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473292,"byte_end":16473323,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473324,"byte_end":16473374,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473375,"byte_end":16473416,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473417,"byte_end":16473452,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473453,"byte_end":16473501,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473502,"byte_end":16473537,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473538,"byte_end":16473586,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473587,"byte_end":16473646,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473647,"byte_end":16473669,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473670,"byte_end":16473677,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473678,"byte_end":16473700,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473701,"byte_end":16473708,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473709,"byte_end":16473712,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473713,"byte_end":16473761,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473762,"byte_end":16473765,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473766,"byte_end":16473777,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473778,"byte_end":16473827,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473828,"byte_end":16473882,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473883,"byte_end":16473937,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473938,"byte_end":16473992,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16473993,"byte_end":16474000,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474001,"byte_end":16474004,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474005,"byte_end":16474078,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474079,"byte_end":16474146,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474147,"byte_end":16474150,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474151,"byte_end":16474167,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474168,"byte_end":16474171,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474172,"byte_end":16474248,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474249,"byte_end":16474321,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474322,"byte_end":16474361,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474362,"byte_end":16474365,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474366,"byte_end":16474373,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474374,"byte_end":16474405,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474406,"byte_end":16474456,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474457,"byte_end":16474498,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474499,"byte_end":16474534,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474535,"byte_end":16474583,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474584,"byte_end":16474619,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474620,"byte_end":16474667,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474668,"byte_end":16474688,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474689,"byte_end":16474711,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474712,"byte_end":16474719,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474720,"byte_end":16474742,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474743,"byte_end":16474750,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474751,"byte_end":16474754,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474755,"byte_end":16474803,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474804,"byte_end":16474807,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474808,"byte_end":16474819,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474820,"byte_end":16474872,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474873,"byte_end":16474938,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16474939,"byte_end":16475004,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475005,"byte_end":16475070,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475071,"byte_end":16475078,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475079,"byte_end":16475082,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475083,"byte_end":16475155,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475156,"byte_end":16475231,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475232,"byte_end":16475304,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475305,"byte_end":16475381,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475382,"byte_end":16475455,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475456,"byte_end":16475459,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475460,"byte_end":16475476,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475477,"byte_end":16475480,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475481,"byte_end":16475555,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475556,"byte_end":16475623,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475624,"byte_end":16475627,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475628,"byte_end":16475635,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475636,"byte_end":16475667,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475668,"byte_end":16475718,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475719,"byte_end":16475760,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475761,"byte_end":16475796,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475797,"byte_end":16475845,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475846,"byte_end":16475877,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475878,"byte_end":16475926,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475927,"byte_end":16475947,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475948,"byte_end":16475970,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475971,"byte_end":16475978,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16475979,"byte_end":16476001,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476002,"byte_end":16476009,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476010,"byte_end":16476013,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476014,"byte_end":16476062,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476063,"byte_end":16476066,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476067,"byte_end":16476078,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476079,"byte_end":16476105,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476106,"byte_end":16476151,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476152,"byte_end":16476197,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476198,"byte_end":16476243,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476244,"byte_end":16476247,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476248,"byte_end":16476276,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476277,"byte_end":16476322,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476323,"byte_end":16476368,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476369,"byte_end":16476414,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476415,"byte_end":16476422,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476423,"byte_end":16476426,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476427,"byte_end":16476499,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476500,"byte_end":16476576,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476577,"byte_end":16476647,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476648,"byte_end":16476717,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476718,"byte_end":16476755,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476756,"byte_end":16476759,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476760,"byte_end":16476834,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476835,"byte_end":16476889,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476890,"byte_end":16476893,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476894,"byte_end":16476910,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476911,"byte_end":16476914,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476915,"byte_end":16476988,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16476989,"byte_end":16477065,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477066,"byte_end":16477140,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477141,"byte_end":16477154,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477155,"byte_end":16477158,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477159,"byte_end":16477166,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477167,"byte_end":16477198,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477199,"byte_end":16477249,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477250,"byte_end":16477291,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477292,"byte_end":16477327,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477328,"byte_end":16477377,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477378,"byte_end":16477413,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477414,"byte_end":16477462,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477463,"byte_end":16477507,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477508,"byte_end":16477530,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477531,"byte_end":16477538,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477539,"byte_end":16477561,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477562,"byte_end":16477569,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477570,"byte_end":16477573,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477574,"byte_end":16477622,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477623,"byte_end":16477626,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477627,"byte_end":16477638,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477639,"byte_end":16477665,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477666,"byte_end":16477716,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477717,"byte_end":16477767,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477768,"byte_end":16477818,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477819,"byte_end":16477822,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477823,"byte_end":16477843,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477844,"byte_end":16477874,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477875,"byte_end":16477905,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477906,"byte_end":16477936,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477937,"byte_end":16477944,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477945,"byte_end":16477948,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16477949,"byte_end":16478022,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478023,"byte_end":16478098,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478099,"byte_end":16478171,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478172,"byte_end":16478210,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478211,"byte_end":16478214,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478215,"byte_end":16478289,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478290,"byte_end":16478366,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478367,"byte_end":16478440,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478441,"byte_end":16478469,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478470,"byte_end":16478473,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478474,"byte_end":16478490,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478491,"byte_end":16478494,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478495,"byte_end":16478568,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478569,"byte_end":16478645,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478646,"byte_end":16478720,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478721,"byte_end":16478793,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478794,"byte_end":16478805,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478806,"byte_end":16478809,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478810,"byte_end":16478817,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478818,"byte_end":16478849,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478850,"byte_end":16478900,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478901,"byte_end":16478942,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478943,"byte_end":16478978,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16478979,"byte_end":16479028,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479029,"byte_end":16479064,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479065,"byte_end":16479130,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479131,"byte_end":16479151,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479152,"byte_end":16479174,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479175,"byte_end":16479182,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479183,"byte_end":16479190,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479191,"byte_end":16479194,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479195,"byte_end":16479243,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479244,"byte_end":16479247,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479248,"byte_end":16479259,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479260,"byte_end":16479286,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479287,"byte_end":16479337,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479338,"byte_end":16479388,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479389,"byte_end":16479439,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479440,"byte_end":16479443,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479444,"byte_end":16479464,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479465,"byte_end":16479495,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479496,"byte_end":16479526,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479527,"byte_end":16479557,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479558,"byte_end":16479565,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479566,"byte_end":16479569,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479570,"byte_end":16479643,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479644,"byte_end":16479718,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479719,"byte_end":16479793,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479794,"byte_end":16479867,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479868,"byte_end":16479944,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479945,"byte_end":16479978,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479979,"byte_end":16479982,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16479983,"byte_end":16479999,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480000,"byte_end":16480003,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480004,"byte_end":16480078,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480079,"byte_end":16480146,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480147,"byte_end":16480150,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480151,"byte_end":16480158,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480159,"byte_end":16480190,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480191,"byte_end":16480241,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480242,"byte_end":16480283,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480284,"byte_end":16480319,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480320,"byte_end":16480368,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480369,"byte_end":16480400,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480401,"byte_end":16480448,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480449,"byte_end":16480495,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480496,"byte_end":16480518,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480519,"byte_end":16480526,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480527,"byte_end":16480549,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480550,"byte_end":16480557,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480558,"byte_end":16480561,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480562,"byte_end":16480610,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480611,"byte_end":16480614,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480615,"byte_end":16480626,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480627,"byte_end":16480683,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480684,"byte_end":16480745,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480746,"byte_end":16480807,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480808,"byte_end":16480869,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480870,"byte_end":16480877,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480878,"byte_end":16480881,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480882,"byte_end":16480956,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480957,"byte_end":16480977,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480978,"byte_end":16480981,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480982,"byte_end":16480996,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16480997,"byte_end":16481000,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481001,"byte_end":16481076,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481077,"byte_end":16481149,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481150,"byte_end":16481218,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481219,"byte_end":16481295,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481296,"byte_end":16481337,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481338,"byte_end":16481341,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481342,"byte_end":16481412,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481413,"byte_end":16481431,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481432,"byte_end":16481435,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481436,"byte_end":16481443,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481444,"byte_end":16481476,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481477,"byte_end":16481527,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481528,"byte_end":16481572,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481573,"byte_end":16481586,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481587,"byte_end":16481622,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481623,"byte_end":16481658,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481659,"byte_end":16481682,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481683,"byte_end":16481690,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481691,"byte_end":16481713,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481714,"byte_end":16481721,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481722,"byte_end":16481725,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481726,"byte_end":16481776,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481777,"byte_end":16481780,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481781,"byte_end":16481792,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481793,"byte_end":16481826,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481827,"byte_end":16481860,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481861,"byte_end":16481894,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481895,"byte_end":16481902,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481903,"byte_end":16481906,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481907,"byte_end":16481976,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16481977,"byte_end":16482014,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16482015,"byte_end":16482054,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16482055,"byte_end":16482100,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16482101,"byte_end":16482148,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16482149,"byte_end":16482179,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16482180,"byte_end":16482213,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16482780,"byte_end":16482787,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16482462,"byte_end":16482517,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16482518,"byte_end":16482521,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16482522,"byte_end":16482597,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16482598,"byte_end":16482678,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16482679,"byte_end":16482738,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":973},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16483458,"byte_end":16483483,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":974}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16483373,"byte_end":16483446,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1225},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16483835,"byte_end":16483855,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16483504,"byte_end":16483578,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16483579,"byte_end":16483582,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16483583,"byte_end":16483662,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16483663,"byte_end":16483706,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16483707,"byte_end":16483710,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16483711,"byte_end":16483764,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16483765,"byte_end":16483768,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16483769,"byte_end":16483799,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484199,"byte_end":16484202,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484108,"byte_end":16484187,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484429,"byte_end":16484436,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484326,"byte_end":16484401,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484406,"byte_end":16484417,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484658,"byte_end":16484674,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484486,"byte_end":16484527,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484532,"byte_end":16484535,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484540,"byte_end":16484613,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484618,"byte_end":16484646,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16485095,"byte_end":16485115,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484739,"byte_end":16484773,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484778,"byte_end":16484781,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484786,"byte_end":16484856,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484861,"byte_end":16484936,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484941,"byte_end":16485013,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16485018,"byte_end":16485083,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16487520,"byte_end":16487526,"line_start":553,"line_end":553,"column_start":8,"column_end":14},"name":"decode","qualname":"<LengthDelimitedCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> io::Result<Option<BytesMut>>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":514},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16488400,"byte_end":16488406,"line_start":583,"line_end":583,"column_start":8,"column_end":14},"name":"encode","qualname":"<LengthDelimitedCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, Bytes, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16489732,"byte_end":16489739,"line_start":625,"line_end":625,"column_start":8,"column_end":15},"name":"default","qualname":"<LengthDelimitedCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3155},"children":[],"decl_id":{"krate":2,"index":3156},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":993},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16489904,"byte_end":16489919,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16489828,"byte_end":16489889,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490844,"byte_end":16490847,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490298,"byte_end":16490373,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490378,"byte_end":16490389,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490394,"byte_end":16490397,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490402,"byte_end":16490416,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490421,"byte_end":16490424,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490429,"byte_end":16490436,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490441,"byte_end":16490472,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490477,"byte_end":16490525,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490530,"byte_end":16490533,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490538,"byte_end":16490579,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490584,"byte_end":16490619,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490624,"byte_end":16490655,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490660,"byte_end":16490695,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490700,"byte_end":16490729,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490734,"byte_end":16490754,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490759,"byte_end":16490781,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490786,"byte_end":16490793,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490798,"byte_end":16490820,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490825,"byte_end":16490832,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492032,"byte_end":16492042,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491511,"byte_end":16491560,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491565,"byte_end":16491568,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491573,"byte_end":16491605,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491610,"byte_end":16491613,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491618,"byte_end":16491686,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491691,"byte_end":16491694,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491699,"byte_end":16491713,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491718,"byte_end":16491721,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491726,"byte_end":16491733,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491738,"byte_end":16491769,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491774,"byte_end":16491822,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491827,"byte_end":16491830,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491835,"byte_end":16491876,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491881,"byte_end":16491916,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491921,"byte_end":16491942,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491947,"byte_end":16491969,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491974,"byte_end":16491981,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16491986,"byte_end":16492008,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492013,"byte_end":16492020,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492674,"byte_end":16492687,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492141,"byte_end":16492193,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492198,"byte_end":16492201,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492206,"byte_end":16492244,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492249,"byte_end":16492252,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492257,"byte_end":16492325,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492330,"byte_end":16492333,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492338,"byte_end":16492352,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492357,"byte_end":16492360,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492365,"byte_end":16492372,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492377,"byte_end":16492408,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492413,"byte_end":16492461,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492466,"byte_end":16492469,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492474,"byte_end":16492515,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492520,"byte_end":16492555,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492560,"byte_end":16492584,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492589,"byte_end":16492611,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492616,"byte_end":16492623,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492628,"byte_end":16492650,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492655,"byte_end":16492662,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493320,"byte_end":16493333,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492787,"byte_end":16492839,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492844,"byte_end":16492847,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492852,"byte_end":16492890,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492895,"byte_end":16492898,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492903,"byte_end":16492971,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492976,"byte_end":16492979,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16492984,"byte_end":16492998,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493003,"byte_end":16493006,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493011,"byte_end":16493018,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493023,"byte_end":16493054,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493059,"byte_end":16493107,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493112,"byte_end":16493115,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493120,"byte_end":16493161,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493166,"byte_end":16493201,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493206,"byte_end":16493230,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493235,"byte_end":16493257,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493262,"byte_end":16493269,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493274,"byte_end":16493296,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493301,"byte_end":16493308,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494430,"byte_end":16494446,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493502,"byte_end":16493540,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493545,"byte_end":16493548,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493553,"byte_end":16493625,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493630,"byte_end":16493655,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493660,"byte_end":16493663,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493668,"byte_end":16493740,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493745,"byte_end":16493814,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493819,"byte_end":16493892,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493897,"byte_end":16493909,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493914,"byte_end":16493917,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16493922,"byte_end":16493997,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494002,"byte_end":16494063,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494068,"byte_end":16494071,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494076,"byte_end":16494090,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494095,"byte_end":16494098,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494103,"byte_end":16494110,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494115,"byte_end":16494146,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494151,"byte_end":16494199,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494204,"byte_end":16494207,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494212,"byte_end":16494253,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494258,"byte_end":16494293,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494298,"byte_end":16494340,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494345,"byte_end":16494367,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494372,"byte_end":16494379,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494384,"byte_end":16494406,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494411,"byte_end":16494418,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495545,"byte_end":16495562,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"fn length_field_type<T>(&mut Self) -> &mut Self where\nT: builder::LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494543,"byte_end":16494613,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494618,"byte_end":16494621,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494626,"byte_end":16494699,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494704,"byte_end":16494724,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494729,"byte_end":16494732,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494737,"byte_end":16494751,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494756,"byte_end":16494759,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494764,"byte_end":16494771,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494776,"byte_end":16494807,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494812,"byte_end":16494860,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494865,"byte_end":16494868,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494873,"byte_end":16494914,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494919,"byte_end":16494954,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494959,"byte_end":16494994,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16494999,"byte_end":16495021,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495026,"byte_end":16495033,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495038,"byte_end":16495060,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495065,"byte_end":16495072,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495077,"byte_end":16495080,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495085,"byte_end":16495159,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495164,"byte_end":16495205,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495210,"byte_end":16495213,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495218,"byte_end":16495237,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495242,"byte_end":16495273,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495278,"byte_end":16495328,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495333,"byte_end":16495374,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495379,"byte_end":16495414,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495419,"byte_end":16495455,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495460,"byte_end":16495482,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495487,"byte_end":16495494,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495499,"byte_end":16495521,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495526,"byte_end":16495533,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496247,"byte_end":16496266,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495683,"byte_end":16495746,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495751,"byte_end":16495754,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495759,"byte_end":16495810,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495815,"byte_end":16495818,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495823,"byte_end":16495891,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495896,"byte_end":16495899,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495904,"byte_end":16495918,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495923,"byte_end":16495926,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495931,"byte_end":16495938,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495943,"byte_end":16495974,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16495979,"byte_end":16496027,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496032,"byte_end":16496035,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496040,"byte_end":16496081,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496086,"byte_end":16496121,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496126,"byte_end":16496157,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496162,"byte_end":16496184,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496189,"byte_end":16496196,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496201,"byte_end":16496223,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496228,"byte_end":16496235,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496925,"byte_end":16496944,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496435,"byte_end":16496501,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496506,"byte_end":16496509,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496514,"byte_end":16496569,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496574,"byte_end":16496577,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496582,"byte_end":16496596,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496601,"byte_end":16496604,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496609,"byte_end":16496616,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496621,"byte_end":16496652,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496657,"byte_end":16496705,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496710,"byte_end":16496713,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496718,"byte_end":16496759,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496764,"byte_end":16496799,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496804,"byte_end":16496835,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496840,"byte_end":16496862,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496867,"byte_end":16496874,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496879,"byte_end":16496901,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16496906,"byte_end":16496913,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497498,"byte_end":16497515,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497047,"byte_end":16497120,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497125,"byte_end":16497143,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497148,"byte_end":16497151,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497156,"byte_end":16497170,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497175,"byte_end":16497178,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497183,"byte_end":16497190,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497195,"byte_end":16497226,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497231,"byte_end":16497279,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497284,"byte_end":16497287,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497292,"byte_end":16497333,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497338,"byte_end":16497373,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497378,"byte_end":16497408,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497413,"byte_end":16497435,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497440,"byte_end":16497447,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497452,"byte_end":16497474,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497479,"byte_end":16497486,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498165,"byte_end":16498173,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497616,"byte_end":16497679,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497684,"byte_end":16497687,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497692,"byte_end":16497753,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497758,"byte_end":16497761,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497766,"byte_end":16497820,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497825,"byte_end":16497828,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497833,"byte_end":16497847,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497852,"byte_end":16497855,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497860,"byte_end":16497867,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497872,"byte_end":16497903,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497908,"byte_end":16497956,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497961,"byte_end":16497964,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16497969,"byte_end":16498010,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498015,"byte_end":16498050,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498055,"byte_end":16498075,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498080,"byte_end":16498102,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498107,"byte_end":16498114,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498119,"byte_end":16498141,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498146,"byte_end":16498153,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498697,"byte_end":16498706,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498271,"byte_end":16498334,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498339,"byte_end":16498342,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498347,"byte_end":16498361,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498366,"byte_end":16498369,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498374,"byte_end":16498381,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498386,"byte_end":16498434,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498439,"byte_end":16498460,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498465,"byte_end":16498500,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498505,"byte_end":16498536,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498541,"byte_end":16498576,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498581,"byte_end":16498610,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498615,"byte_end":16498635,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498640,"byte_end":16498661,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498666,"byte_end":16498673,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498678,"byte_end":16498685,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499366,"byte_end":16499374,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498858,"byte_end":16498911,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498916,"byte_end":16498919,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498924,"byte_end":16498938,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498943,"byte_end":16498946,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498951,"byte_end":16498958,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498963,"byte_end":16498994,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16498999,"byte_end":16499047,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499052,"byte_end":16499055,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499060,"byte_end":16499101,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499106,"byte_end":16499141,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499146,"byte_end":16499177,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499182,"byte_end":16499217,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499222,"byte_end":16499251,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499256,"byte_end":16499276,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499281,"byte_end":16499303,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499308,"byte_end":16499315,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499320,"byte_end":16499342,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499347,"byte_end":16499354,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499951,"byte_end":16499960,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499538,"byte_end":16499592,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499597,"byte_end":16499600,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499605,"byte_end":16499619,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499624,"byte_end":16499627,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499632,"byte_end":16499639,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499644,"byte_end":16499676,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499681,"byte_end":16499731,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499736,"byte_end":16499780,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499785,"byte_end":16499820,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499825,"byte_end":16499860,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499865,"byte_end":16499888,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499893,"byte_end":16499900,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499905,"byte_end":16499927,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16499932,"byte_end":16499939,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500573,"byte_end":16500583,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500121,"byte_end":16500170,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500175,"byte_end":16500178,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500183,"byte_end":16500197,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500202,"byte_end":16500205,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500210,"byte_end":16500217,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500222,"byte_end":16500267,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500272,"byte_end":16500322,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500327,"byte_end":16500383,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500388,"byte_end":16500401,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500406,"byte_end":16500441,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500446,"byte_end":16500481,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500486,"byte_end":16500510,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500515,"byte_end":16500522,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500527,"byte_end":16500549,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16500554,"byte_end":16500561,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16501083,"byte_end":16501090,"line_start":1028,"line_end":1028,"column_start":8,"column_end":15},"name":"default","qualname":"<Builder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3155},"children":[],"decl_id":{"krate":2,"index":3156},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16501234,"byte_end":16501237,"line_start":1036,"line_end":1036,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10016},"children":[],"decl_id":{"krate":2,"index":10017},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16501417,"byte_end":16501420,"line_start":1042,"line_end":1042,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10023},"children":[],"decl_id":{"krate":2,"index":10024},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1243},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16501962,"byte_end":16501972,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16501719,"byte_end":16501806,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16501807,"byte_end":16501810,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16501811,"byte_end":16501849,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16501850,"byte_end":16501888,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503072,"byte_end":16503075,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16502653,"byte_end":16502713,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16502718,"byte_end":16502721,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16502726,"byte_end":16502736,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16502741,"byte_end":16502744,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16502749,"byte_end":16502821,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16502826,"byte_end":16502899,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16502904,"byte_end":16502971,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16502976,"byte_end":16502979,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16502984,"byte_end":16503060,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504206,"byte_end":16504225,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503233,"byte_end":16503293,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503298,"byte_end":16503301,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503306,"byte_end":16503369,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503374,"byte_end":16503452,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503457,"byte_end":16503524,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503529,"byte_end":16503601,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503606,"byte_end":16503676,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503681,"byte_end":16503704,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503709,"byte_end":16503712,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503717,"byte_end":16503727,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503732,"byte_end":16503735,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503740,"byte_end":16503815,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503820,"byte_end":16503893,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503898,"byte_end":16503974,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16503979,"byte_end":16504052,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504057,"byte_end":16504127,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504132,"byte_end":16504135,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504140,"byte_end":16504194,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504791,"byte_end":16504801,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504353,"byte_end":16504403,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504408,"byte_end":16504411,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504416,"byte_end":16504423,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504428,"byte_end":16504447,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504452,"byte_end":16504490,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504495,"byte_end":16504498,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504503,"byte_end":16504537,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504542,"byte_end":16504589,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504594,"byte_end":16504601,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504606,"byte_end":16504613,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504618,"byte_end":16504656,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504661,"byte_end":16504664,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504669,"byte_end":16504722,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504727,"byte_end":16504767,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16504772,"byte_end":16504779,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16505267,"byte_end":16505273,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"<LinesCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":514},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16507885,"byte_end":16507895,"line_start":166,"line_end":166,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<LinesCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":515},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16508654,"byte_end":16508660,"line_start":191,"line_end":191,"column_start":8,"column_end":14},"name":"encode","qualname":"<LinesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, T, &mut BytesMut) -> Result<(), LinesCodecError>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16508927,"byte_end":16508934,"line_start":201,"line_end":201,"column_start":8,"column_end":15},"name":"default","qualname":"<LinesCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3155},"children":[],"decl_id":{"krate":2,"index":3156},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1266},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509127,"byte_end":16509148,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509081,"byte_end":16509122,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509184,"byte_end":16509186,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1265},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509154,"byte_end":16509179,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1270},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509187,"byte_end":16509196,"line_start":212,"line_end":212,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::lines_codec::LinesCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1265},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509059,"byte_end":16509074,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1268}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16508976,"byte_end":16509032,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509249,"byte_end":16509252,"line_start":216,"line_end":216,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LinesCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10023},"children":[],"decl_id":{"krate":2,"index":10024},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509546,"byte_end":16509550,"line_start":225,"line_end":225,"column_start":8,"column_end":12},"name":"from","qualname":"<LinesCodecError as std::convert::From>::from","value":"fn from(io::Error) -> LinesCodecError","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16511108,"byte_end":16511125,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16509922,"byte_end":16510063,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510064,"byte_end":16510067,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510068,"byte_end":16510106,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510107,"byte_end":16510145,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510146,"byte_end":16510149,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510150,"byte_end":16510163,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510164,"byte_end":16510231,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510232,"byte_end":16510235,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510236,"byte_end":16510269,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510270,"byte_end":16510299,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510300,"byte_end":16510303,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510304,"byte_end":16510311,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510312,"byte_end":16510368,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510369,"byte_end":16510403,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510404,"byte_end":16510407,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510408,"byte_end":16510413,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510414,"byte_end":16510461,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510462,"byte_end":16510515,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510516,"byte_end":16510593,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510594,"byte_end":16510629,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510630,"byte_end":16510651,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510652,"byte_end":16510702,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510703,"byte_end":16510766,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510767,"byte_end":16510830,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510831,"byte_end":16510894,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510895,"byte_end":16510951,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16510952,"byte_end":16511001,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16511002,"byte_end":16511014,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16511015,"byte_end":16511022,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16511023,"byte_end":16511030,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16511031,"byte_end":16511034,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512460,"byte_end":16512463,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512018,"byte_end":16512086,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512091,"byte_end":16512094,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512099,"byte_end":16512109,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512114,"byte_end":16512117,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512122,"byte_end":16512201,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512206,"byte_end":16512280,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512285,"byte_end":16512352,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512357,"byte_end":16512360,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512365,"byte_end":16512448,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513774,"byte_end":16513793,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512743,"byte_end":16512811,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512816,"byte_end":16512819,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512824,"byte_end":16512894,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512899,"byte_end":16512985,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16512990,"byte_end":16513060,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513065,"byte_end":16513142,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513147,"byte_end":16513217,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513222,"byte_end":16513245,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513250,"byte_end":16513253,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513258,"byte_end":16513268,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513273,"byte_end":16513276,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513281,"byte_end":16513363,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513368,"byte_end":16513441,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513446,"byte_end":16513523,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513528,"byte_end":16513601,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513606,"byte_end":16513681,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513686,"byte_end":16513689,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16513694,"byte_end":16513762,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514581,"byte_end":16514591,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514050,"byte_end":16514101,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514106,"byte_end":16514109,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514114,"byte_end":16514121,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514126,"byte_end":16514145,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514150,"byte_end":16514195,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514200,"byte_end":16514203,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514208,"byte_end":16514280,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514285,"byte_end":16514332,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514337,"byte_end":16514344,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514349,"byte_end":16514356,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514361,"byte_end":16514406,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514411,"byte_end":16514414,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514419,"byte_end":16514512,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514517,"byte_end":16514557,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514562,"byte_end":16514569,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514752,"byte_end":16514758,"line_start":138,"line_end":138,"column_start":8,"column_end":14},"name":"decode","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":514},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16517428,"byte_end":16517438,"line_start":195,"line_end":195,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":511},"children":[],"decl_id":{"krate":0,"index":515},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518063,"byte_end":16518069,"line_start":218,"line_end":218,"column_start":8,"column_end":14},"name":"encode","qualname":"<AnyDelimiterCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, T, &mut BytesMut) -> Result<(), AnyDelimiterCodecError>","parent":{"krate":0,"index":528},"children":[],"decl_id":{"krate":0,"index":531},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518377,"byte_end":16518384,"line_start":229,"line_end":229,"column_start":8,"column_end":15},"name":"default","qualname":"<AnyDelimiterCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3155},"children":[],"decl_id":{"krate":2,"index":3156},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1298},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518687,"byte_end":16518709,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518640,"byte_end":16518682,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1300},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518745,"byte_end":16518747,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518715,"byte_end":16518740,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1302},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518748,"byte_end":16518757,"line_start":243,"line_end":243,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1297},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518611,"byte_end":16518633,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1300}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518527,"byte_end":16518584,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518817,"byte_end":16518820,"line_start":247,"line_end":247,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AnyDelimiterCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10023},"children":[],"decl_id":{"krate":2,"index":10024},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16519168,"byte_end":16519172,"line_start":258,"line_end":258,"column_start":8,"column_end":12},"name":"from","qualname":"<AnyDelimiterCodecError as std::convert::From>::from","value":"fn from(io::Error) -> AnyDelimiterCodecError","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":337}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mod.rs","byte_start":7007,"byte_end":7037,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14476,"byte_end":14485,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1306}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14299,"byte_end":14363,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14364,"byte_end":14447,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14748,"byte_end":14754,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14561,"byte_end":14635,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14640,"byte_end":14710,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14715,"byte_end":14736,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14933,"byte_end":14937,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"drop","qualname":"<DropGuard as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3420},"children":[],"decl_id":{"krate":2,"index":3421},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8887,"byte_end":8904,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7665,"byte_end":7742,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7743,"byte_end":7753,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7754,"byte_end":7757,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7758,"byte_end":7823,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7824,"byte_end":7898,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7899,"byte_end":7902,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7903,"byte_end":7986,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7987,"byte_end":7990,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":7991,"byte_end":8005,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8006,"byte_end":8009,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8010,"byte_end":8023,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8024,"byte_end":8046,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8047,"byte_end":8091,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8092,"byte_end":8095,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8096,"byte_end":8114,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8115,"byte_end":8136,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8137,"byte_end":8182,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8183,"byte_end":8224,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8225,"byte_end":8228,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8229,"byte_end":8280,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8281,"byte_end":8344,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8345,"byte_end":8366,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8367,"byte_end":8416,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8417,"byte_end":8463,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8464,"byte_end":8485,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8486,"byte_end":8503,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8585,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8586,"byte_end":8608,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8609,"byte_end":8626,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8627,"byte_end":8640,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8641,"byte_end":8652,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8653,"byte_end":8656,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8657,"byte_end":8690,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8691,"byte_end":8766,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8767,"byte_end":8794,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8795,"byte_end":8806,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8807,"byte_end":8810,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8811,"byte_end":8861,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8862,"byte_end":8867,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":8868,"byte_end":8875,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9131,"byte_end":9156,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14160699,"byte_end":14160708,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9382,"byte_end":9385,"line_start":72,"line_end":72,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CancellationToken as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":10016},"children":[],"decl_id":{"krate":2,"index":10017},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9624,"byte_end":9629,"line_start":80,"line_end":80,"column_start":8,"column_end":13},"name":"clone","qualname":"<CancellationToken as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2799},"children":[],"decl_id":{"krate":2,"index":2800},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9832,"byte_end":9836,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"drop","qualname":"<CancellationToken as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3420},"children":[],"decl_id":{"krate":2,"index":3421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9961,"byte_end":9968,"line_start":95,"line_end":95,"column_start":8,"column_end":15},"name":"default","qualname":"<CancellationToken as std::default::Default>::default","value":"fn default() -> CancellationToken","parent":{"krate":2,"index":3155},"children":[],"decl_id":{"krate":2,"index":3156},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10140,"byte_end":10143,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10065,"byte_end":10128,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11542,"byte_end":11553,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10275,"byte_end":10346,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10351,"byte_end":10384,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10389,"byte_end":10392,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10397,"byte_end":10468,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10473,"byte_end":10505,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10510,"byte_end":10513,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10518,"byte_end":10532,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10537,"byte_end":10540,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10545,"byte_end":10558,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10563,"byte_end":10585,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10590,"byte_end":10634,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10639,"byte_end":10642,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10647,"byte_end":10665,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10670,"byte_end":10691,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10696,"byte_end":10741,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10746,"byte_end":10792,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10797,"byte_end":10800,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10805,"byte_end":10856,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10861,"byte_end":10924,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10929,"byte_end":10950,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10955,"byte_end":11003,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11008,"byte_end":11054,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11059,"byte_end":11080,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11085,"byte_end":11102,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11107,"byte_end":11188,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11193,"byte_end":11215,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11220,"byte_end":11237,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11242,"byte_end":11255,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11260,"byte_end":11271,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11276,"byte_end":11279,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11284,"byte_end":11317,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11322,"byte_end":11397,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11402,"byte_end":11429,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11434,"byte_end":11445,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11450,"byte_end":11453,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11458,"byte_end":11508,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11513,"byte_end":11518,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11523,"byte_end":11530,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12276,"byte_end":12282,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11688,"byte_end":11760,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11765,"byte_end":11785,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11790,"byte_end":11793,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11798,"byte_end":11865,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11870,"byte_end":11873,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11878,"byte_end":11951,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":11956,"byte_end":12031,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12036,"byte_end":12110,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12115,"byte_end":12187,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12192,"byte_end":12264,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12414,"byte_end":12426,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12343,"byte_end":12402,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12785,"byte_end":12794,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12500,"byte_end":12574,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12579,"byte_end":12582,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12587,"byte_end":12661,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12666,"byte_end":12697,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12702,"byte_end":12705,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12710,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12734,"byte_end":12737,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12742,"byte_end":12773,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13138,"byte_end":13148,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":12975,"byte_end":13016,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13021,"byte_end":13024,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13029,"byte_end":13101,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13106,"byte_end":13126,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13335,"byte_end":13338,"line_start":198,"line_end":198,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WaitForCancellationFuture as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":10016},"children":[],"decl_id":{"krate":2,"index":10017},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13555,"byte_end":13559,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"poll","qualname":"<WaitForCancellationFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<()>","parent":{"krate":2,"index":13444},"children":[],"decl_id":{"krate":2,"index":13446},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1346},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29551,"byte_end":29564,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29456,"byte_end":29522,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29843,"byte_end":29853,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29612,"byte_end":29650,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29655,"byte_end":29658,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29663,"byte_end":29757,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29762,"byte_end":29831,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29950,"byte_end":29953,"line_start":25,"line_end":25,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollSendError<T> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10023},"children":[],"decl_id":{"krate":2,"index":10024},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30373,"byte_end":30383,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30235,"byte_end":30292,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30293,"byte_end":30296,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30297,"byte_end":30344,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31287,"byte_end":31290,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31244,"byte_end":31275,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32274,"byte_end":32286,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"fn poll_reserve(&mut Self, &mut Context) -> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31613,"byte_end":31667,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31672,"byte_end":31675,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31680,"byte_end":31765,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31770,"byte_end":31786,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31791,"byte_end":31794,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31799,"byte_end":31893,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31898,"byte_end":31984,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31989,"byte_end":32060,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32065,"byte_end":32140,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32145,"byte_end":32148,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32153,"byte_end":32165,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32170,"byte_end":32173,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":32178,"byte_end":32262,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34291,"byte_end":34300,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"fn send_item(&mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":33831,"byte_end":33864,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":33869,"byte_end":33872,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":33877,"byte_end":33963,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":33968,"byte_end":34003,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34008,"byte_end":34011,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34016,"byte_end":34028,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34033,"byte_end":34036,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34041,"byte_end":34125,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34130,"byte_end":34133,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34138,"byte_end":34150,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34155,"byte_end":34158,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34163,"byte_end":34259,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":34264,"byte_end":34279,"line_start":138,"line_end":138,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35319,"byte_end":35328,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35173,"byte_end":35219,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35224,"byte_end":35227,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35232,"byte_end":35307,"line_start":161,"line_end":161,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35650,"byte_end":35657,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"fn get_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35426,"byte_end":35489,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35494,"byte_end":35497,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35502,"byte_end":35598,"line_start":168,"line_end":168,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35603,"byte_end":35638,"line_start":169,"line_end":169,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36455,"byte_end":36460,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35729,"byte_end":35752,"line_start":174,"line_end":174,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35757,"byte_end":35760,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35765,"byte_end":35859,"line_start":176,"line_end":176,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35864,"byte_end":35957,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35962,"byte_end":35965,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":35970,"byte_end":36064,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36069,"byte_end":36164,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36169,"byte_end":36265,"line_start":181,"line_end":181,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36270,"byte_end":36325,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36330,"byte_end":36333,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36338,"byte_end":36393,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":36398,"byte_end":36443,"line_start":185,"line_end":185,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37394,"byte_end":37404,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37098,"byte_end":37146,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37151,"byte_end":37154,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37159,"byte_end":37243,"line_start":205,"line_end":205,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37248,"byte_end":37343,"line_start":206,"line_end":206,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":37348,"byte_end":37382,"line_start":207,"line_end":207,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":39042,"byte_end":39047,"line_start":248,"line_end":248,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSender<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> PollSender<T>","parent":{"krate":2,"index":2799},"children":[],"decl_id":{"krate":2,"index":2800},"docs":" Clones this `PollSender`.","sig":null,"attributes":[{"value":"/ Clones this `PollSender`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":38895,"byte_end":38924,"line_start":245,"line_end":245,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":38929,"byte_end":38932,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The resulting `PollSender` will have an initial state identical to calling `PollSender::new`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":38937,"byte_end":39034,"line_start":247,"line_end":247,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":39674,"byte_end":39684,"line_start":267,"line_end":267,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<PollSender<T> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":39825,"byte_end":39835,"line_start":271,"line_end":271,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<PollSender<T> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":39958,"byte_end":39968,"line_start":275,"line_end":275,"column_start":8,"column_end":18},"name":"start_send","qualname":"<PollSender<T> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, T) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":40089,"byte_end":40099,"line_start":279,"line_end":279,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<PollSender<T> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40622,"byte_end":40635,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40491,"byte_end":40564,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40565,"byte_end":40568,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40569,"byte_end":40610,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40838,"byte_end":40841,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40793,"byte_end":40826,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41005,"byte_end":41010,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40968,"byte_end":40993,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41116,"byte_end":41127,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41062,"byte_end":41104,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41242,"byte_end":41252,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41197,"byte_end":41230,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41986,"byte_end":41998,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"fn poll_acquire(&mut Self, &mut Context) -> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41313,"byte_end":41361,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41366,"byte_end":41369,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41374,"byte_end":41415,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41420,"byte_end":41423,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41428,"byte_end":41490,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41495,"byte_end":41555,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41560,"byte_end":41620,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41625,"byte_end":41628,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41633,"byte_end":41708,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41713,"byte_end":41781,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41786,"byte_end":41862,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41867,"byte_end":41935,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":41940,"byte_end":41974,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43426,"byte_end":43443,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43142,"byte_end":43194,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43199,"byte_end":43202,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43207,"byte_end":43283,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43288,"byte_end":43322,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43327,"byte_end":43330,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43335,"byte_end":43414,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43903,"byte_end":43914,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43516,"byte_end":43558,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43563,"byte_end":43566,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43571,"byte_end":43644,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43649,"byte_end":43689,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43694,"byte_end":43697,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43702,"byte_end":43772,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43777,"byte_end":43811,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43816,"byte_end":43819,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43824,"byte_end":43891,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44060,"byte_end":44069,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollSemaphore as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":{"krate":40,"index":96},"children":[],"decl_id":{"krate":40,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44248,"byte_end":44253,"line_start":119,"line_end":119,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSemaphore as std::clone::Clone>::clone","value":"fn clone(&Self) -> PollSemaphore","parent":{"krate":2,"index":2799},"children":[],"decl_id":{"krate":2,"index":2800},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44379,"byte_end":44382,"line_start":125,"line_end":125,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollSemaphore as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10016},"children":[],"decl_id":{"krate":2,"index":10017},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44604,"byte_end":44610,"line_start":133,"line_end":133,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<PollSemaphore as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Semaphore","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45068,"byte_end":45085,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":285}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":44863,"byte_end":44925,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":44926,"byte_end":44929,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":44930,"byte_end":44997,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":44998,"byte_end":45056,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45281,"byte_end":45284,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45198,"byte_end":45269,"line_start":19,"line_end":19,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45654,"byte_end":45657,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45439,"byte_end":45491,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45496,"byte_end":45499,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45504,"byte_end":45576,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45581,"byte_end":45642,"line_start":32,"line_end":32,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":46095,"byte_end":46102,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45854,"byte_end":45906,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45911,"byte_end":45914,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45919,"byte_end":45992,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45997,"byte_end":46067,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":46072,"byte_end":46083,"line_start":46,"line_end":46,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47169,"byte_end":47176,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47105,"byte_end":47157,"line_start":71,"line_end":71,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47329,"byte_end":47333,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47274,"byte_end":47317,"line_start":76,"line_end":76,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47544,"byte_end":47548,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReusableBoxFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":2,"index":13444},"children":[],"decl_id":{"krate":2,"index":13446},"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47493,"byte_end":47536,"line_start":85,"line_end":85,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47960,"byte_end":47963,"line_start":97,"line_end":97,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReusableBoxFuture as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10016},"children":[],"decl_id":{"krate":2,"index":10017},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":1376},{"krate":0,"index":1385},{"krate":0,"index":1389},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":404}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50184,"byte_end":50219,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1379},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52166,"byte_end":52170,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1381},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52171,"byte_end":52172,"line_start":65,"line_end":65,"column_start":10,"column_end":11},"name":"0","qualname":"::either::Either::Left::0","value":"L","parent":{"krate":0,"index":1379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1382},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52179,"byte_end":52184,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1384},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52185,"byte_end":52186,"line_start":66,"line_end":66,"column_start":11,"column_end":12},"name":"0","qualname":"::either::Either::Right::0","value":"R","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1376},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52147,"byte_end":52153,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1382}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50396,"byte_end":50502,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50503,"byte_end":50506,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50507,"byte_end":50597,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50598,"byte_end":50601,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50602,"byte_end":50637,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50638,"byte_end":50641,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50642,"byte_end":50655,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50656,"byte_end":50659,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50660,"byte_end":50697,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50698,"byte_end":50701,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50702,"byte_end":50721,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50722,"byte_end":50764,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50765,"byte_end":50815,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50816,"byte_end":50867,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50868,"byte_end":50886,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50887,"byte_end":50908,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50909,"byte_end":50951,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50952,"byte_end":50985,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":50986,"byte_end":51002,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51003,"byte_end":51097,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51098,"byte_end":51108,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51109,"byte_end":51112,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51113,"byte_end":51160,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51161,"byte_end":51166,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51167,"byte_end":51174,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51175,"byte_end":51178,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51379,"byte_end":51382,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51383,"byte_end":51469,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51470,"byte_end":51480,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51481,"byte_end":51484,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51485,"byte_end":51492,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51493,"byte_end":51528,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51529,"byte_end":51571,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51572,"byte_end":51622,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51623,"byte_end":51674,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51675,"byte_end":51678,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51679,"byte_end":51697,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51698,"byte_end":51719,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51720,"byte_end":51762,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51763,"byte_end":51810,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51811,"byte_end":51827,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51828,"byte_end":51877,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51878,"byte_end":51888,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51889,"byte_end":51892,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51893,"byte_end":51926,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51927,"byte_end":51967,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":51968,"byte_end":52000,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52001,"byte_end":52006,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52007,"byte_end":52014,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52015,"byte_end":52037,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52894,"byte_end":52898,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"poll","qualname":"<Either<L, R> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13444},"children":[],"decl_id":{"krate":2,"index":13446},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53103,"byte_end":53112,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Either<L, R> as tokio::io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf) -> Poll<Result<()>>","parent":{"krate":22,"index":230},"children":[],"decl_id":{"krate":22,"index":231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53388,"byte_end":53401,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<Result<&[u8]>>","parent":{"krate":22,"index":188},"children":[],"decl_id":{"krate":22,"index":189},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53532,"byte_end":53539,"line_start":118,"line_end":118,"column_start":8,"column_end":15},"name":"consume","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":22,"index":188},"children":[],"decl_id":{"krate":22,"index":190},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53716,"byte_end":53726,"line_start":128,"line_end":128,"column_start":8,"column_end":18},"name":"start_seek","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::start_seek","value":"fn start_seek(Pin<&mut Self>, SeekFrom) -> Result<()>","parent":{"krate":22,"index":269},"children":[],"decl_id":{"krate":22,"index":270},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53849,"byte_end":53862,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::poll_complete","value":"fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<Result<u64>>","parent":{"krate":22,"index":269},"children":[],"decl_id":{"krate":22,"index":271},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54078,"byte_end":54088,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<Result<usize>>","parent":{"krate":22,"index":309},"children":[],"decl_id":{"krate":22,"index":310},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54233,"byte_end":54243,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<tokio::io::Result<()>>","parent":{"krate":22,"index":309},"children":[],"decl_id":{"krate":22,"index":311},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54379,"byte_end":54392,"line_start":150,"line_end":150,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown(Pin<&mut Self>, &mut Context) -> Poll<tokio::io::Result<()>>","parent":{"krate":22,"index":309},"children":[],"decl_id":{"krate":22,"index":312},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54714,"byte_end":54723,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Either<L, R> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":40,"index":96},"children":[],"decl_id":{"krate":40,"index":98},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422070,"byte_end":16422080,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422231,"byte_end":16422241,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422568,"byte_end":16422578,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422802,"byte_end":16422812,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16433049,"byte_end":16433058,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16433290,"byte_end":16433300,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16433451,"byte_end":16433460,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16433815,"byte_end":16433825,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16434071,"byte_end":16434079,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16434176,"byte_end":16434184,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16434295,"byte_end":16434303,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16434403,"byte_end":16434411,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16434521,"byte_end":16434531,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16442818,"byte_end":16442828,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16445663,"byte_end":16445669,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16449525,"byte_end":16449531,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16455922,"byte_end":16455928,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16456244,"byte_end":16456250,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16456965,"byte_end":16456971,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16458011,"byte_end":16458022,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16458949,"byte_end":16458959,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16459888,"byte_end":16459898,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16462728,"byte_end":16462738,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16463051,"byte_end":16463061,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16463787,"byte_end":16463797,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16464776,"byte_end":16464787,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465143,"byte_end":16465154,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16467999,"byte_end":16468010,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16468774,"byte_end":16468785,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16469026,"byte_end":16469037,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484081,"byte_end":16484101,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16487435,"byte_end":16487455,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16488341,"byte_end":16488361,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16489702,"byte_end":16489722,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490284,"byte_end":16490291,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16501066,"byte_end":16501073,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16501199,"byte_end":16501224,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16501382,"byte_end":16501407,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16501542,"byte_end":16501567,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16502636,"byte_end":16502646,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16505188,"byte_end":16505198,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16508574,"byte_end":16508584,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16508907,"byte_end":16508917,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509224,"byte_end":16509239,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509521,"byte_end":16509536,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509653,"byte_end":16509668,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16511994,"byte_end":16512011,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514660,"byte_end":16514677,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16517969,"byte_end":16517986,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518350,"byte_end":16518367,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518785,"byte_end":16518807,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16519136,"byte_end":16519158,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16519289,"byte_end":16519311,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14545,"byte_end":14554,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14914,"byte_end":14923,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/tree_node.rs","byte_start":17373,"byte_end":17381,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9355,"byte_end":9372,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9597,"byte_end":9614,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9805,"byte_end":9822,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10041,"byte_end":10058,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13296,"byte_end":13321,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13493,"byte_end":13518,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29589,"byte_end":29602,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29924,"byte_end":29937,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30097,"byte_end":30110,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31224,"byte_end":31234,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":38875,"byte_end":38885,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":39615,"byte_end":39625,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40773,"byte_end":40786,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43998,"byte_end":44011,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44225,"byte_end":44238,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44356,"byte_end":44369,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44581,"byte_end":44594,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45167,"byte_end":45184,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47440,"byte_end":47457,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47874,"byte_end":47891,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47926,"byte_end":47943,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":49331,"byte_end":49341,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":49629,"byte_end":49639,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":50037,"byte_end":50044,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52790,"byte_end":52796,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53039,"byte_end":53045,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53318,"byte_end":53324,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53652,"byte_end":53658,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54012,"byte_end":54018,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54570,"byte_end":54576,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":458}},{"kind":"Mod","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/mod.rs","byte_start":16420482,"byte_end":16420498,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":916}},{"kind":"Mod","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":864,"byte_end":868,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/lib.rs","byte_start":879,"byte_end":885,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":340}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422070,"byte_end":16422080,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422231,"byte_end":16422241,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422568,"byte_end":16422578,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/bytes_codec.rs","byte_start":16422802,"byte_end":16422812,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16433049,"byte_end":16433058,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":3155}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16433290,"byte_end":16433300,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3155}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16433451,"byte_end":16433460,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16433815,"byte_end":16433825,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16434071,"byte_end":16434079,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2774}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16434176,"byte_end":16434184,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16434295,"byte_end":16434303,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2774}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16434403,"byte_end":16434411,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16434521,"byte_end":16434531,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1660},"to":{"krate":40,"index":96}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_impl.rs","byte_start":16442818,"byte_end":16442828,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1660},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16445663,"byte_end":16445669,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16449525,"byte_end":16449531,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16455922,"byte_end":16455928,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1475},"to":{"krate":40,"index":96}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16456244,"byte_end":16456250,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1475},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16456965,"byte_end":16456971,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1475},"to":{"krate":2,"index":10016}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed.rs","byte_start":16458011,"byte_end":16458022,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16458949,"byte_end":16458959,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16459888,"byte_end":16459898,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16462728,"byte_end":16462738,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1434},"to":{"krate":40,"index":96}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16463051,"byte_end":16463061,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1434},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_read.rs","byte_start":16463787,"byte_end":16463797,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":10016}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16464776,"byte_end":16464787,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16465143,"byte_end":16465154,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16467999,"byte_end":16468010,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1393},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16468774,"byte_end":16468785,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1393},"to":{"krate":40,"index":96}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/framed_write.rs","byte_start":16469026,"byte_end":16469037,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1393},"to":{"krate":2,"index":10016}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16484081,"byte_end":16484101,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16487435,"byte_end":16487455,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16488341,"byte_end":16488361,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1225},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16489702,"byte_end":16489722,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1225},"to":{"krate":2,"index":3155}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16490284,"byte_end":16490291,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16501066,"byte_end":16501073,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":3155}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16501199,"byte_end":16501224,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":10016}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16501382,"byte_end":16501407,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":973},"to":{"krate":2,"index":10023}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/length_delimited.rs","byte_start":16501542,"byte_end":16501567,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":973},"to":{"krate":1,"index":2565}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16502636,"byte_end":16502646,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16505188,"byte_end":16505198,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16508574,"byte_end":16508584,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1243},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16508907,"byte_end":16508917,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1243},"to":{"krate":2,"index":3155}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509224,"byte_end":16509239,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":10023}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509521,"byte_end":16509536,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1265},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/lines_codec.rs","byte_start":16509653,"byte_end":16509668,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1265},"to":{"krate":1,"index":2565}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16511994,"byte_end":16512011,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16514660,"byte_end":16514677,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":511}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16517969,"byte_end":16517986,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":528}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518350,"byte_end":16518367,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":3155}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16518785,"byte_end":16518807,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":10023}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16519136,"byte_end":16519158,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/codec/any_delimiter_codec.rs","byte_start":16519289,"byte_end":16519311,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1297},"to":{"krate":1,"index":2565}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14545,"byte_end":14554,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/guard.rs","byte_start":14914,"byte_end":14923,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":3420}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token/tree_node.rs","byte_start":17373,"byte_end":17381,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9355,"byte_end":9372,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":10016}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9597,"byte_end":9614,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9805,"byte_end":9822,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3420}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3155}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":10041,"byte_end":10058,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13296,"byte_end":13321,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":10016}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/cancellation_token.rs","byte_start":13493,"byte_end":13518,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":13444}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29589,"byte_end":29602,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":29924,"byte_end":29937,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":10023}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":30097,"byte_end":30110,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1346},"to":{"krate":1,"index":2565}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":31224,"byte_end":31234,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":38875,"byte_end":38885,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/mpsc.rs","byte_start":39615,"byte_end":39625,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1368},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":40773,"byte_end":40786,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":43998,"byte_end":44011,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":226},"to":{"krate":40,"index":96}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44225,"byte_end":44238,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2799}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44356,"byte_end":44369,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":10016}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/poll_semaphore.rs","byte_start":44581,"byte_end":44594,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":45167,"byte_end":45184,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47440,"byte_end":47457,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":13444}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47874,"byte_end":47891,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":47926,"byte_end":47943,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":10016}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":49331,"byte_end":49341,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":49629,"byte_end":49639,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":3420}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/sync/reusable_box.rs","byte_start":50037,"byte_end":50044,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":13444}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":52790,"byte_end":52796,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":13444}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53039,"byte_end":53045,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":230}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53318,"byte_end":53324,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":188}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":53652,"byte_end":53658,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":269}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54012,"byte_end":54018,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1376},"to":{"krate":22,"index":309}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.3/src/either.rs","byte_start":54570,"byte_end":54576,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1376},"to":{"krate":40,"index":96}}]}