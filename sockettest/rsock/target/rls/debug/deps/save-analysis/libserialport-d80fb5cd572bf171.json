{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0","program":"/home/pythomancer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","serialport","--edition=2018","/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=d80fb5cd572bf171","-C","extra-filename=-d80fb5cd572bf171","--out-dir","/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps","-L","dependency=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps","--extern","bitflags=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libbitflags-f75283d3dcd3daad.rmeta","--extern","cfg_if=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libcfg_if-88879d2dc0fa106c.rmeta","--extern","nix=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libnix-fb8ce3e1d140d17e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pythomancer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libserialport-d80fb5cd572bf171.rmeta"},"prelude":{"crate_id":{"name":"serialport","disambiguator":[14976693076343597500,0]},"crate_root":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src","external_crates":[{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17410308932696108380,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14414087034259949263,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13372101680896079740,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5118101865554607907,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8025854276978217217,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4385070015268585674,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9992538824178466914,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15270312766295648766,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[18385953104680678603,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9852578511365041000,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2269743475717416395,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17706006846336192414,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6383024135923770218,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[10215543262378548890,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[4195348899700366916,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[10100673089080813811,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[341892175500051738,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[141027009196343679,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[5788120405916140848,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/enumerate.rs","num":20,"id":{"name":"cfg_if","disambiguator":[2189248502941426736,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/error.rs","num":21,"id":{"name":"nix","disambiguator":[11414392376107494547,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/error.rs","num":22,"id":{"name":"libc","disambiguator":[5170842456214530381,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/ioctl.rs","num":23,"id":{"name":"bitflags","disambiguator":[9566197753691594951,0]}}],"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":0,"byte_end":22697,"line_start":1,"line_end":701,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/mod.rs","byte_start":22746,"byte_end":22747,"line_start":2,"line_end":2,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"BreakDuration, TTYPort","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":585},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":1491,"byte_end":1504,"line_start":38,"line_end":38,"column_start":17,"column_end":30},"alias_span":null,"name":"BreakDuration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":1506,"byte_end":1513,"line_start":38,"line_end":38,"column_start":32,"column_end":39},"alias_span":null,"name":"TTYPort","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":0,"byte_end":22697,"line_start":1,"line_end":701,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":596},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":352},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":625},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":364},{"krate":0,"index":377},{"krate":0,"index":403},{"krate":0,"index":734},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":430},{"krate":0,"index":433}],"decl_id":null,"docs":" serialport-rs is a cross-platform serial port library.","sig":null,"attributes":[{"value":"/ serialport-rs is a cross-platform serial port library.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":0,"byte_end":58,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":59,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The goal of this library is to expose a cross-platform and platform-specific API for enumerating","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":63,"byte_end":163,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"/ and using blocking I/O with serial ports. This library exposes a similar API to that provided","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":164,"byte_end":261,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ by [Qt's `QSerialPort` library](https://doc.qt.io/qt-5/qserialport.html).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":262,"byte_end":339,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":340,"byte_end":343,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Feature Overview","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":344,"byte_end":366,"line_start":7,"line_end":7,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":367,"byte_end":370,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The library has been organized such that there is a high-level `SerialPort` trait that provides","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":371,"byte_end":470,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/ a cross-platform API for accessing serial ports. This is the preferred method of interacting","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":471,"byte_end":567,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ with ports. The `SerialPort::new().open*()` and `available_ports()` functions in the root","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":568,"byte_end":661,"line_start":11,"line_end":11,"column_start":1,"column_end":94}},{"value":"/ provide cross-platform functionality.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":662,"byte_end":703,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":704,"byte_end":707,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ For platform-specific functionaly, this crate is split into a `posix` and `windows` API with","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":708,"byte_end":804,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ corresponding `TTYPort` and `COMPort` structs (that both implement the `SerialPort` trait).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":805,"byte_end":900,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ Using the platform-specific `SerialPort::new().open*()` functions will return the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":901,"byte_end":986,"line_start":16,"line_end":16,"column_start":1,"column_end":86}},{"value":"/ platform-specific port object which allows access to platform-specific functionality.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":987,"byte_end":1076,"line_start":17,"line_end":17,"column_start":1,"column_end":90}},{"value":"deny(missing_docs, missing_debug_implementations,\nmissing_copy_implementations, unused)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":1078,"byte_end":1187,"line_start":19,"line_end":24,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/error.rs","byte_start":41709,"byte_end":41713,"line_start":19,"line_end":19,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(nix::Error) -> Error","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":578},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":59825,"byte_end":59832,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"TTYPort","qualname":"::posix::tty::TTYPort","value":"TTYPort {  }","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582}],"decl_id":null,"docs":" A serial port implementation for POSIX TTY ports","sig":null,"attributes":[{"value":"/ A serial port implementation for POSIX TTY ports","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":59497,"byte_end":59549,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":59550,"byte_end":59553,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The port will be closed when the value is dropped. However, this struct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":59554,"byte_end":59629,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ should not be instantiated directly by using `TTYPort::open()`, instead use","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":59630,"byte_end":59709,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ the cross-platform `serialport::open()` or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":59710,"byte_end":59756,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"/ `serialport::open_with_settings()`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":59757,"byte_end":59796,"line_start":39,"line_end":39,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":586},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60132,"byte_end":60137,"line_start":54,"line_end":54,"column_start":5,"column_end":10},"name":"Short","qualname":"::posix::tty::BreakDuration::Short","value":"BreakDuration::Short","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" 0.25-0.5s\n","sig":null,"attributes":[{"value":"/ 0.25-0.5s","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60114,"byte_end":60127,"line_start":53,"line_end":53,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":588},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60205,"byte_end":60214,"line_start":56,"line_end":56,"column_start":5,"column_end":14},"name":"Arbitrary","qualname":"::posix::tty::BreakDuration::Arbitrary","value":"BreakDuration::Arbitrary(std::num::NonZeroI32)","parent":{"krate":0,"index":585},"children":[],"decl_id":null,"docs":" Specifies a break duration that is platform-dependent\n","sig":null,"attributes":[{"value":"/ Specifies a break duration that is platform-dependent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60143,"byte_end":60200,"line_start":55,"line_end":55,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":590},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60215,"byte_end":60235,"line_start":56,"line_end":56,"column_start":15,"column_end":35},"name":"0","qualname":"::posix::tty::BreakDuration::Arbitrary::0","value":"std::num::NonZeroI32","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":585},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60094,"byte_end":60107,"line_start":52,"line_end":52,"column_start":10,"column_end":23},"name":"BreakDuration","qualname":"::posix::tty::BreakDuration","value":"enum BreakDuration { Short, Arbitrary(std::num::NonZeroI32), }","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":588}],"decl_id":null,"docs":" Specifies the duration of a transmission break\n","sig":null,"attributes":[{"value":"/ Specifies the duration of a transmission break","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60004,"byte_end":60054,"line_start":50,"line_end":50,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":61488,"byte_end":61492,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"open","qualname":"<TTYPort>::open","value":"fn open(&SerialPortBuilder) -> Result<TTYPort>","parent":null,"children":[],"decl_id":null,"docs":" Opens a TTY device as a serial port.","sig":null,"attributes":[{"value":"/ Opens a TTY device as a serial port.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60674,"byte_end":60714,"line_start":80,"line_end":80,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60719,"byte_end":60722,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `path` should be the path to a TTY device, e.g., `/dev/ttyS0`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60727,"byte_end":60793,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60798,"byte_end":60801,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Ports are opened in exclusive mode by default. If this is undesireable","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60806,"byte_end":60880,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ behavior, use `TTYPort::set_exclusive(false)`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60885,"byte_end":60935,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60940,"byte_end":60943,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If the port settings differ from the default settings, characters received","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60948,"byte_end":61026,"line_start":87,"line_end":87,"column_start":5,"column_end":83}},{"value":"/ before the new settings become active may be garbled. To remove those","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":61031,"byte_end":61104,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ from the receive buffer, call `TTYPort::clear(ClearBuffer::Input)`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":61109,"byte_end":61180,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":61185,"byte_end":61188,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":61193,"byte_end":61206,"line_start":91,"line_end":91,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":61211,"byte_end":61214,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device could not be opened. This could indicate that","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":61219,"byte_end":61295,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/    the device is already in use.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":61300,"byte_end":61336,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ * `InvalidInput` if `path` is not a valid device name.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":61341,"byte_end":61399,"line_start":95,"line_end":95,"column_start":5,"column_end":63}},{"value":"/ * `Io` for any other error while opening or initializing the device.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":61404,"byte_end":61476,"line_start":96,"line_end":96,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":64847,"byte_end":64856,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<TTYPort>::exclusive","value":"fn exclusive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the exclusivity of the port","sig":null,"attributes":[{"value":"/ Returns the exclusivity of the port","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":64690,"byte_end":64729,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":64734,"byte_end":64737,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If a port is exclusive, then trying to open the same device path again","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":64742,"byte_end":64816,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ will fail.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":64821,"byte_end":64835,"line_start":174,"line_end":174,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":65255,"byte_end":65268,"line_start":189,"line_end":189,"column_start":12,"column_end":25},"name":"set_exclusive","qualname":"<TTYPort>::set_exclusive","value":"fn set_exclusive(&mut Self, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the exclusivity of the port","sig":null,"attributes":[{"value":"/ Sets the exclusivity of the port","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":64908,"byte_end":64944,"line_start":179,"line_end":179,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":64949,"byte_end":64952,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ If a port is exclusive, then trying to open the same device path again","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":64957,"byte_end":65031,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/ will fail.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":65036,"byte_end":65050,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":65055,"byte_end":65058,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ See the man pages for the tiocexcl and tiocnxcl ioctl's for more details.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":65063,"byte_end":65140,"line_start":184,"line_end":184,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":65145,"byte_end":65148,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":65153,"byte_end":65166,"line_start":186,"line_end":186,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":65171,"byte_end":65174,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ * `Io` for any error while setting exclusivity for the port.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":65179,"byte_end":65243,"line_start":188,"line_end":188,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66556,"byte_end":66560,"line_start":235,"line_end":235,"column_start":12,"column_end":16},"name":"pair","qualname":"<TTYPort>::pair","value":"fn pair() -> Result<(Self, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Create a pair of pseudo serial terminals","sig":null,"attributes":[{"value":"/ Create a pair of pseudo serial terminals","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":65979,"byte_end":66023,"line_start":216,"line_end":216,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66028,"byte_end":66031,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ## Returns","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66036,"byte_end":66050,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/ Two connected `TTYPort` objects: `(master, slave)`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66055,"byte_end":66109,"line_start":219,"line_end":219,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66114,"byte_end":66117,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66122,"byte_end":66135,"line_start":221,"line_end":221,"column_start":5,"column_end":18}},{"value":"/ Attempting any IO or parameter settings on the slave tty after the master","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66140,"byte_end":66217,"line_start":222,"line_end":222,"column_start":5,"column_end":82}},{"value":"/ tty is closed will return errors.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66222,"byte_end":66259,"line_start":223,"line_end":223,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66264,"byte_end":66267,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ On some platforms manipulating the master port will fail and only","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66272,"byte_end":66341,"line_start":225,"line_end":225,"column_start":5,"column_end":74}},{"value":"/ modifying the slave port is possible.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66346,"byte_end":66387,"line_start":226,"line_end":226,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66392,"byte_end":66395,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66400,"byte_end":66415,"line_start":228,"line_end":228,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66420,"byte_end":66423,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66428,"byte_end":66435,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use serialport::TTYPort;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66440,"byte_end":66468,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66473,"byte_end":66476,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let (master, slave) = TTYPort::pair().unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66481,"byte_end":66532,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":66537,"byte_end":66544,"line_start":234,"line_end":234,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":69240,"byte_end":69250,"line_start":312,"line_end":312,"column_start":12,"column_end":22},"name":"send_break","qualname":"<TTYPort>::send_break","value":"fn send_break(&Self, BreakDuration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sends 0-valued bits over the port for a set duration\n","sig":null,"attributes":[{"value":"/ Sends 0-valued bits over the port for a set duration","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":69172,"byte_end":69228,"line_start":311,"line_end":311,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70355,"byte_end":70371,"line_start":334,"line_end":334,"column_start":12,"column_end":28},"name":"try_clone_native","qualname":"<TTYPort>::try_clone_native","value":"fn try_clone_native(&Self) -> Result<TTYPort>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the `SerialPort`. This allow you to write and read simultaneously from the\n same serial connection. Please note that if you want a real asynchronous serial port you\n should look at [mio-serial](https://crates.io/crates/mio-serial) or\n [tokio-serial](https://crates.io/crates/tokio-serial).","sig":null,"attributes":[{"value":"/ Attempts to clone the `SerialPort`. This allow you to write and read simultaneously from the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":69549,"byte_end":69645,"line_start":320,"line_end":320,"column_start":5,"column_end":101}},{"value":"/ same serial connection. Please note that if you want a real asynchronous serial port you","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":69650,"byte_end":69742,"line_start":321,"line_end":321,"column_start":5,"column_end":97}},{"value":"/ should look at [mio-serial](https://crates.io/crates/mio-serial) or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":69747,"byte_end":69818,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/ [tokio-serial](https://crates.io/crates/tokio-serial).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":69823,"byte_end":69881,"line_start":323,"line_end":323,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":69886,"byte_end":69889,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Also, you must be very careful when changing the settings of a cloned `SerialPort` : since","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":69894,"byte_end":69988,"line_start":325,"line_end":325,"column_start":5,"column_end":99}},{"value":"/ the settings are cached on a per object basis, trying to modify them from two different","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":69993,"byte_end":70084,"line_start":326,"line_end":326,"column_start":5,"column_end":96}},{"value":"/ objects can cause some nasty behavior.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70089,"byte_end":70131,"line_start":327,"line_end":327,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70136,"byte_end":70139,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This is the same as `SerialPort::try_clone()` but returns the concrete type instead.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70144,"byte_end":70232,"line_start":329,"line_end":329,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70237,"byte_end":70240,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70245,"byte_end":70257,"line_start":331,"line_end":331,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70262,"byte_end":70265,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the serial port couldn't be cloned.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70270,"byte_end":70343,"line_start":333,"line_end":333,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70799,"byte_end":70803,"line_start":348,"line_end":348,"column_start":8,"column_end":12},"name":"drop","qualname":"<TTYPort as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3420},"children":[],"decl_id":{"krate":2,"index":3421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70884,"byte_end":70893,"line_start":354,"line_end":354,"column_start":8,"column_end":17},"name":"as_raw_fd","qualname":"<TTYPort as std::os::unix::io::AsRawFd>::as_raw_fd","value":"fn as_raw_fd(&Self) -> RawFd","parent":{"krate":1,"index":6753},"children":[],"decl_id":{"krate":1,"index":6754},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70973,"byte_end":70984,"line_start":360,"line_end":360,"column_start":8,"column_end":19},"name":"into_raw_fd","qualname":"<TTYPort as std::os::unix::io::IntoRawFd>::into_raw_fd","value":"fn into_raw_fd(Self) -> RawFd","parent":{"krate":1,"index":6757},"children":[],"decl_id":{"krate":1,"index":6758},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":71833,"byte_end":71844,"line_start":382,"line_end":382,"column_start":15,"column_end":26},"name":"from_raw_fd","qualname":"<TTYPort as std::os::unix::io::FromRawFd>::from_raw_fd","value":"unsafe fn from_raw_fd(RawFd) -> Self","parent":{"krate":1,"index":6755},"children":[],"decl_id":{"krate":1,"index":6756},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":72619,"byte_end":72623,"line_start":400,"line_end":400,"column_start":8,"column_end":12},"name":"read","qualname":"<TTYPort as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4527},"children":[],"decl_id":{"krate":1,"index":4528},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":72947,"byte_end":72952,"line_start":410,"line_end":410,"column_start":8,"column_end":13},"name":"write","qualname":"<TTYPort as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4584},"children":[],"decl_id":{"krate":1,"index":4585},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":73243,"byte_end":73248,"line_start":418,"line_end":418,"column_start":8,"column_end":13},"name":"flush","qualname":"<TTYPort as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4584},"children":[],"decl_id":{"krate":1,"index":4589},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":73449,"byte_end":73453,"line_start":425,"line_end":425,"column_start":8,"column_end":12},"name":"name","qualname":"<TTYPort as SerialPort>::name","value":"fn name(&Self) -> Option<String>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":378},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":73958,"byte_end":73967,"line_start":444,"line_end":444,"column_start":8,"column_end":17},"name":"baud_rate","qualname":"<TTYPort as SerialPort>::baud_rate","value":"fn baud_rate(&Self) -> Result<u32>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":379},"docs":" Returns the port's baud rate","sig":null,"attributes":[{"value":"/ Returns the port's baud rate","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":73523,"byte_end":73555,"line_start":429,"line_end":429,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":73560,"byte_end":73563,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ On some platforms this will be the actual device baud rate, which may differ from the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":73568,"byte_end":73657,"line_start":431,"line_end":431,"column_start":5,"column_end":94}},{"value":"/ desired baud rate.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":73662,"byte_end":73684,"line_start":432,"line_end":432,"column_start":5,"column_end":27}},{"value":"cfg(any(target_os = \"android\",\nall(target_os = \"linux\",\nnot(any(target_env = \"musl\", target_arch = \"powerpc\", target_arch =\n\"powerpc64\")))))","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":73689,"byte_end":73950,"line_start":433,"line_end":443,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":77016,"byte_end":77025,"line_start":547,"line_end":547,"column_start":8,"column_end":17},"name":"data_bits","qualname":"<TTYPort as SerialPort>::data_bits","value":"fn data_bits(&Self) -> Result<DataBits>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":380},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":77502,"byte_end":77514,"line_start":561,"line_end":561,"column_start":8,"column_end":20},"name":"flow_control","qualname":"<TTYPort as SerialPort>::flow_control","value":"fn flow_control(&Self) -> Result<FlowControl>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":381},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":77909,"byte_end":77915,"line_start":572,"line_end":572,"column_start":8,"column_end":14},"name":"parity","qualname":"<TTYPort as SerialPort>::parity","value":"fn parity(&Self) -> Result<Parity>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":382},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":78291,"byte_end":78300,"line_start":585,"line_end":585,"column_start":8,"column_end":17},"name":"stop_bits","qualname":"<TTYPort as SerialPort>::stop_bits","value":"fn stop_bits(&Self) -> Result<StopBits>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":383},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":78545,"byte_end":78552,"line_start":594,"line_end":594,"column_start":8,"column_end":15},"name":"timeout","qualname":"<TTYPort as SerialPort>::timeout","value":"fn timeout(&Self) -> Duration","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":384},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":78819,"byte_end":78832,"line_start":606,"line_end":606,"column_start":8,"column_end":21},"name":"set_baud_rate","qualname":"<TTYPort as SerialPort>::set_baud_rate","value":"fn set_baud_rate(&mut Self, u32) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":385},"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonflybsd\", target_os =\n\"freebsd\", target_os = \"netbsd\", target_os = \"openbsd\", target_os = \"linux\"))","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":78606,"byte_end":78811,"line_start":598,"line_end":605,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":79368,"byte_end":79384,"line_start":620,"line_end":620,"column_start":8,"column_end":24},"name":"set_flow_control","qualname":"<TTYPort as SerialPort>::set_flow_control","value":"fn set_flow_control(&mut Self, FlowControl) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":387},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":79827,"byte_end":79837,"line_start":629,"line_end":629,"column_start":8,"column_end":18},"name":"set_parity","qualname":"<TTYPort as SerialPort>::set_parity","value":"fn set_parity(&mut Self, Parity) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":388},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":80257,"byte_end":80270,"line_start":638,"line_end":638,"column_start":8,"column_end":21},"name":"set_data_bits","qualname":"<TTYPort as SerialPort>::set_data_bits","value":"fn set_data_bits(&mut Self, DataBits) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":386},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":80701,"byte_end":80714,"line_start":647,"line_end":647,"column_start":8,"column_end":21},"name":"set_stop_bits","qualname":"<TTYPort as SerialPort>::set_stop_bits","value":"fn set_stop_bits(&mut Self, StopBits) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":389},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":81145,"byte_end":81156,"line_start":656,"line_end":656,"column_start":8,"column_end":19},"name":"set_timeout","qualname":"<TTYPort as SerialPort>::set_timeout","value":"fn set_timeout(&mut Self, Duration) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":390},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":81264,"byte_end":81285,"line_start":661,"line_end":661,"column_start":8,"column_end":29},"name":"write_request_to_send","qualname":"<TTYPort as SerialPort>::write_request_to_send","value":"fn write_request_to_send(&mut Self, bool) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":391},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":81398,"byte_end":81423,"line_start":665,"line_end":665,"column_start":8,"column_end":33},"name":"write_data_terminal_ready","qualname":"<TTYPort as SerialPort>::write_data_terminal_ready","value":"fn write_data_terminal_ready(&mut Self, bool) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":392},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":81540,"byte_end":81558,"line_start":669,"line_end":669,"column_start":8,"column_end":26},"name":"read_clear_to_send","qualname":"<TTYPort as SerialPort>::read_clear_to_send","value":"fn read_clear_to_send(&mut Self) -> Result<bool>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":393},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":81652,"byte_end":81671,"line_start":673,"line_end":673,"column_start":8,"column_end":27},"name":"read_data_set_ready","qualname":"<TTYPort as SerialPort>::read_data_set_ready","value":"fn read_data_set_ready(&mut Self) -> Result<bool>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":81766,"byte_end":81785,"line_start":677,"line_end":677,"column_start":8,"column_end":27},"name":"read_ring_indicator","qualname":"<TTYPort as SerialPort>::read_ring_indicator","value":"fn read_ring_indicator(&mut Self) -> Result<bool>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":395},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":81870,"byte_end":81889,"line_start":681,"line_end":681,"column_start":8,"column_end":27},"name":"read_carrier_detect","qualname":"<TTYPort as SerialPort>::read_carrier_detect","value":"fn read_carrier_detect(&mut Self) -> Result<bool>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":81989,"byte_end":82002,"line_start":685,"line_end":685,"column_start":8,"column_end":21},"name":"bytes_to_read","qualname":"<TTYPort as SerialPort>::bytes_to_read","value":"fn bytes_to_read(&Self) -> Result<u32>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":397},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":82074,"byte_end":82088,"line_start":689,"line_end":689,"column_start":8,"column_end":22},"name":"bytes_to_write","qualname":"<TTYPort as SerialPort>::bytes_to_write","value":"fn bytes_to_write(&Self) -> Result<u32>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":82160,"byte_end":82165,"line_start":693,"line_end":693,"column_start":8,"column_end":13},"name":"clear","qualname":"<TTYPort as SerialPort>::clear","value":"fn clear(&Self, ClearBuffer) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":399},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":82612,"byte_end":82621,"line_start":707,"line_end":707,"column_start":8,"column_end":17},"name":"try_clone","qualname":"<TTYPort as SerialPort>::try_clone","value":"fn try_clone(&Self) -> Result<Box<dyn SerialPort>>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":82794,"byte_end":82803,"line_start":714,"line_end":714,"column_start":8,"column_end":17},"name":"set_break","qualname":"<TTYPort as SerialPort>::set_break","value":"fn set_break(&Self) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":401},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":82874,"byte_end":82885,"line_start":718,"line_end":718,"column_start":8,"column_end":19},"name":"clear_break","qualname":"<TTYPort as SerialPort>::clear_break","value":"fn clear_break(&Self) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":402},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":350},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":1746,"byte_end":1752,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A type for results generated by interacting with serial ports","sig":null,"attributes":[{"value":"/ A type for results generated by interacting with serial ports","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":1589,"byte_end":1654,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":1655,"byte_end":1658,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The `Err` type is hard-wired to [`serialport::Error`](struct.Error.html).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":1659,"byte_end":1736,"line_start":47,"line_end":47,"column_start":1,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":597},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2215,"byte_end":2223,"line_start":60,"line_end":60,"column_start":5,"column_end":13},"name":"NoDevice","qualname":"::ErrorKind::NoDevice","value":"ErrorKind::NoDevice","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" The device is not available.","sig":null,"attributes":[{"value":"/ The device is not available.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2047,"byte_end":2079,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2084,"byte_end":2087,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This could indicate that the device is in use by another process or was","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2092,"byte_end":2167,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ disconnected while performing I/O.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2172,"byte_end":2210,"line_start":59,"line_end":59,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":599},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2265,"byte_end":2277,"line_start":63,"line_end":63,"column_start":5,"column_end":17},"name":"InvalidInput","qualname":"::ErrorKind::InvalidInput","value":"ErrorKind::InvalidInput","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" A parameter was incorrect.\n","sig":null,"attributes":[{"value":"/ A parameter was incorrect.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2230,"byte_end":2260,"line_start":62,"line_end":62,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":601},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2319,"byte_end":2326,"line_start":66,"line_end":66,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::ErrorKind::Unknown","value":"ErrorKind::Unknown","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" An unknown error occurred.\n","sig":null,"attributes":[{"value":"/ An unknown error occurred.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2284,"byte_end":2314,"line_start":65,"line_end":65,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":603},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2446,"byte_end":2448,"line_start":71,"line_end":71,"column_start":5,"column_end":7},"name":"Io","qualname":"::ErrorKind::Io","value":"ErrorKind::Io(io::ErrorKind)","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" An I/O error occurred.","sig":null,"attributes":[{"value":"/ An I/O error occurred.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2333,"byte_end":2359,"line_start":68,"line_end":68,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2364,"byte_end":2367,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The type of I/O error is determined by the inner `io::ErrorKind`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2372,"byte_end":2441,"line_start":70,"line_end":70,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":605},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2449,"byte_end":2462,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"0","qualname":"::ErrorKind::Io::0","value":"std::io::ErrorKind","parent":{"krate":0,"index":603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":596},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2031,"byte_end":2040,"line_start":55,"line_end":55,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::ErrorKind","value":"enum ErrorKind { NoDevice, InvalidInput, Unknown, Io(io::ErrorKind), }","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603}],"decl_id":null,"docs":" Categories of errors that can occur when interacting with serial ports","sig":null,"attributes":[{"value":"/ Categories of errors that can occur when interacting with serial ports","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":1790,"byte_end":1864,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":1865,"byte_end":1868,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This list is intended to grow over time and it is not recommended to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":1869,"byte_end":1941,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"/ exhaustively match against it.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":1942,"byte_end":1976,"line_start":53,"line_end":53,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2548,"byte_end":2553,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"Error { kind, description }","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620}],"decl_id":null,"docs":" An error type for serial port operations\n","sig":null,"attributes":[{"value":"/ An error type for serial port operations","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2468,"byte_end":2512,"line_start":74,"line_end":74,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":619},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2598,"byte_end":2602,"line_start":78,"line_end":78,"column_start":9,"column_end":13},"name":"kind","qualname":"::Error::kind","value":"ErrorKind","parent":{"krate":0,"index":618},"children":[],"decl_id":null,"docs":" The kind of error this is\n","sig":null,"attributes":[{"value":"/ The kind of error this is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2560,"byte_end":2589,"line_start":77,"line_end":77,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":620},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2681,"byte_end":2692,"line_start":80,"line_end":80,"column_start":9,"column_end":20},"name":"description","qualname":"::Error::description","value":"std::string::String","parent":{"krate":0,"index":618},"children":[],"decl_id":null,"docs":" A description of the error suitable for end-users\n","sig":null,"attributes":[{"value":"/ A description of the error suitable for end-users","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2619,"byte_end":2672,"line_start":79,"line_end":79,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2762,"byte_end":2765,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"fn new<T>(ErrorKind, T) -> Self where T: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new error\n","sig":null,"attributes":[{"value":"/ Instantiates a new error","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2722,"byte_end":2750,"line_start":84,"line_end":84,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2995,"byte_end":2999,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ErrorKind` for this error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `ErrorKind` for this error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2926,"byte_end":2983,"line_start":92,"line_end":92,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":3086,"byte_end":3089,"line_start":99,"line_end":99,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> std::result::Result<(), fmt::Error>","parent":{"krate":2,"index":10023},"children":[],"decl_id":{"krate":2,"index":10024},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":3247,"byte_end":3258,"line_start":105,"line_end":105,"column_start":8,"column_end":19},"name":"description","qualname":"<Error as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2565},"children":[],"decl_id":{"krate":1,"index":2569},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":3351,"byte_end":3355,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(io::Error) -> Error","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":3513,"byte_end":3517,"line_start":117,"line_end":117,"column_start":8,"column_end":12},"name":"from","qualname":"<io::Error as std::convert::From>::from","value":"fn from(Error) -> io::Error","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":626},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4087,"byte_end":4091,"line_start":134,"line_end":134,"column_start":5,"column_end":9},"name":"Five","qualname":"::DataBits::Five","value":"DataBits::Five","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" 5 bits per character\n","sig":null,"attributes":[{"value":"/ 5 bits per character","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4058,"byte_end":4082,"line_start":133,"line_end":133,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":628},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4127,"byte_end":4130,"line_start":137,"line_end":137,"column_start":5,"column_end":8},"name":"Six","qualname":"::DataBits::Six","value":"DataBits::Six","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" 6 bits per character\n","sig":null,"attributes":[{"value":"/ 6 bits per character","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4098,"byte_end":4122,"line_start":136,"line_end":136,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":630},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4166,"byte_end":4171,"line_start":140,"line_end":140,"column_start":5,"column_end":10},"name":"Seven","qualname":"::DataBits::Seven","value":"DataBits::Seven","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" 7 bits per character\n","sig":null,"attributes":[{"value":"/ 7 bits per character","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4137,"byte_end":4161,"line_start":139,"line_end":139,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":632},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4207,"byte_end":4212,"line_start":143,"line_end":143,"column_start":5,"column_end":10},"name":"Eight","qualname":"::DataBits::Eight","value":"DataBits::Eight","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" 8 bits per character\n","sig":null,"attributes":[{"value":"/ 8 bits per character","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4178,"byte_end":4202,"line_start":142,"line_end":142,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":625},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4043,"byte_end":4051,"line_start":132,"line_end":132,"column_start":10,"column_end":18},"name":"DataBits","qualname":"::DataBits","value":"enum DataBits { Five, Six, Seven, Eight, }","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632}],"decl_id":null,"docs":" Number of bits per character\n","sig":null,"attributes":[{"value":"/ Number of bits per character","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":3879,"byte_end":3911,"line_start":129,"line_end":129,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":646},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4801,"byte_end":4805,"line_start":159,"line_end":159,"column_start":5,"column_end":9},"name":"None","qualname":"::Parity::None","value":"Parity::None","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" No parity bit.\n","sig":null,"attributes":[{"value":"/ No parity bit.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4778,"byte_end":4796,"line_start":158,"line_end":158,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":648},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4858,"byte_end":4861,"line_start":162,"line_end":162,"column_start":5,"column_end":8},"name":"Odd","qualname":"::Parity::Odd","value":"Parity::Odd","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" Parity bit sets odd number of 1 bits.\n","sig":null,"attributes":[{"value":"/ Parity bit sets odd number of 1 bits.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4812,"byte_end":4853,"line_start":161,"line_end":161,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":650},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4915,"byte_end":4919,"line_start":165,"line_end":165,"column_start":5,"column_end":9},"name":"Even","qualname":"::Parity::Even","value":"Parity::Even","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" Parity bit sets even number of 1 bits.\n","sig":null,"attributes":[{"value":"/ Parity bit sets even number of 1 bits.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4868,"byte_end":4910,"line_start":164,"line_end":164,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":645},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4765,"byte_end":4771,"line_start":157,"line_end":157,"column_start":10,"column_end":16},"name":"Parity","qualname":"::Parity","value":"enum Parity { None, Odd, Even, }","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650}],"decl_id":null,"docs":" Parity checking modes","sig":null,"attributes":[{"value":"/ Parity checking modes","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4217,"byte_end":4242,"line_start":146,"line_end":146,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4243,"byte_end":4246,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ When parity checking is enabled (`Odd` or `Even`) an extra bit is transmitted with","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4247,"byte_end":4333,"line_start":148,"line_end":148,"column_start":1,"column_end":87}},{"value":"/ each character. The value of the parity bit is arranged so that the number of 1 bits in the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4334,"byte_end":4429,"line_start":149,"line_end":149,"column_start":1,"column_end":96}},{"value":"/ character (including the parity bit) is an even number (`Even`) or an odd number","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4430,"byte_end":4514,"line_start":150,"line_end":150,"column_start":1,"column_end":85}},{"value":"/ (`Odd`).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4515,"byte_end":4527,"line_start":151,"line_end":151,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4528,"byte_end":4531,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Parity checking is disabled by setting `None`, in which case parity bits are not","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4532,"byte_end":4616,"line_start":153,"line_end":153,"column_start":1,"column_end":85}},{"value":"/ transmitted.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4617,"byte_end":4633,"line_start":154,"line_end":154,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":664},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5173,"byte_end":5176,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"One","qualname":"::StopBits::One","value":"StopBits::One","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" One stop bit.\n","sig":null,"attributes":[{"value":"/ One stop bit.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5151,"byte_end":5168,"line_start":174,"line_end":174,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":666},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5206,"byte_end":5209,"line_start":178,"line_end":178,"column_start":5,"column_end":8},"name":"Two","qualname":"::StopBits::Two","value":"StopBits::Two","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Two stop bits.\n","sig":null,"attributes":[{"value":"/ Two stop bits.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5183,"byte_end":5201,"line_start":177,"line_end":177,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":663},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5136,"byte_end":5144,"line_start":173,"line_end":173,"column_start":10,"column_end":18},"name":"StopBits","qualname":"::StopBits","value":"enum StopBits { One, Two, }","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":666}],"decl_id":null,"docs":" Number of stop bits","sig":null,"attributes":[{"value":"/ Number of stop bits","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4924,"byte_end":4947,"line_start":168,"line_end":168,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4948,"byte_end":4951,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ Stop bits are transmitted after every character.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":4952,"byte_end":5004,"line_start":170,"line_end":170,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":680},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5411,"byte_end":5415,"line_start":186,"line_end":186,"column_start":5,"column_end":9},"name":"None","qualname":"::FlowControl::None","value":"FlowControl::None","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":" No flow control.\n","sig":null,"attributes":[{"value":"/ No flow control.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5386,"byte_end":5406,"line_start":185,"line_end":185,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":682},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5465,"byte_end":5473,"line_start":189,"line_end":189,"column_start":5,"column_end":13},"name":"Software","qualname":"::FlowControl::Software","value":"FlowControl::Software","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":" Flow control using XON/XOFF bytes.\n","sig":null,"attributes":[{"value":"/ Flow control using XON/XOFF bytes.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5422,"byte_end":5460,"line_start":188,"line_end":188,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":684},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5524,"byte_end":5532,"line_start":192,"line_end":192,"column_start":5,"column_end":13},"name":"Hardware","qualname":"::FlowControl::Hardware","value":"FlowControl::Hardware","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":" Flow control using RTS/CTS signals.\n","sig":null,"attributes":[{"value":"/ Flow control using RTS/CTS signals.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5480,"byte_end":5519,"line_start":191,"line_end":191,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":679},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5368,"byte_end":5379,"line_start":184,"line_end":184,"column_start":10,"column_end":21},"name":"FlowControl","qualname":"::FlowControl","value":"enum FlowControl { None, Software, Hardware, }","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":684}],"decl_id":null,"docs":" Flow control modes\n","sig":null,"attributes":[{"value":"/ Flow control modes","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5214,"byte_end":5236,"line_start":181,"line_end":181,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":698},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5864,"byte_end":5869,"line_start":202,"line_end":202,"column_start":5,"column_end":10},"name":"Input","qualname":"::ClearBuffer::Input","value":"ClearBuffer::Input","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" Specify to clear data received but not read\n","sig":null,"attributes":[{"value":"/ Specify to clear data received but not read","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5812,"byte_end":5859,"line_start":201,"line_end":201,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":700},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5937,"byte_end":5943,"line_start":204,"line_end":204,"column_start":5,"column_end":11},"name":"Output","qualname":"::ClearBuffer::Output","value":"ClearBuffer::Output","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" Specify to clear data written but not yet transmitted\n","sig":null,"attributes":[{"value":"/ Specify to clear data written but not yet transmitted","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5875,"byte_end":5932,"line_start":203,"line_end":203,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":702},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":6022,"byte_end":6025,"line_start":206,"line_end":206,"column_start":5,"column_end":8},"name":"All","qualname":"::ClearBuffer::All","value":"ClearBuffer::All","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":" Specify to clear both data received and data not yet transmitted\n","sig":null,"attributes":[{"value":"/ Specify to clear both data received and data not yet transmitted","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5949,"byte_end":6017,"line_start":205,"line_end":205,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":697},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5794,"byte_end":5805,"line_start":200,"line_end":200,"column_start":10,"column_end":21},"name":"ClearBuffer","qualname":"::ClearBuffer","value":"enum ClearBuffer { Input, Output, All, }","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702}],"decl_id":null,"docs":" Specifies which buffer or buffers to purge when calling [`clear`]","sig":null,"attributes":[{"value":"/ Specifies which buffer or buffers to purge when calling [`clear`]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5537,"byte_end":5606,"line_start":195,"line_end":195,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5607,"byte_end":5610,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ [`clear`]: trait.SerialPort.html#tymethod.clear","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":5611,"byte_end":5662,"line_start":197,"line_end":197,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":715},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":6129,"byte_end":6146,"line_start":211,"line_end":211,"column_start":12,"column_end":29},"name":"SerialPortBuilder","qualname":"::SerialPortBuilder","value":"SerialPortBuilder {  }","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"decl_id":null,"docs":" A struct containing all serial port settings\n","sig":null,"attributes":[{"value":"/ A struct containing all serial port settings","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":6030,"byte_end":6078,"line_start":209,"line_end":209,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":6816,"byte_end":6820,"line_start":231,"line_end":231,"column_start":12,"column_end":16},"name":"path","qualname":"<SerialPortBuilder>::path","value":"fn path<'a,\nimpl Into<std::borrow::Cow<'a, str>>>(Self,\nimpl Into<std::borrow::Cow<'a, str>>) -> Self where\nimpl Into<std::borrow::Cow<'a, str>>: Into<std::borrow::Cow>","parent":null,"children":[],"decl_id":null,"docs":" Set the path to the serial port\n","sig":null,"attributes":[{"value":"/ Set the path to the serial port","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":6753,"byte_end":6788,"line_start":229,"line_end":229,"column_start":5,"column_end":40}},{"value":"must_use","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":6793,"byte_end":6804,"line_start":230,"line_end":230,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7037,"byte_end":7046,"line_start":238,"line_end":238,"column_start":12,"column_end":21},"name":"baud_rate","qualname":"<SerialPortBuilder>::baud_rate","value":"fn baud_rate(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the baud rate in symbols-per-second\n","sig":null,"attributes":[{"value":"/ Set the baud rate in symbols-per-second","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":6966,"byte_end":7009,"line_start":236,"line_end":236,"column_start":5,"column_end":48}},{"value":"must_use","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7014,"byte_end":7025,"line_start":237,"line_end":237,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7244,"byte_end":7253,"line_start":245,"line_end":245,"column_start":12,"column_end":21},"name":"data_bits","qualname":"<SerialPortBuilder>::data_bits","value":"fn data_bits(Self, DataBits) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the number of bits used to represent a character sent on the line\n","sig":null,"attributes":[{"value":"/ Set the number of bits used to represent a character sent on the line","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7143,"byte_end":7216,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"must_use","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7221,"byte_end":7232,"line_start":244,"line_end":244,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7450,"byte_end":7462,"line_start":252,"line_end":252,"column_start":12,"column_end":24},"name":"flow_control","qualname":"<SerialPortBuilder>::flow_control","value":"fn flow_control(Self, FlowControl) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the type of signalling to use for controlling data transfer\n","sig":null,"attributes":[{"value":"/ Set the type of signalling to use for controlling data transfer","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7355,"byte_end":7422,"line_start":250,"line_end":250,"column_start":5,"column_end":72}},{"value":"must_use","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7427,"byte_end":7438,"line_start":251,"line_end":251,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7656,"byte_end":7662,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"parity","qualname":"<SerialPortBuilder>::parity","value":"fn parity(Self, Parity) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the type of parity to use for error checking\n","sig":null,"attributes":[{"value":"/ Set the type of parity to use for error checking","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7576,"byte_end":7628,"line_start":257,"line_end":257,"column_start":5,"column_end":57}},{"value":"must_use","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7633,"byte_end":7644,"line_start":258,"line_end":258,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7847,"byte_end":7856,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"stop_bits","qualname":"<SerialPortBuilder>::stop_bits","value":"fn stop_bits(Self, StopBits) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the number of bits to use to signal the end of a character\n","sig":null,"attributes":[{"value":"/ Set the number of bits to use to signal the end of a character","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7753,"byte_end":7819,"line_start":264,"line_end":264,"column_start":5,"column_end":71}},{"value":"must_use","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7824,"byte_end":7835,"line_start":265,"line_end":265,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":8054,"byte_end":8061,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"timeout","qualname":"<SerialPortBuilder>::timeout","value":"fn timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the amount of time to wait to receive data before timing out\n","sig":null,"attributes":[{"value":"/ Set the amount of time to wait to receive data before timing out","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":7958,"byte_end":8026,"line_start":271,"line_end":271,"column_start":5,"column_end":73}},{"value":"must_use","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":8031,"byte_end":8042,"line_start":272,"line_end":272,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":8244,"byte_end":8248,"line_start":279,"line_end":279,"column_start":12,"column_end":16},"name":"open","qualname":"<SerialPortBuilder>::open","value":"fn open(Self) -> Result<Box<dyn SerialPort>>","parent":null,"children":[],"decl_id":null,"docs":" Open a cross-platform interface to the port with the specified settings\n","sig":null,"attributes":[{"value":"/ Open a cross-platform interface to the port with the specified settings","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":8157,"byte_end":8232,"line_start":278,"line_end":278,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":8789,"byte_end":8800,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"open_native","qualname":"<SerialPortBuilder>::open_native","value":"fn open_native(Self) -> Result<TTYPort>","parent":null,"children":[],"decl_id":null,"docs":" Open a platform-specific interface to the port with the specified settings\n","sig":null,"attributes":[{"value":"/ Open a platform-specific interface to the port with the specified settings","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":8682,"byte_end":8760,"line_start":293,"line_end":293,"column_start":5,"column_end":83}},{"value":"cfg(unix)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":8765,"byte_end":8777,"line_start":294,"line_end":294,"column_start":5,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":377},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9222,"byte_end":9232,"line_start":310,"line_end":310,"column_start":11,"column_end":21},"name":"SerialPort","qualname":"::SerialPort","value":"SerialPort: Send + io::Read + io::Write","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402}],"decl_id":null,"docs":" A trait for serial port devices","sig":null,"attributes":[{"value":"/ A trait for serial port devices","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9071,"byte_end":9106,"line_start":306,"line_end":306,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9107,"byte_end":9110,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ This trait is all that's necessary to implement a new serial port driver","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9111,"byte_end":9187,"line_start":308,"line_end":308,"column_start":1,"column_end":77}},{"value":"/ for a new platform.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9188,"byte_end":9211,"line_start":309,"line_end":309,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9499,"byte_end":9503,"line_start":317,"line_end":317,"column_start":8,"column_end":12},"name":"name","qualname":"::SerialPort::name","value":"fn name(&Self) -> Option<String>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Returns the name of this port if it exists.","sig":null,"attributes":[{"value":"/ Returns the name of this port if it exists.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9298,"byte_end":9345,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9350,"byte_end":9353,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This name may not be the canonical device name and instead be shorthand.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9358,"byte_end":9434,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ Additionally it may not exist for virtual ports.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9439,"byte_end":9491,"line_start":316,"line_end":316,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9793,"byte_end":9802,"line_start":324,"line_end":324,"column_start":8,"column_end":17},"name":"baud_rate","qualname":"::SerialPort::baud_rate","value":"fn baud_rate(&Self) -> Result<u32>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Returns the current baud rate.","sig":null,"attributes":[{"value":"/ Returns the current baud rate.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9535,"byte_end":9569,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9574,"byte_end":9577,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This may return a value different from the last specified baud rate depending on the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9582,"byte_end":9670,"line_start":321,"line_end":321,"column_start":5,"column_end":93}},{"value":"/ platform as some will return the actual device baud rate rather than the last specified","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9675,"byte_end":9766,"line_start":322,"line_end":322,"column_start":5,"column_end":96}},{"value":"/ baud rate.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9771,"byte_end":9785,"line_start":323,"line_end":323,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10191,"byte_end":10200,"line_start":332,"line_end":332,"column_start":8,"column_end":17},"name":"data_bits","qualname":"::SerialPort::data_bits","value":"fn data_bits(&Self) -> Result<DataBits>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Returns the character size.","sig":null,"attributes":[{"value":"/ Returns the character size.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9831,"byte_end":9862,"line_start":326,"line_end":326,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9867,"byte_end":9870,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This function returns `None` if the character size could not be determined. This may occur","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9875,"byte_end":9969,"line_start":328,"line_end":328,"column_start":5,"column_end":99}},{"value":"/ if the hardware is in an uninitialized state or is using a non-standard character size.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9974,"byte_end":10065,"line_start":329,"line_end":329,"column_start":5,"column_end":96}},{"value":"/ Setting a baud rate with `set_char_size()` should initialize the character size to a","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10070,"byte_end":10158,"line_start":330,"line_end":330,"column_start":5,"column_end":93}},{"value":"/ supported value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10163,"byte_end":10183,"line_start":331,"line_end":331,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10617,"byte_end":10629,"line_start":340,"line_end":340,"column_start":8,"column_end":20},"name":"flow_control","qualname":"::SerialPort::flow_control","value":"fn flow_control(&Self) -> Result<FlowControl>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Returns the flow control mode.","sig":null,"attributes":[{"value":"/ Returns the flow control mode.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10234,"byte_end":10268,"line_start":334,"line_end":334,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10273,"byte_end":10276,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This function returns `None` if the flow control mode could not be determined. This may","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10281,"byte_end":10372,"line_start":336,"line_end":336,"column_start":5,"column_end":96}},{"value":"/ occur if the hardware is in an uninitialized state or is using an unsupported flow control","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10377,"byte_end":10471,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ mode. Setting a flow control mode with `set_flow_control()` should initialize the flow","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10476,"byte_end":10566,"line_start":338,"line_end":338,"column_start":5,"column_end":95}},{"value":"/ control mode to a supported value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10571,"byte_end":10609,"line_start":339,"line_end":339,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11014,"byte_end":11020,"line_start":347,"line_end":347,"column_start":8,"column_end":14},"name":"parity","qualname":"::SerialPort::parity","value":"fn parity(&Self) -> Result<Parity>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Returns the parity-checking mode.","sig":null,"attributes":[{"value":"/ Returns the parity-checking mode.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10666,"byte_end":10703,"line_start":342,"line_end":342,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10708,"byte_end":10711,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This function returns `None` if the parity mode could not be determined. This may occur if","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10716,"byte_end":10810,"line_start":344,"line_end":344,"column_start":5,"column_end":99}},{"value":"/ the hardware is in an uninitialized state or is using a non-standard parity mode. Setting","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10815,"byte_end":10908,"line_start":345,"line_end":345,"column_start":5,"column_end":98}},{"value":"/ a parity mode with `set_parity()` should initialize the parity mode to a supported value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":10913,"byte_end":11006,"line_start":346,"line_end":346,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11437,"byte_end":11446,"line_start":355,"line_end":355,"column_start":8,"column_end":17},"name":"stop_bits","qualname":"::SerialPort::stop_bits","value":"fn stop_bits(&Self) -> Result<StopBits>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Returns the number of stop bits.","sig":null,"attributes":[{"value":"/ Returns the number of stop bits.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11052,"byte_end":11088,"line_start":349,"line_end":349,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11093,"byte_end":11096,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ This function returns `None` if the number of stop bits could not be determined. This may","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11101,"byte_end":11194,"line_start":351,"line_end":351,"column_start":5,"column_end":98}},{"value":"/ occur if the hardware is in an uninitialized state or is using an unsupported stop bit","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11199,"byte_end":11289,"line_start":352,"line_end":352,"column_start":5,"column_end":95}},{"value":"/ configuration. Setting the number of stop bits with `set_stop-bits()` should initialize the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11294,"byte_end":11389,"line_start":353,"line_end":353,"column_start":5,"column_end":100}},{"value":"/ stop bits to a supported value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11394,"byte_end":11429,"line_start":354,"line_end":354,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11520,"byte_end":11527,"line_start":358,"line_end":358,"column_start":8,"column_end":15},"name":"timeout","qualname":"::SerialPort::timeout","value":"fn timeout(&Self) -> Duration","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Returns the current timeout.\n","sig":null,"attributes":[{"value":"/ Returns the current timeout.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11480,"byte_end":11512,"line_start":357,"line_end":357,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11894,"byte_end":11907,"line_start":369,"line_end":369,"column_start":8,"column_end":21},"name":"set_baud_rate","qualname":"::SerialPort::set_baud_rate","value":"fn set_baud_rate(&mut Self, u32) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Sets the baud rate.","sig":null,"attributes":[{"value":"/ Sets the baud rate.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11583,"byte_end":11606,"line_start":362,"line_end":362,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11611,"byte_end":11614,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11619,"byte_end":11632,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11637,"byte_end":11640,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ If the implementation does not support the requested baud rate, this function may return an","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11645,"byte_end":11740,"line_start":366,"line_end":366,"column_start":5,"column_end":100}},{"value":"/ `InvalidInput` error. Even if the baud rate is accepted by `set_baud_rate()`, it may not be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11745,"byte_end":11840,"line_start":367,"line_end":367,"column_start":5,"column_end":100}},{"value":"/ supported by the underlying hardware.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11845,"byte_end":11886,"line_start":368,"line_end":368,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11991,"byte_end":12004,"line_start":372,"line_end":372,"column_start":8,"column_end":21},"name":"set_data_bits","qualname":"::SerialPort::set_data_bits","value":"fn set_data_bits(&mut Self, DataBits) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Sets the character size.\n","sig":null,"attributes":[{"value":"/ Sets the character size.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":11955,"byte_end":11983,"line_start":371,"line_end":371,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12096,"byte_end":12112,"line_start":375,"line_end":375,"column_start":8,"column_end":24},"name":"set_flow_control","qualname":"::SerialPort::set_flow_control","value":"fn set_flow_control(&mut Self, FlowControl) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Sets the flow control mode.\n","sig":null,"attributes":[{"value":"/ Sets the flow control mode.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12057,"byte_end":12088,"line_start":374,"line_end":374,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12213,"byte_end":12223,"line_start":378,"line_end":378,"column_start":8,"column_end":18},"name":"set_parity","qualname":"::SerialPort::set_parity","value":"fn set_parity(&mut Self, Parity) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Sets the parity-checking mode.\n","sig":null,"attributes":[{"value":"/ Sets the parity-checking mode.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12171,"byte_end":12205,"line_start":377,"line_end":377,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12312,"byte_end":12325,"line_start":381,"line_end":381,"column_start":8,"column_end":21},"name":"set_stop_bits","qualname":"::SerialPort::set_stop_bits","value":"fn set_stop_bits(&mut Self, StopBits) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Sets the number of stop bits.\n","sig":null,"attributes":[{"value":"/ Sets the number of stop bits.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12271,"byte_end":12304,"line_start":380,"line_end":380,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12433,"byte_end":12444,"line_start":384,"line_end":384,"column_start":8,"column_end":19},"name":"set_timeout","qualname":"::SerialPort::set_timeout","value":"fn set_timeout(&mut Self, Duration) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Sets the timeout for future I/O operations.\n","sig":null,"attributes":[{"value":"/ Sets the timeout for future I/O operations.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12378,"byte_end":12425,"line_start":383,"line_end":383,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13008,"byte_end":13029,"line_start":399,"line_end":399,"column_start":8,"column_end":29},"name":"write_request_to_send","qualname":"::SerialPort::write_request_to_send","value":"fn write_request_to_send(&mut Self, bool) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Sets the state of the RTS (Request To Send) control signal.","sig":null,"attributes":[{"value":"/ Sets the state of the RTS (Request To Send) control signal.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12554,"byte_end":12617,"line_start":388,"line_end":388,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12622,"byte_end":12625,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Setting a value of `true` asserts the RTS control signal. `false` clears the signal.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12630,"byte_end":12718,"line_start":390,"line_end":390,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12723,"byte_end":12726,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12731,"byte_end":12744,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12749,"byte_end":12752,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the RTS control signal could not be set to the desired","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12757,"byte_end":12849,"line_start":394,"line_end":394,"column_start":5,"column_end":97}},{"value":"/ state on the underlying hardware:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12854,"byte_end":12891,"line_start":395,"line_end":395,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12896,"byte_end":12899,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12904,"byte_end":12952,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":12957,"byte_end":13000,"line_start":398,"line_end":398,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13506,"byte_end":13531,"line_start":412,"line_end":412,"column_start":8,"column_end":33},"name":"write_data_terminal_ready","qualname":"::SerialPort::write_data_terminal_ready","value":"fn write_data_terminal_ready(&mut Self, bool) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Writes to the Data Terminal Ready pin","sig":null,"attributes":[{"value":"/ Writes to the Data Terminal Ready pin","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13074,"byte_end":13115,"line_start":401,"line_end":401,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13120,"byte_end":13123,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ Setting a value of `true` asserts the DTR control signal. `false` clears the signal.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13128,"byte_end":13216,"line_start":403,"line_end":403,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13221,"byte_end":13224,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13229,"byte_end":13242,"line_start":405,"line_end":405,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13247,"byte_end":13250,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the DTR control signal could not be set to the desired","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13255,"byte_end":13347,"line_start":407,"line_end":407,"column_start":5,"column_end":97}},{"value":"/ state on the underlying hardware:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13352,"byte_end":13389,"line_start":408,"line_end":408,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13394,"byte_end":13397,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13402,"byte_end":13450,"line_start":410,"line_end":410,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13455,"byte_end":13498,"line_start":411,"line_end":411,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14076,"byte_end":14094,"line_start":427,"line_end":427,"column_start":8,"column_end":26},"name":"read_clear_to_send","qualname":"::SerialPort::read_clear_to_send","value":"fn read_clear_to_send(&mut Self) -> Result<bool>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Reads the state of the CTS (Clear To Send) control signal.","sig":null,"attributes":[{"value":"/ Reads the state of the CTS (Clear To Send) control signal.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13622,"byte_end":13684,"line_start":416,"line_end":416,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13689,"byte_end":13692,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ This function returns a boolean that indicates whether the CTS control signal is asserted.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13697,"byte_end":13791,"line_start":418,"line_end":418,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13796,"byte_end":13799,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13804,"byte_end":13817,"line_start":420,"line_end":420,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13822,"byte_end":13825,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the state of the CTS control signal could not be read","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13830,"byte_end":13921,"line_start":422,"line_end":422,"column_start":5,"column_end":96}},{"value":"/ from the underlying hardware:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13926,"byte_end":13959,"line_start":423,"line_end":423,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13964,"byte_end":13967,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":13972,"byte_end":14020,"line_start":425,"line_end":425,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14025,"byte_end":14068,"line_start":426,"line_end":426,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14577,"byte_end":14596,"line_start":440,"line_end":440,"column_start":8,"column_end":27},"name":"read_data_set_ready","qualname":"::SerialPort::read_data_set_ready","value":"fn read_data_set_ready(&mut Self) -> Result<bool>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Reads the state of the Data Set Ready control signal.","sig":null,"attributes":[{"value":"/ Reads the state of the Data Set Ready control signal.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14128,"byte_end":14185,"line_start":429,"line_end":429,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14190,"byte_end":14193,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ This function returns a boolean that indicates whether the DSR control signal is asserted.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14198,"byte_end":14292,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14297,"byte_end":14300,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14305,"byte_end":14318,"line_start":433,"line_end":433,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14323,"byte_end":14326,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the state of the DSR control signal could not be read","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14331,"byte_end":14422,"line_start":435,"line_end":435,"column_start":5,"column_end":96}},{"value":"/ from the underlying hardware:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14427,"byte_end":14460,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14465,"byte_end":14468,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14473,"byte_end":14521,"line_start":438,"line_end":438,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14526,"byte_end":14569,"line_start":439,"line_end":439,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15077,"byte_end":15096,"line_start":453,"line_end":453,"column_start":8,"column_end":27},"name":"read_ring_indicator","qualname":"::SerialPort::read_ring_indicator","value":"fn read_ring_indicator(&mut Self) -> Result<bool>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Reads the state of the Ring Indicator control signal.","sig":null,"attributes":[{"value":"/ Reads the state of the Ring Indicator control signal.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14630,"byte_end":14687,"line_start":442,"line_end":442,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14692,"byte_end":14695,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This function returns a boolean that indicates whether the RI control signal is asserted.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14700,"byte_end":14793,"line_start":444,"line_end":444,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14798,"byte_end":14801,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14806,"byte_end":14819,"line_start":446,"line_end":446,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14824,"byte_end":14827,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the state of the RI control signal could not be read from","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14832,"byte_end":14927,"line_start":448,"line_end":448,"column_start":5,"column_end":100}},{"value":"/ the underlying hardware:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14932,"byte_end":14960,"line_start":449,"line_end":449,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14965,"byte_end":14968,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":14973,"byte_end":15021,"line_start":451,"line_end":451,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15026,"byte_end":15069,"line_start":452,"line_end":452,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15577,"byte_end":15596,"line_start":466,"line_end":466,"column_start":8,"column_end":27},"name":"read_carrier_detect","qualname":"::SerialPort::read_carrier_detect","value":"fn read_carrier_detect(&mut Self) -> Result<bool>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Reads the state of the Carrier Detect control signal.","sig":null,"attributes":[{"value":"/ Reads the state of the Carrier Detect control signal.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15130,"byte_end":15187,"line_start":455,"line_end":455,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15192,"byte_end":15195,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ This function returns a boolean that indicates whether the CD control signal is asserted.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15200,"byte_end":15293,"line_start":457,"line_end":457,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15298,"byte_end":15301,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15306,"byte_end":15319,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15324,"byte_end":15327,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the state of the CD control signal could not be read from","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15332,"byte_end":15427,"line_start":461,"line_end":461,"column_start":5,"column_end":100}},{"value":"/ the underlying hardware:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15432,"byte_end":15460,"line_start":462,"line_end":462,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15465,"byte_end":15468,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15473,"byte_end":15521,"line_start":464,"line_end":464,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15526,"byte_end":15569,"line_start":465,"line_end":465,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15907,"byte_end":15920,"line_start":476,"line_end":476,"column_start":8,"column_end":21},"name":"bytes_to_read","qualname":"::SerialPort::bytes_to_read","value":"fn bytes_to_read(&Self) -> Result<u32>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Gets the number of bytes available to be read from the input buffer.","sig":null,"attributes":[{"value":"/ Gets the number of bytes available to be read from the input buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15630,"byte_end":15702,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15707,"byte_end":15710,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15715,"byte_end":15727,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15732,"byte_end":15735,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function may return the following errors:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15740,"byte_end":15790,"line_start":472,"line_end":472,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15795,"byte_end":15798,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15803,"byte_end":15851,"line_start":474,"line_end":474,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15856,"byte_end":15899,"line_start":475,"line_end":475,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16234,"byte_end":16248,"line_start":486,"line_end":486,"column_start":8,"column_end":22},"name":"bytes_to_write","qualname":"::SerialPort::bytes_to_write","value":"fn bytes_to_write(&Self) -> Result<u32>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Get the number of bytes written to the output buffer, awaiting transmission.","sig":null,"attributes":[{"value":"/ Get the number of bytes written to the output buffer, awaiting transmission.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":15949,"byte_end":16029,"line_start":478,"line_end":478,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16034,"byte_end":16037,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16042,"byte_end":16054,"line_start":480,"line_end":480,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16059,"byte_end":16062,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ This function may return the following errors:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16067,"byte_end":16117,"line_start":482,"line_end":482,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16122,"byte_end":16125,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16130,"byte_end":16178,"line_start":484,"line_end":484,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16183,"byte_end":16226,"line_start":485,"line_end":485,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16564,"byte_end":16569,"line_start":496,"line_end":496,"column_start":8,"column_end":13},"name":"clear","qualname":"::SerialPort::clear","value":"fn clear(&Self, ClearBuffer) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Discards all bytes from the serial driver's input buffer and/or output buffer.","sig":null,"attributes":[{"value":"/ Discards all bytes from the serial driver's input buffer and/or output buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16277,"byte_end":16359,"line_start":488,"line_end":488,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16364,"byte_end":16367,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16372,"byte_end":16384,"line_start":490,"line_end":490,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16389,"byte_end":16392,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This function may return the following errors:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16397,"byte_end":16447,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16452,"byte_end":16455,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ * `NoDevice` if the device was disconnected.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16460,"byte_end":16508,"line_start":494,"line_end":494,"column_start":5,"column_end":53}},{"value":"/ * `Io` for any other type of I/O error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16513,"byte_end":16556,"line_start":495,"line_end":495,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17350,"byte_end":17359,"line_start":512,"line_end":512,"column_start":8,"column_end":17},"name":"try_clone","qualname":"::SerialPort::try_clone","value":"fn try_clone(&Self) -> Result<Box<dyn SerialPort>>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Attempts to clone the `SerialPort`. This allow you to write and read simultaneously from the\n same serial connection. Please note that if you want a real asynchronous serial port you\n should look at [mio-serial](https://crates.io/crates/mio-serial) or\n [tokio-serial](https://crates.io/crates/tokio-serial).","sig":null,"attributes":[{"value":"/ Attempts to clone the `SerialPort`. This allow you to write and read simultaneously from the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16648,"byte_end":16744,"line_start":500,"line_end":500,"column_start":5,"column_end":101}},{"value":"/ same serial connection. Please note that if you want a real asynchronous serial port you","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16749,"byte_end":16841,"line_start":501,"line_end":501,"column_start":5,"column_end":97}},{"value":"/ should look at [mio-serial](https://crates.io/crates/mio-serial) or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16846,"byte_end":16917,"line_start":502,"line_end":502,"column_start":5,"column_end":76}},{"value":"/ [tokio-serial](https://crates.io/crates/tokio-serial).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16922,"byte_end":16980,"line_start":503,"line_end":503,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16985,"byte_end":16988,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Also, you must be very carefull when changing the settings of a cloned `SerialPort` : since","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":16993,"byte_end":17088,"line_start":505,"line_end":505,"column_start":5,"column_end":100}},{"value":"/ the settings are cached on a per object basis, trying to modify them from two different","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17093,"byte_end":17184,"line_start":506,"line_end":506,"column_start":5,"column_end":96}},{"value":"/ objects can cause some nasty behavior.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17189,"byte_end":17231,"line_start":507,"line_end":507,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17236,"byte_end":17239,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17244,"byte_end":17256,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17261,"byte_end":17264,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if the serial port couldn't be cloned.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17269,"byte_end":17342,"line_start":511,"line_end":511,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17442,"byte_end":17451,"line_start":515,"line_end":515,"column_start":8,"column_end":17},"name":"set_break","qualname":"::SerialPort::set_break","value":"fn set_break(&Self) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Start transmitting a break\n","sig":null,"attributes":[{"value":"/ Start transmitting a break","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17404,"byte_end":17434,"line_start":514,"line_end":514,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17516,"byte_end":17527,"line_start":518,"line_end":518,"column_start":8,"column_end":19},"name":"clear_break","qualname":"::SerialPort::clear_break","value":"fn clear_break(&Self) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Stop transmitting a break\n","sig":null,"attributes":[{"value":"/ Stop transmitting a break","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17479,"byte_end":17508,"line_start":517,"line_end":517,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17604,"byte_end":17608,"line_start":522,"line_end":522,"column_start":8,"column_end":12},"name":"name","qualname":"<&'_ mut T as SerialPort>::name","value":"fn name(&Self) -> Option<String>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":378},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17674,"byte_end":17683,"line_start":526,"line_end":526,"column_start":8,"column_end":17},"name":"baud_rate","qualname":"<&'_ mut T as SerialPort>::baud_rate","value":"fn baud_rate(&Self) -> Result<u32>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":379},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17751,"byte_end":17760,"line_start":530,"line_end":530,"column_start":8,"column_end":17},"name":"data_bits","qualname":"<&'_ mut T as SerialPort>::data_bits","value":"fn data_bits(&Self) -> Result<DataBits>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":380},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17833,"byte_end":17845,"line_start":534,"line_end":534,"column_start":8,"column_end":20},"name":"flow_control","qualname":"<&'_ mut T as SerialPort>::flow_control","value":"fn flow_control(&Self) -> Result<FlowControl>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":381},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17924,"byte_end":17930,"line_start":538,"line_end":538,"column_start":8,"column_end":14},"name":"parity","qualname":"<&'_ mut T as SerialPort>::parity","value":"fn parity(&Self) -> Result<Parity>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":382},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":17998,"byte_end":18007,"line_start":542,"line_end":542,"column_start":8,"column_end":17},"name":"stop_bits","qualname":"<&'_ mut T as SerialPort>::stop_bits","value":"fn stop_bits(&Self) -> Result<StopBits>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":383},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":18080,"byte_end":18087,"line_start":546,"line_end":546,"column_start":8,"column_end":15},"name":"timeout","qualname":"<&'_ mut T as SerialPort>::timeout","value":"fn timeout(&Self) -> Duration","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":384},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":18150,"byte_end":18163,"line_start":550,"line_end":550,"column_start":8,"column_end":21},"name":"set_baud_rate","qualname":"<&'_ mut T as SerialPort>::set_baud_rate","value":"fn set_baud_rate(&mut Self, u32) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":385},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":18263,"byte_end":18276,"line_start":554,"line_end":554,"column_start":8,"column_end":21},"name":"set_data_bits","qualname":"<&'_ mut T as SerialPort>::set_data_bits","value":"fn set_data_bits(&mut Self, DataBits) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":386},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":18381,"byte_end":18397,"line_start":558,"line_end":558,"column_start":8,"column_end":24},"name":"set_flow_control","qualname":"<&'_ mut T as SerialPort>::set_flow_control","value":"fn set_flow_control(&mut Self, FlowControl) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":387},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":18514,"byte_end":18524,"line_start":562,"line_end":562,"column_start":8,"column_end":18},"name":"set_parity","qualname":"<&'_ mut T as SerialPort>::set_parity","value":"fn set_parity(&mut Self, Parity) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":388},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":18618,"byte_end":18631,"line_start":566,"line_end":566,"column_start":8,"column_end":21},"name":"set_stop_bits","qualname":"<&'_ mut T as SerialPort>::set_stop_bits","value":"fn set_stop_bits(&mut Self, StopBits) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":389},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":18736,"byte_end":18747,"line_start":570,"line_end":570,"column_start":8,"column_end":19},"name":"set_timeout","qualname":"<&'_ mut T as SerialPort>::set_timeout","value":"fn set_timeout(&mut Self, Duration) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":390},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":18846,"byte_end":18867,"line_start":574,"line_end":574,"column_start":8,"column_end":29},"name":"write_request_to_send","qualname":"<&'_ mut T as SerialPort>::write_request_to_send","value":"fn write_request_to_send(&mut Self, bool) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":391},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":18968,"byte_end":18993,"line_start":578,"line_end":578,"column_start":8,"column_end":33},"name":"write_data_terminal_ready","qualname":"<&'_ mut T as SerialPort>::write_data_terminal_ready","value":"fn write_data_terminal_ready(&mut Self, bool) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":392},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":19098,"byte_end":19116,"line_start":582,"line_end":582,"column_start":8,"column_end":26},"name":"read_clear_to_send","qualname":"<&'_ mut T as SerialPort>::read_clear_to_send","value":"fn read_clear_to_send(&mut Self) -> Result<bool>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":393},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":19198,"byte_end":19217,"line_start":586,"line_end":586,"column_start":8,"column_end":27},"name":"read_data_set_ready","qualname":"<&'_ mut T as SerialPort>::read_data_set_ready","value":"fn read_data_set_ready(&mut Self) -> Result<bool>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":19300,"byte_end":19319,"line_start":590,"line_end":590,"column_start":8,"column_end":27},"name":"read_ring_indicator","qualname":"<&'_ mut T as SerialPort>::read_ring_indicator","value":"fn read_ring_indicator(&mut Self) -> Result<bool>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":395},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":19402,"byte_end":19421,"line_start":594,"line_end":594,"column_start":8,"column_end":27},"name":"read_carrier_detect","qualname":"<&'_ mut T as SerialPort>::read_carrier_detect","value":"fn read_carrier_detect(&mut Self) -> Result<bool>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":19504,"byte_end":19517,"line_start":598,"line_end":598,"column_start":8,"column_end":21},"name":"bytes_to_read","qualname":"<&'_ mut T as SerialPort>::bytes_to_read","value":"fn bytes_to_read(&Self) -> Result<u32>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":397},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":19589,"byte_end":19603,"line_start":602,"line_end":602,"column_start":8,"column_end":22},"name":"bytes_to_write","qualname":"<&'_ mut T as SerialPort>::bytes_to_write","value":"fn bytes_to_write(&Self) -> Result<u32>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":19676,"byte_end":19681,"line_start":606,"line_end":606,"column_start":8,"column_end":13},"name":"clear","qualname":"<&'_ mut T as SerialPort>::clear","value":"fn clear(&Self, ClearBuffer) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":399},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":19789,"byte_end":19798,"line_start":610,"line_end":610,"column_start":8,"column_end":17},"name":"try_clone","qualname":"<&'_ mut T as SerialPort>::try_clone","value":"fn try_clone(&Self) -> Result<Box<dyn SerialPort>>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":19882,"byte_end":19891,"line_start":614,"line_end":614,"column_start":8,"column_end":17},"name":"set_break","qualname":"<&'_ mut T as SerialPort>::set_break","value":"fn set_break(&Self) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":401},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":19958,"byte_end":19969,"line_start":618,"line_end":618,"column_start":8,"column_end":19},"name":"clear_break","qualname":"<&'_ mut T as SerialPort>::clear_break","value":"fn clear_break(&Self) -> Result<()>","parent":{"krate":0,"index":377},"children":[],"decl_id":{"krate":0,"index":402},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":734},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20223,"byte_end":20234,"line_start":626,"line_end":626,"column_start":12,"column_end":23},"name":"UsbPortInfo","qualname":"::UsbPortInfo","value":"UsbPortInfo { vid, pid, serial_number, manufacturer, product }","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739}],"decl_id":null,"docs":" Contains all possible USB information about a `SerialPort`\n","sig":null,"attributes":[{"value":"/ Contains all possible USB information about a `SerialPort`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20033,"byte_end":20095,"line_start":623,"line_end":623,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":735},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20263,"byte_end":20266,"line_start":628,"line_end":628,"column_start":9,"column_end":12},"name":"vid","qualname":"::UsbPortInfo::vid","value":"u16","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Vendor ID\n","sig":null,"attributes":[{"value":"/ Vendor ID","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20241,"byte_end":20254,"line_start":627,"line_end":627,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":736},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20300,"byte_end":20303,"line_start":630,"line_end":630,"column_start":9,"column_end":12},"name":"pid","qualname":"::UsbPortInfo::pid","value":"u16","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Product ID\n","sig":null,"attributes":[{"value":"/ Product ID","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20277,"byte_end":20291,"line_start":629,"line_end":629,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":737},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20359,"byte_end":20372,"line_start":632,"line_end":632,"column_start":9,"column_end":22},"name":"serial_number","qualname":"::UsbPortInfo::serial_number","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Serial number (arbitrary string)\n","sig":null,"attributes":[{"value":"/ Serial number (arbitrary string)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20314,"byte_end":20350,"line_start":631,"line_end":631,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":738},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20438,"byte_end":20450,"line_start":634,"line_end":634,"column_start":9,"column_end":21},"name":"manufacturer","qualname":"::UsbPortInfo::manufacturer","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Manufacturer (arbitrary string)\n","sig":null,"attributes":[{"value":"/ Manufacturer (arbitrary string)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20394,"byte_end":20429,"line_start":633,"line_end":633,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":739},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20516,"byte_end":20523,"line_start":636,"line_end":636,"column_start":9,"column_end":16},"name":"product","qualname":"::UsbPortInfo::product","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":734},"children":[],"decl_id":null,"docs":" Product name (arbitrary string)\n","sig":null,"attributes":[{"value":"/ Product name (arbitrary string)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20472,"byte_end":20507,"line_start":635,"line_end":635,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":752},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20775,"byte_end":20782,"line_start":644,"line_end":644,"column_start":5,"column_end":12},"name":"UsbPort","qualname":"::SerialPortType::UsbPort","value":"SerialPortType::UsbPort(UsbPortInfo)","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":" The serial port is connected via USB\n","sig":null,"attributes":[{"value":"/ The serial port is connected via USB","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20730,"byte_end":20770,"line_start":643,"line_end":643,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":754},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20783,"byte_end":20794,"line_start":644,"line_end":644,"column_start":13,"column_end":24},"name":"0","qualname":"::SerialPortType::UsbPort::0","value":"UsbPortInfo","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":755},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20863,"byte_end":20870,"line_start":646,"line_end":646,"column_start":5,"column_end":12},"name":"PciPort","qualname":"::SerialPortType::PciPort","value":"SerialPortType::PciPort","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":" The serial port is connected via PCI (permanent port)\n","sig":null,"attributes":[{"value":"/ The serial port is connected via PCI (permanent port)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20801,"byte_end":20858,"line_start":645,"line_end":645,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":757},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20927,"byte_end":20940,"line_start":648,"line_end":648,"column_start":5,"column_end":18},"name":"BluetoothPort","qualname":"::SerialPortType::BluetoothPort","value":"SerialPortType::BluetoothPort","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":" The serial port is connected via Bluetooth\n","sig":null,"attributes":[{"value":"/ The serial port is connected via Bluetooth","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20876,"byte_end":20922,"line_start":647,"line_end":647,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":759},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21010,"byte_end":21017,"line_start":650,"line_end":650,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::SerialPortType::Unknown","value":"SerialPortType::Unknown","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":" It can't be determined how the serial port is connected\n","sig":null,"attributes":[{"value":"/ It can't be determined how the serial port is connected","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20946,"byte_end":21005,"line_start":649,"line_end":649,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":751},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20709,"byte_end":20723,"line_start":642,"line_end":642,"column_start":10,"column_end":24},"name":"SerialPortType","qualname":"::SerialPortType","value":"enum SerialPortType { UsbPort(UsbPortInfo), PciPort, BluetoothPort, Unknown, }","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759}],"decl_id":null,"docs":" The physical type of a `SerialPort`\n","sig":null,"attributes":[{"value":"/ The physical type of a `SerialPort`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":20544,"byte_end":20583,"line_start":639,"line_end":639,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21216,"byte_end":21230,"line_start":656,"line_end":656,"column_start":12,"column_end":26},"name":"SerialPortInfo","qualname":"::SerialPortInfo","value":"SerialPortInfo { port_name, port_type }","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"decl_id":null,"docs":" A device-independent implementation of serial port information\n","sig":null,"attributes":[{"value":"/ A device-independent implementation of serial port information","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21022,"byte_end":21088,"line_start":653,"line_end":653,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":773},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21283,"byte_end":21292,"line_start":658,"line_end":658,"column_start":9,"column_end":18},"name":"port_name","qualname":"::SerialPortInfo::port_name","value":"std::string::String","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":" The short name of the serial port\n","sig":null,"attributes":[{"value":"/ The short name of the serial port","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21237,"byte_end":21274,"line_start":657,"line_end":657,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":774},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21366,"byte_end":21375,"line_start":660,"line_end":660,"column_start":9,"column_end":18},"name":"port_type","qualname":"::SerialPortInfo::port_type","value":"SerialPortType","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":" The hardware device type that exposes this port\n","sig":null,"attributes":[{"value":"/ The hardware device type that exposes this port","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21306,"byte_end":21357,"line_start":659,"line_end":659,"column_start":5,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":430},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21828,"byte_end":21831,"line_start":673,"line_end":673,"column_start":8,"column_end":11},"name":"new","qualname":"::new","value":"fn new<'a,\nimpl Into<std::borrow::Cow<'a, str>>>(impl Into<std::borrow::Cow<'a, str>>,\nu32) -> SerialPortBuilder where\nimpl Into<std::borrow::Cow<'a, str>>: Into<std::borrow::Cow>","parent":null,"children":[],"decl_id":null,"docs":" Construct a builder of `SerialPort` objects","sig":null,"attributes":[{"value":"/ Construct a builder of `SerialPort` objects","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21396,"byte_end":21443,"line_start":663,"line_end":663,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21444,"byte_end":21447,"line_start":664,"line_end":664,"column_start":1,"column_end":4}},{"value":"/ `SerialPort` objects are built using the Builder pattern through the `new` function. The","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21448,"byte_end":21540,"line_start":665,"line_end":665,"column_start":1,"column_end":93}},{"value":"/ resultant `SerialPortBuilder` object can be copied, reconfigured, and saved making working with","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21541,"byte_end":21640,"line_start":666,"line_end":666,"column_start":1,"column_end":100}},{"value":"/ multiple serial ports a little easier.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21641,"byte_end":21683,"line_start":667,"line_end":667,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21684,"byte_end":21687,"line_start":668,"line_end":668,"column_start":1,"column_end":4}},{"value":"/ To open a new serial port:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21688,"byte_end":21718,"line_start":669,"line_end":669,"column_start":1,"column_end":31}},{"value":"/ ```no_run","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21719,"byte_end":21732,"line_start":670,"line_end":670,"column_start":1,"column_end":14}},{"value":"/ serialport::new(\"/dev/ttyUSB0\", 9600).open().expect(\"Failed to open port\");","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21733,"byte_end":21812,"line_start":671,"line_end":671,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":21813,"byte_end":21820,"line_start":672,"line_end":672,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":433},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":22367,"byte_end":22382,"line_start":689,"line_end":689,"column_start":8,"column_end":23},"name":"available_ports","qualname":"::available_ports","value":"fn available_ports() -> Result<Vec<SerialPortInfo>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a list of all serial ports on system","sig":null,"attributes":[{"value":"/ Returns a list of all serial ports on system","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":22195,"byte_end":22243,"line_start":685,"line_end":685,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":22244,"byte_end":22247,"line_start":686,"line_end":686,"column_start":1,"column_end":4}},{"value":"/ It is not guaranteed that these ports exist or are available even if they're","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":22248,"byte_end":22328,"line_start":687,"line_end":687,"column_start":1,"column_end":81}},{"value":"/ returned by this function.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":22329,"byte_end":22359,"line_start":688,"line_end":688,"column_start":1,"column_end":31}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/error.rs","byte_start":41694,"byte_end":41699,"line_start":18,"line_end":18,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60460,"byte_end":60467,"line_start":65,"line_end":65,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60540,"byte_end":60547,"line_start":71,"line_end":71,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60660,"byte_end":60667,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70782,"byte_end":70789,"line_start":347,"line_end":347,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70867,"byte_end":70874,"line_start":353,"line_end":353,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70956,"byte_end":70963,"line_start":359,"line_end":359,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":71809,"byte_end":71816,"line_start":381,"line_end":381,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":72602,"byte_end":72609,"line_start":399,"line_end":399,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":72930,"byte_end":72937,"line_start":409,"line_end":409,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":73432,"byte_end":73439,"line_start":424,"line_end":424,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2710,"byte_end":2715,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":3071,"byte_end":3076,"line_start":98,"line_end":98,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":3232,"byte_end":3237,"line_start":104,"line_end":104,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":3336,"byte_end":3341,"line_start":110,"line_end":110,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":3498,"byte_end":3503,"line_start":116,"line_end":116,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":6729,"byte_end":6746,"line_start":228,"line_end":228,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/error.rs","byte_start":41694,"byte_end":41699,"line_start":18,"line_end":18,"column_start":27,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60460,"byte_end":60467,"line_start":65,"line_end":65,"column_start":15,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":268},"to":{"krate":2,"index":3420}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60540,"byte_end":60547,"line_start":71,"line_end":71,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":60660,"byte_end":60667,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70782,"byte_end":70789,"line_start":347,"line_end":347,"column_start":15,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":578},"to":{"krate":2,"index":3420}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70867,"byte_end":70874,"line_start":353,"line_end":353,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":6753}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":70956,"byte_end":70963,"line_start":359,"line_end":359,"column_start":20,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":6757}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":71809,"byte_end":71816,"line_start":381,"line_end":381,"column_start":20,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":6755}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":72602,"byte_end":72609,"line_start":399,"line_end":399,"column_start":19,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":4527}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":72930,"byte_end":72937,"line_start":409,"line_end":409,"column_start":20,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":4584}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/posix/tty.rs","byte_start":73432,"byte_end":73439,"line_start":424,"line_end":424,"column_start":21,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":578},"to":{"krate":0,"index":377}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":2710,"byte_end":2715,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":3071,"byte_end":3076,"line_start":98,"line_end":98,"column_start":23,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":10023}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":3232,"byte_end":3237,"line_start":104,"line_end":104,"column_start":19,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":618},"to":{"krate":1,"index":2565}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":3336,"byte_end":3341,"line_start":110,"line_end":110,"column_start":26,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":618},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":3498,"byte_end":3503,"line_start":116,"line_end":116,"column_start":26,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":3955},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":6729,"byte_end":6746,"line_start":228,"line_end":228,"column_start":6,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9234,"byte_end":9238,"line_start":310,"line_end":310,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3177},"to":{"krate":0,"index":377}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9245,"byte_end":9249,"line_start":310,"line_end":310,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":4527},"to":{"krate":0,"index":377}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/serialport-4.2.0/src/lib.rs","byte_start":9256,"byte_end":9261,"line_start":310,"line_end":310,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":4584},"to":{"krate":0,"index":377}}]}