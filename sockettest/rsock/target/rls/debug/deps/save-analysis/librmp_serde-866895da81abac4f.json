{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0","program":"/home/pythomancer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rmp_serde","--edition=2018","/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=866895da81abac4f","-C","extra-filename=-866895da81abac4f","--out-dir","/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps","-L","dependency=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps","--extern","byteorder=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libbyteorder-19cac908f6232626.rmeta","--extern","rmp=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/librmp-85121f65a5cceeef.rmeta","--extern","serde=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libserde-b1406e0024249e5f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/pythomancer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/librmp_serde-866895da81abac4f.rmeta"},"prelude":{"crate_id":{"name":"rmp_serde","disambiguator":[16886531011881090241,0]},"crate_root":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src","external_crates":[{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17410308932696108380,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14414087034259949263,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13372101680896079740,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5118101865554607907,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8025854276978217217,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4385070015268585674,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9992538824178466914,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15270312766295648766,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[18385953104680678603,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9852578511365041000,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2269743475717416395,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17706006846336192414,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6383024135923770218,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[10215543262378548890,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[4195348899700366916,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[10100673089080813811,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[341892175500051738,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[141027009196343679,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[5788120405916140848,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","num":20,"id":{"name":"serde","disambiguator":[14247000446840783427,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","num":21,"id":{"name":"rmp","disambiguator":[1791596239868621461,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","num":22,"id":{"name":"num_traits","disambiguator":[14151819688243967828,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","num":23,"id":{"name":"paste","disambiguator":[15175479538455062054,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","num":24,"id":{"name":"byteorder","disambiguator":[15744533976623629838,0]}}],"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":0,"byte_end":10184,"line_start":1,"line_end":381,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1969,"byte_end":1978,"line_start":71,"line_end":71,"column_start":25,"column_end":34},"alias_span":null,"name":"from_read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1075},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1980,"byte_end":1992,"line_start":71,"line_end":71,"column_start":36,"column_end":48},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":558},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2039,"byte_end":2052,"line_start":73,"line_end":73,"column_start":24,"column_end":37},"alias_span":null,"name":"from_read_ref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":929},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2078,"byte_end":2084,"line_start":74,"line_end":74,"column_start":25,"column_end":31},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":931},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2086,"byte_end":2098,"line_start":74,"line_end":74,"column_start":33,"column_end":45},"alias_span":null,"name":"to_vec_named","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1334},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2100,"byte_end":2110,"line_start":74,"line_end":74,"column_start":47,"column_end":57},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2137,"byte_end":2147,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":0,"byte_end":10184,"line_start":1,"line_end":381,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":181},{"krate":0,"index":562},{"krate":0,"index":933},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":934},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":961},{"krate":0,"index":1401},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":965},{"krate":0,"index":974},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":988}],"decl_id":null,"docs":" This crate connects Rust MessagePack library with [`serde`][serde] providing an ability to\n easily serialize and deserialize both Rust built-in types, the standard library and custom data\n structures.","sig":null,"attributes":[{"value":"/ This crate connects Rust MessagePack library with [`serde`][serde] providing an ability to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":0,"byte_end":94,"line_start":1,"line_end":1,"column_start":1,"column_end":95}},{"value":"/ easily serialize and deserialize both Rust built-in types, the standard library and custom data","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":95,"byte_end":194,"line_start":2,"line_end":2,"column_start":1,"column_end":100}},{"value":"/ structures.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":195,"byte_end":210,"line_start":3,"line_end":3,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":211,"byte_end":214,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ## Motivating example","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":215,"byte_end":240,"line_start":5,"line_end":5,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":241,"byte_end":244,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":245,"byte_end":252,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ let buf = rmp_serde::to_vec(&(42, \"the Answer\")).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":253,"byte_end":315,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":316,"byte_end":319,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":320,"byte_end":335,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/     vec![0x92, 0x2a, 0xaa, 0x74, 0x68, 0x65, 0x20, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72],","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":336,"byte_end":427,"line_start":11,"line_end":11,"column_start":1,"column_end":92}},{"value":"/     buf","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":428,"byte_end":439,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ );","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":440,"byte_end":446,"line_start":13,"line_end":13,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":447,"byte_end":450,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ assert_eq!((42, \"the Answer\"), rmp_serde::from_read_ref(&buf).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":451,"byte_end":527,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":528,"byte_end":535,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":536,"byte_end":539,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Type-based Serialization and Deserialization","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":540,"byte_end":590,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":591,"byte_end":594,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Serde provides a mechanism for low boilerplate serialization & deserialization of values to and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":595,"byte_end":694,"line_start":20,"line_end":20,"column_start":1,"column_end":100}},{"value":"/ from MessagePack via the serialization API.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":695,"byte_end":742,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":743,"byte_end":746,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ To be able to serialize a piece of data, it must implement the `serde::Serialize` trait. To be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":747,"byte_end":845,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ able to deserialize a piece of data, it must implement the `serde::Deserialize` trait. Serde","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":846,"byte_end":942,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"/ provides an annotation to automatically generate the code for these","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":943,"byte_end":1014,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ traits: `#[derive(Serialize, Deserialize)]`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1015,"byte_end":1063,"line_start":26,"line_end":26,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1064,"byte_end":1067,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1068,"byte_end":1082,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1083,"byte_end":1086,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1087,"byte_end":1094,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ extern crate serde;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1095,"byte_end":1118,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/ #[macro_use]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1119,"byte_end":1135,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ extern crate serde_derive;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1136,"byte_end":1166,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/ extern crate rmp_serde as rmps;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1167,"byte_end":1202,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1203,"byte_end":1206,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1207,"byte_end":1241,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/ use serde::{Deserialize, Serialize};","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1242,"byte_end":1282,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ use rmps::{Deserializer, Serializer};","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1283,"byte_end":1324,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1325,"byte_end":1328,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, PartialEq, Deserialize, Serialize)]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1329,"byte_end":1384,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/ struct Human {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1385,"byte_end":1403,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/     age: u32,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1404,"byte_end":1421,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/     name: String,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1422,"byte_end":1443,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1444,"byte_end":1449,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1450,"byte_end":1453,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1454,"byte_end":1469,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/     let mut buf = Vec::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1470,"byte_end":1503,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/     let val = Human {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1504,"byte_end":1529,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/         age: 42,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1530,"byte_end":1550,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/         name: \"John\".into(),","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1551,"byte_end":1583,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/     };","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1584,"byte_end":1594,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1595,"byte_end":1598,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     val.serialize(&mut Serializer::new(&mut buf)).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1599,"byte_end":1662,"line_start":53,"line_end":53,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1663,"byte_end":1668,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1669,"byte_end":1676,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1677,"byte_end":1680,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [serde]: https://serde.rs/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1681,"byte_end":1711,"line_start":57,"line_end":57,"column_start":1,"column_end":31}},{"value":"warn(missing_debug_implementations, missing_docs)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":1713,"byte_end":1766,"line_start":59,"line_end":59,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":57},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":997},{"krate":0,"index":105},{"krate":0,"index":999},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":1011},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":1023},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":1035},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":165},{"krate":0,"index":168}],"decl_id":null,"docs":" Change MessagePack behavior with configuration wrappers.\n","sig":null,"attributes":[{"value":"/ Change MessagePack behavior with configuration wrappers.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":10186,"byte_end":10246,"line_start":1,"line_end":1,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":75},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":10592,"byte_end":10608,"line_start":11,"line_end":11,"column_start":11,"column_end":27},"name":"SerializerConfig","qualname":"::config::SerializerConfig","value":"SerializerConfig: sealed::SerializerConfig","parent":null,"children":[],"decl_id":null,"docs":" Represents configuration that dicatates what the serializer does.","sig":null,"attributes":[{"value":"/ Represents configuration that dicatates what the serializer does.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":10347,"byte_end":10416,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":10417,"byte_end":10420,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Implemented as an empty trait depending on a hidden trait in order to allow changing the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":10421,"byte_end":10513,"line_start":9,"line_end":9,"column_start":1,"column_end":93}},{"value":"/ methods of this trait without breaking backwards compatibility.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":10514,"byte_end":10581,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":93},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":11081,"byte_end":11097,"line_start":24,"line_end":24,"column_start":15,"column_end":31},"name":"SerializerConfig","qualname":"::config::sealed::SerializerConfig","value":"SerializerConfig: Copy","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":101},{"krate":0,"index":104}],"decl_id":null,"docs":" This is the inner trait - the real SerializerConfig.","sig":null,"attributes":[{"value":"/ This is the inner trait - the real SerializerConfig.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":10808,"byte_end":10864,"line_start":20,"line_end":20,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":10869,"byte_end":10872,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This hack disallows external implementations and usage of SerializerConfig and thus","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":10877,"byte_end":10964,"line_start":22,"line_end":22,"column_start":5,"column_end":92}},{"value":"/ allows us to change SerializerConfig methods freely without breaking backwards compatibility.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":10969,"byte_end":11066,"line_start":23,"line_end":23,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":11117,"byte_end":11133,"line_start":25,"line_end":25,"column_start":12,"column_end":28},"name":"write_struct_len","qualname":"::config::sealed::SerializerConfig::write_struct_len","value":"fn write_struct_len<S>(&mut S, usize) -> Result<(), Error> where\nS: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":11308,"byte_end":11326,"line_start":30,"line_end":30,"column_start":12,"column_end":30},"name":"write_struct_field","qualname":"::config::sealed::SerializerConfig::write_struct_field","value":"fn write_struct_field<S, T>(&mut S, &'static str, &T) -> Result<(), Error>\nwhere S: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>,\nT: ?Sized + Serialize","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":11719,"byte_end":11738,"line_start":39,"line_end":39,"column_start":12,"column_end":31},"name":"write_variant_ident","qualname":"::config::sealed::SerializerConfig::write_variant_ident","value":"fn write_variant_ident<S>(&mut S, u32, &'static str) -> Result<(), Error>\nwhere S: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Encodes an enum variant ident (id or name) according to underlying writer.","sig":null,"attributes":[{"value":"/ Encodes an enum variant ident (id or name) according to underlying writer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":11554,"byte_end":11632,"line_start":36,"line_end":36,"column_start":9,"column_end":87}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":11641,"byte_end":11644,"line_start":37,"line_end":37,"column_start":9,"column_end":12}},{"value":"/ Used in `Serializer::serialize_*_variant` methods.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":11653,"byte_end":11707,"line_start":38,"line_end":38,"column_start":9,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12110,"byte_end":12127,"line_start":50,"line_end":50,"column_start":12,"column_end":29},"name":"is_human_readable","qualname":"::config::sealed::SerializerConfig::is_human_readable","value":"fn is_human_readable() -> bool","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Determines the value of `Serializer::is_human_readable` and\n `Deserializer::is_human_readable`.\n","sig":null,"attributes":[{"value":"/ Determines the value of `Serializer::is_human_readable` and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":11988,"byte_end":12051,"line_start":48,"line_end":48,"column_start":9,"column_end":72}},{"value":"/ `Deserializer::is_human_readable`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12060,"byte_end":12098,"line_start":49,"line_end":49,"column_start":9,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":992},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12471,"byte_end":12484,"line_start":63,"line_end":63,"column_start":12,"column_end":25},"name":"DefaultConfig","qualname":"::config::DefaultConfig","value":"","parent":null,"children":[],"decl_id":null,"docs":" The default serializer/deserializer configuration.","sig":null,"attributes":[{"value":"/ The default serializer/deserializer configuration.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12148,"byte_end":12202,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12203,"byte_end":12206,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This configuration:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12207,"byte_end":12230,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/ - Writes structs as a tuple, without field names","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12231,"byte_end":12283,"line_start":57,"line_end":57,"column_start":1,"column_end":53}},{"value":"/ - Writes enum variants as integers","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12284,"byte_end":12322,"line_start":58,"line_end":58,"column_start":1,"column_end":39}},{"value":"/ - Writes and reads types as binary, not human-readable","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12323,"byte_end":12381,"line_start":59,"line_end":59,"column_start":1,"column_end":59}},{"value":"/ This is the most compact representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12385,"byte_end":12429,"line_start":61,"line_end":61,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12544,"byte_end":12560,"line_start":66,"line_end":66,"column_start":8,"column_end":24},"name":"write_struct_len","qualname":"<DefaultConfig as config::sealed::SerializerConfig>::write_struct_len","value":"fn write_struct_len<S>(&mut S, usize) -> Result<(), Error> where\nS: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":94},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12822,"byte_end":12840,"line_start":77,"line_end":77,"column_start":8,"column_end":26},"name":"write_struct_field","qualname":"<DefaultConfig as config::sealed::SerializerConfig>::write_struct_field","value":"fn write_struct_field<S, T>(&mut S, &'static str, &T) -> Result<(), Error>\nwhere S: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>,\nT: ?Sized + Serialize","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":97},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12805,"byte_end":12814,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13107,"byte_end":13126,"line_start":87,"line_end":87,"column_start":8,"column_end":27},"name":"write_variant_ident","qualname":"<DefaultConfig as config::sealed::SerializerConfig>::write_variant_ident","value":"fn write_variant_ident<S>(&mut S, u32, &'static str) -> Result<(), Error>\nwhere S: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":101},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13090,"byte_end":13099,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13417,"byte_end":13434,"line_start":100,"line_end":100,"column_start":8,"column_end":25},"name":"is_human_readable","qualname":"<DefaultConfig as config::sealed::SerializerConfig>::is_human_readable","value":"fn is_human_readable() -> bool","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":104},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13392,"byte_end":13409,"line_start":99,"line_end":99,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":999},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13918,"byte_end":13933,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"StructMapConfig","qualname":"::config::StructMapConfig","value":"","parent":null,"children":[],"decl_id":null,"docs":" Config wrapper, that overrides struct serialization by packing as a map with field names.","sig":null,"attributes":[{"value":"/ Config wrapper, that overrides struct serialization by packing as a map with field names.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13470,"byte_end":13563,"line_start":105,"line_end":105,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13564,"byte_end":13567,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ MessagePack specification does not tell how to serialize structs. This trait allows you to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13568,"byte_end":13662,"line_start":107,"line_end":107,"column_start":1,"column_end":95}},{"value":"/ extend serialization to match your app's requirements.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13663,"byte_end":13721,"line_start":108,"line_end":108,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13722,"byte_end":13725,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Default `Serializer` implementation writes structs as a tuple, i.e. only its length is encoded,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13726,"byte_end":13825,"line_start":110,"line_end":110,"column_start":1,"column_end":100}},{"value":"/ because it is the most compact representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13826,"byte_end":13876,"line_start":111,"line_end":111,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":14105,"byte_end":14108,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<StructMapConfig<C>>::new","value":"fn new(C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `StructMapConfig` inheriting unchanged configuration options from the given configuration.\n","sig":null,"attributes":[{"value":"/ Creates a `StructMapConfig` inheriting unchanged configuration options from the given configuration.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13975,"byte_end":14079,"line_start":116,"line_end":116,"column_start":5,"column_end":109}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":14084,"byte_end":14093,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":14273,"byte_end":14289,"line_start":127,"line_end":127,"column_start":8,"column_end":24},"name":"write_struct_len","qualname":"<StructMapConfig<C> as config::sealed::SerializerConfig>::write_struct_len","value":"fn write_struct_len<S>(&mut S, usize) -> Result<(), Error> where\nS: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":94},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":14535,"byte_end":14553,"line_start":137,"line_end":137,"column_start":8,"column_end":26},"name":"write_struct_field","qualname":"<StructMapConfig<C> as config::sealed::SerializerConfig>::write_struct_field","value":"fn write_struct_field<S, T>(&mut S, &'static str, &T) -> Result<(), Error>\nwhere S: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>,\nT: ?Sized + Serialize","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":97},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":14867,"byte_end":14886,"line_start":148,"line_end":148,"column_start":8,"column_end":27},"name":"write_variant_ident","qualname":"<StructMapConfig<C> as config::sealed::SerializerConfig>::write_variant_ident","value":"fn write_variant_ident<S>(&mut S, u32, &'static str) -> Result<(), Error>\nwhere S: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":101},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":14850,"byte_end":14859,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":15201,"byte_end":15218,"line_start":161,"line_end":161,"column_start":8,"column_end":25},"name":"is_human_readable","qualname":"<StructMapConfig<C> as config::sealed::SerializerConfig>::is_human_readable","value":"fn is_human_readable() -> bool","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":104},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":15176,"byte_end":15193,"line_start":160,"line_end":160,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1011},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":15412,"byte_end":15429,"line_start":169,"line_end":169,"column_start":12,"column_end":29},"name":"StructTupleConfig","qualname":"::config::StructTupleConfig","value":"","parent":null,"children":[],"decl_id":null,"docs":" Config wrapper that overrides struct serlization by packing as a tuple without field\n names.\n","sig":null,"attributes":[{"value":"/ Config wrapper that overrides struct serlization by packing as a tuple without field","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":15271,"byte_end":15359,"line_start":166,"line_end":166,"column_start":1,"column_end":89}},{"value":"/ names.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":15360,"byte_end":15370,"line_start":167,"line_end":167,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":15605,"byte_end":15608,"line_start":174,"line_end":174,"column_start":12,"column_end":15},"name":"new","qualname":"<StructTupleConfig<C>>::new","value":"fn new(C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `StructTupleConfig` inheriting unchanged configuration options from the given configuration.\n","sig":null,"attributes":[{"value":"/ Creates a `StructTupleConfig` inheriting unchanged configuration options from the given configuration.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":15473,"byte_end":15579,"line_start":172,"line_end":172,"column_start":5,"column_end":111}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":15584,"byte_end":15593,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":15777,"byte_end":15793,"line_start":183,"line_end":183,"column_start":8,"column_end":24},"name":"write_struct_len","qualname":"<StructTupleConfig<C> as config::sealed::SerializerConfig>::write_struct_len","value":"fn write_struct_len<S>(&mut S, usize) -> Result<(), Error> where\nS: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":94},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":16055,"byte_end":16073,"line_start":194,"line_end":194,"column_start":8,"column_end":26},"name":"write_struct_field","qualname":"<StructTupleConfig<C> as config::sealed::SerializerConfig>::write_struct_field","value":"fn write_struct_field<S, T>(&mut S, &'static str, &T) -> Result<(), Error>\nwhere S: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>,\nT: ?Sized + Serialize","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":97},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":16038,"byte_end":16047,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":16340,"byte_end":16359,"line_start":204,"line_end":204,"column_start":8,"column_end":27},"name":"write_variant_ident","qualname":"<StructTupleConfig<C> as config::sealed::SerializerConfig>::write_variant_ident","value":"fn write_variant_ident<S>(&mut S, u32, &'static str) -> Result<(), Error>\nwhere S: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":101},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":16323,"byte_end":16332,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":16674,"byte_end":16691,"line_start":217,"line_end":217,"column_start":8,"column_end":25},"name":"is_human_readable","qualname":"<StructTupleConfig<C> as config::sealed::SerializerConfig>::is_human_readable","value":"fn is_human_readable() -> bool","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":104},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":16649,"byte_end":16666,"line_start":216,"line_end":216,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1023},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":16911,"byte_end":16930,"line_start":225,"line_end":225,"column_start":12,"column_end":31},"name":"HumanReadableConfig","qualname":"::config::HumanReadableConfig","value":"","parent":null,"children":[],"decl_id":null,"docs":" Config wrapper that overrides `Serializer::is_human_readable` and\n `Deserializer::is_human_readable` to return `true`.\n","sig":null,"attributes":[{"value":"/ Config wrapper that overrides `Serializer::is_human_readable` and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":16744,"byte_end":16813,"line_start":222,"line_end":222,"column_start":1,"column_end":70}},{"value":"/ `Deserializer::is_human_readable` to return `true`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":16814,"byte_end":16869,"line_start":223,"line_end":223,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":17110,"byte_end":17113,"line_start":230,"line_end":230,"column_start":12,"column_end":15},"name":"new","qualname":"<HumanReadableConfig<C>>::new","value":"fn new(C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `HumanReadableConfig` inheriting unchanged configuration options from the given configuration.\n","sig":null,"attributes":[{"value":"/ Creates a `HumanReadableConfig` inheriting unchanged configuration options from the given configuration.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":16976,"byte_end":17084,"line_start":228,"line_end":228,"column_start":5,"column_end":113}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":17089,"byte_end":17098,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":17285,"byte_end":17301,"line_start":240,"line_end":240,"column_start":8,"column_end":24},"name":"write_struct_len","qualname":"<HumanReadableConfig<C> as config::sealed::SerializerConfig>::write_struct_len","value":"fn write_struct_len<S>(&mut S, usize) -> Result<(), Error> where\nS: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":94},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":17268,"byte_end":17277,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":17524,"byte_end":17542,"line_start":249,"line_end":249,"column_start":8,"column_end":26},"name":"write_struct_field","qualname":"<HumanReadableConfig<C> as config::sealed::SerializerConfig>::write_struct_field","value":"fn write_struct_field<S, T>(&mut S, &'static str, &T) -> Result<(), Error>\nwhere S: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>,\nT: ?Sized + Serialize","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":97},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":17507,"byte_end":17516,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":17826,"byte_end":17845,"line_start":259,"line_end":259,"column_start":8,"column_end":27},"name":"write_variant_ident","qualname":"<HumanReadableConfig<C> as config::sealed::SerializerConfig>::write_variant_ident","value":"fn write_variant_ident<S>(&mut S, u32, &'static str) -> Result<(), Error>\nwhere S: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":101},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":17809,"byte_end":17818,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18160,"byte_end":18177,"line_start":272,"line_end":272,"column_start":8,"column_end":25},"name":"is_human_readable","qualname":"<HumanReadableConfig<C> as config::sealed::SerializerConfig>::is_human_readable","value":"fn is_human_readable() -> bool","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":104},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18135,"byte_end":18152,"line_start":271,"line_end":271,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1035},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18380,"byte_end":18392,"line_start":280,"line_end":280,"column_start":12,"column_end":24},"name":"BinaryConfig","qualname":"::config::BinaryConfig","value":"","parent":null,"children":[],"decl_id":null,"docs":" Config wrapper that overrides `Serializer::is_human_readable` and\n `Deserializer::is_human_readable` to return `false`.\n","sig":null,"attributes":[{"value":"/ Config wrapper that overrides `Serializer::is_human_readable` and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18212,"byte_end":18281,"line_start":277,"line_end":277,"column_start":1,"column_end":70}},{"value":"/ `Deserializer::is_human_readable` to return `false`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18282,"byte_end":18338,"line_start":278,"line_end":278,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18566,"byte_end":18569,"line_start":285,"line_end":285,"column_start":12,"column_end":15},"name":"new","qualname":"<BinaryConfig<C>>::new","value":"fn new(C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BinaryConfig` inheriting unchanged configuration options from the given configuration.\n","sig":null,"attributes":[{"value":"/ Creates a `BinaryConfig` inheriting unchanged configuration options from the given configuration.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18431,"byte_end":18532,"line_start":283,"line_end":283,"column_start":5,"column_end":106}},{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18537,"byte_end":18554,"line_start":284,"line_end":284,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18734,"byte_end":18750,"line_start":295,"line_end":295,"column_start":8,"column_end":24},"name":"write_struct_len","qualname":"<BinaryConfig<C> as config::sealed::SerializerConfig>::write_struct_len","value":"fn write_struct_len<S>(&mut S, usize) -> Result<(), Error> where\nS: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":94},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18717,"byte_end":18726,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18973,"byte_end":18991,"line_start":304,"line_end":304,"column_start":8,"column_end":26},"name":"write_struct_field","qualname":"<BinaryConfig<C> as config::sealed::SerializerConfig>::write_struct_field","value":"fn write_struct_field<S, T>(&mut S, &'static str, &T) -> Result<(), Error>\nwhere S: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>,\nT: ?Sized + Serialize","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":97},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18956,"byte_end":18965,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":19275,"byte_end":19294,"line_start":314,"line_end":314,"column_start":8,"column_end":27},"name":"write_variant_ident","qualname":"<BinaryConfig<C> as config::sealed::SerializerConfig>::write_variant_ident","value":"fn write_variant_ident<S>(&mut S, u32, &'static str) -> Result<(), Error>\nwhere S: UnderlyingWrite, for<'a> &'a mut S: Serializer<Ok = (), Error = ()>","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":101},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":19258,"byte_end":19267,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":19609,"byte_end":19626,"line_start":327,"line_end":327,"column_start":8,"column_end":25},"name":"is_human_readable","qualname":"<BinaryConfig<C> as config::sealed::SerializerConfig>::is_human_readable","value":"fn is_human_readable() -> bool","parent":{"krate":0,"index":93},"children":[],"decl_id":{"krate":0,"index":104},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":19584,"byte_end":19601,"line_start":326,"line_end":326,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":181},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decode","qualname":"::decode","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":1047},{"krate":0,"index":1073},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":1075},{"krate":0,"index":1082},{"krate":0,"index":312},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":327},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":340},{"krate":0,"index":349},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":1086},{"krate":0,"index":1093},{"krate":0,"index":1095},{"krate":0,"index":1103},{"krate":0,"index":361},{"krate":0,"index":367},{"krate":0,"index":375},{"krate":0,"index":383},{"krate":0,"index":391},{"krate":0,"index":412},{"krate":0,"index":418},{"krate":0,"index":423},{"krate":0,"index":432},{"krate":0,"index":438},{"krate":0,"index":443},{"krate":0,"index":454},{"krate":0,"index":459},{"krate":0,"index":464},{"krate":0,"index":473},{"krate":0,"index":486},{"krate":0,"index":491},{"krate":0,"index":496},{"krate":0,"index":505},{"krate":0,"index":1268},{"krate":0,"index":1278},{"krate":0,"index":1283},{"krate":0,"index":1287},{"krate":0,"index":1292},{"krate":0,"index":1296},{"krate":0,"index":518},{"krate":0,"index":1302},{"krate":0,"index":1306},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":530},{"krate":0,"index":1309},{"krate":0,"index":1314},{"krate":0,"index":534},{"krate":0,"index":538},{"krate":0,"index":542},{"krate":0,"index":547},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558}],"decl_id":null,"docs":" Generic MessagePack deserialization.\n","sig":null,"attributes":[{"value":"/ Generic MessagePack deserialization.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":19662,"byte_end":19702,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1048},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20506,"byte_end":20523,"line_start":27,"line_end":27,"column_start":5,"column_end":22},"name":"InvalidMarkerRead","qualname":"::decode::Error::InvalidMarkerRead","value":"Error::InvalidMarkerRead(io::Error)","parent":{"krate":0,"index":1047},"children":[],"decl_id":null,"docs":" The enclosed I/O error occurred while trying to read a MessagePack\n marker.\n","sig":null,"attributes":[{"value":"/ The enclosed I/O error occurred while trying to read a MessagePack","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20415,"byte_end":20485,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/ marker.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20490,"byte_end":20501,"line_start":26,"line_end":26,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":1050},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20524,"byte_end":20533,"line_start":27,"line_end":27,"column_start":23,"column_end":32},"name":"0","qualname":"::decode::Error::InvalidMarkerRead::0","value":"std::io::Error","parent":{"krate":0,"index":1048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1051},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20639,"byte_end":20654,"line_start":30,"line_end":30,"column_start":5,"column_end":20},"name":"InvalidDataRead","qualname":"::decode::Error::InvalidDataRead","value":"Error::InvalidDataRead(io::Error)","parent":{"krate":0,"index":1047},"children":[],"decl_id":null,"docs":" The enclosed I/O error occurred while trying to read the encoded\n MessagePack data.\n","sig":null,"attributes":[{"value":"/ The enclosed I/O error occurred while trying to read the encoded","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20540,"byte_end":20608,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/ MessagePack data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20613,"byte_end":20634,"line_start":29,"line_end":29,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1053},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20655,"byte_end":20664,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"name":"0","qualname":"::decode::Error::InvalidDataRead::0","value":"std::io::Error","parent":{"krate":0,"index":1051},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1054},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20745,"byte_end":20757,"line_start":32,"line_end":32,"column_start":5,"column_end":17},"name":"TypeMismatch","qualname":"::decode::Error::TypeMismatch","value":"Error::TypeMismatch(Marker)","parent":{"krate":0,"index":1047},"children":[],"decl_id":null,"docs":" A mismatch occurred between the decoded and expected value types.\n","sig":null,"attributes":[{"value":"/ A mismatch occurred between the decoded and expected value types.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20671,"byte_end":20740,"line_start":31,"line_end":31,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1056},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20758,"byte_end":20764,"line_start":32,"line_end":32,"column_start":18,"column_end":24},"name":"0","qualname":"::decode::Error::TypeMismatch::0","value":"rmp::Marker","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1057},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20831,"byte_end":20841,"line_start":34,"line_end":34,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::decode::Error::OutOfRange","value":"Error::OutOfRange","parent":{"krate":0,"index":1047},"children":[],"decl_id":null,"docs":" A numeric cast failed due to an out-of-range error.\n","sig":null,"attributes":[{"value":"/ A numeric cast failed due to an out-of-range error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20771,"byte_end":20826,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1059},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20914,"byte_end":20928,"line_start":36,"line_end":36,"column_start":5,"column_end":19},"name":"LengthMismatch","qualname":"::decode::Error::LengthMismatch","value":"Error::LengthMismatch(u32)","parent":{"krate":0,"index":1047},"children":[],"decl_id":null,"docs":" A decoded array did not have the enclosed expected length.\n","sig":null,"attributes":[{"value":"/ A decoded array did not have the enclosed expected length.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20847,"byte_end":20909,"line_start":35,"line_end":35,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1061},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20929,"byte_end":20932,"line_start":36,"line_end":36,"column_start":20,"column_end":23},"name":"0","qualname":"::decode::Error::LengthMismatch::0","value":"u32","parent":{"krate":0,"index":1059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1062},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21037,"byte_end":21050,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"Uncategorized","qualname":"::decode::Error::Uncategorized","value":"Error::Uncategorized(String)","parent":{"krate":0,"index":1047},"children":[],"decl_id":null,"docs":" An otherwise uncategorized error occurred. See the enclosed `String` for\n details.\n","sig":null,"attributes":[{"value":"/ An otherwise uncategorized error occurred. See the enclosed `String` for","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20939,"byte_end":21015,"line_start":37,"line_end":37,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21020,"byte_end":21032,"line_start":38,"line_end":38,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":1064},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21051,"byte_end":21057,"line_start":39,"line_end":39,"column_start":19,"column_end":25},"name":"0","qualname":"::decode::Error::Uncategorized::0","value":"std::string::String","parent":{"krate":0,"index":1062},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1065},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21183,"byte_end":21189,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::decode::Error::Syntax","value":"Error::Syntax(String)","parent":{"krate":0,"index":1047},"children":[],"decl_id":null,"docs":" A general error occurred while deserializing the expected type. See the\n enclosed `String` for details.\n","sig":null,"attributes":[{"value":"/ A general error occurred while deserializing the expected type. See the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21064,"byte_end":21139,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ enclosed `String` for details.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21144,"byte_end":21178,"line_start":41,"line_end":41,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1067},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21190,"byte_end":21196,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"0","qualname":"::decode::Error::Syntax::0","value":"std::string::String","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1068},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21259,"byte_end":21268,"line_start":44,"line_end":44,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::decode::Error::Utf8Error","value":"Error::Utf8Error(Utf8Error)","parent":{"krate":0,"index":1047},"children":[],"decl_id":null,"docs":" An encoded string could not be parsed as UTF-8.\n","sig":null,"attributes":[{"value":"/ An encoded string could not be parsed as UTF-8.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21203,"byte_end":21254,"line_start":43,"line_end":43,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1070},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21269,"byte_end":21278,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"name":"0","qualname":"::decode::Error::Utf8Error::0","value":"std::str::Utf8Error","parent":{"krate":0,"index":1068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1071},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21323,"byte_end":21341,"line_start":46,"line_end":46,"column_start":5,"column_end":23},"name":"DepthLimitExceeded","qualname":"::decode::Error::DepthLimitExceeded","value":"Error::DepthLimitExceeded","parent":{"krate":0,"index":1047},"children":[],"decl_id":null,"docs":" The depth limit was exceeded.\n","sig":null,"attributes":[{"value":"/ The depth limit was exceeded.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21285,"byte_end":21318,"line_start":45,"line_end":45,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1047},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20403,"byte_end":20408,"line_start":24,"line_end":24,"column_start":10,"column_end":15},"name":"Error","qualname":"::decode::Error","value":"enum Error {\n    InvalidMarkerRead(io::Error),\n    InvalidDataRead(io::Error),\n    TypeMismatch(Marker),\n    OutOfRange,\n    LengthMismatch(u32),\n    Uncategorized(String),\n    Syntax(String),\n    Utf8Error(Utf8Error),\n    DepthLimitExceeded,\n}","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1071}],"decl_id":null,"docs":" Enum representing errors that can occur while decoding MessagePack data.\n","sig":null,"attributes":[{"value":"/ Enum representing errors that can occur while decoding MessagePack data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":20300,"byte_end":20376,"line_start":22,"line_end":22,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21688,"byte_end":21694,"line_start":65,"line_end":65,"column_start":8,"column_end":14},"name":"source","qualname":"<Error as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn error::Error + 'static>","parent":{"krate":1,"index":2565},"children":[],"decl_id":{"krate":1,"index":2566},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21673,"byte_end":21680,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":22265,"byte_end":22271,"line_start":82,"line_end":82,"column_start":8,"column_end":14},"name":"custom","qualname":"<Error as serde::de::Error>::custom","value":"fn custom<T>(T) -> Self where T: Display","parent":{"krate":20,"index":8914},"children":[],"decl_id":{"krate":20,"index":8915},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":22250,"byte_end":22257,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":22394,"byte_end":22397,"line_start":89,"line_end":89,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10023},"children":[],"decl_id":{"krate":2,"index":10024},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":22379,"byte_end":22386,"line_start":88,"line_end":88,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":23501,"byte_end":23505,"line_start":112,"line_end":112,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(MarkerReadError) -> Error","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":23486,"byte_end":23493,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":23697,"byte_end":23701,"line_start":121,"line_end":121,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(Utf8Error) -> Error","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":23682,"byte_end":23689,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":23825,"byte_end":23829,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(ValueReadError) -> Error","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":23810,"byte_end":23817,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":24208,"byte_end":24212,"line_start":139,"line_end":139,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(NumValueReadError) -> Error","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":24193,"byte_end":24200,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":24675,"byte_end":24679,"line_start":151,"line_end":151,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(DecodeStringError) -> Error","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":24660,"byte_end":24667,"line_start":150,"line_end":150,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":25284,"byte_end":25288,"line_start":164,"line_end":164,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(TryFromIntError) -> Self","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":25269,"byte_end":25276,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1075},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":25572,"byte_end":25584,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::decode::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081}],"decl_id":null,"docs":" A Deserializer that reads bytes from a buffer.","sig":null,"attributes":[{"value":"/ A Deserializer that reads bytes from a buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":25354,"byte_end":25404,"line_start":169,"line_end":169,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":25405,"byte_end":25408,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":25409,"byte_end":25419,"line_start":171,"line_end":171,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":25420,"byte_end":25423,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ All instances of `ErrorKind::Interrupted` are handled by this function and the underlying","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":25424,"byte_end":25517,"line_start":173,"line_end":173,"column_start":1,"column_end":94}},{"value":"/ operation is retried.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":25518,"byte_end":25543,"line_start":174,"line_end":174,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":26377,"byte_end":26380,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer<ReadReader<R>, DefaultConfig>>::new","value":"fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Deserializer` by consuming the given reader.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Deserializer` by consuming the given reader.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":26285,"byte_end":26351,"line_start":203,"line_end":203,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":26356,"byte_end":26365,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":26776,"byte_end":26783,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Deserializer<ReadReader<R>, C>>::get_ref","value":"fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader in this decoder.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader in this decoder.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":26680,"byte_end":26742,"line_start":217,"line_end":217,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":26747,"byte_end":26764,"line_start":218,"line_end":218,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":26934,"byte_end":26941,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Deserializer<ReadReader<R>, C>>::get_mut","value":"fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader in this decoder.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader in this decoder.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":26830,"byte_end":26900,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":26905,"byte_end":26922,"line_start":224,"line_end":224,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27089,"byte_end":27099,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Deserializer<ReadReader<R>, C>>::into_inner","value":"fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this deserializer returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this deserializer returning the underlying reader.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27000,"byte_end":27063,"line_start":229,"line_end":229,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27068,"byte_end":27077,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27549,"byte_end":27568,"line_start":243,"line_end":243,"column_start":12,"column_end":31},"name":"with_human_readable","qualname":"<Deserializer<R, C>>::with_human_readable","value":"fn with_human_readable(Self) -> Deserializer<R, HumanReadableConfig<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this deserializer and returns a new one, which will deserialize types with\n human-readable representations (`Deserializer::is_human_readable` will return `true`).","sig":null,"attributes":[{"value":"/ Consumes this deserializer and returns a new one, which will deserialize types with","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27201,"byte_end":27288,"line_start":237,"line_end":237,"column_start":5,"column_end":92}},{"value":"/ human-readable representations (`Deserializer::is_human_readable` will return `true`).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27293,"byte_end":27383,"line_start":238,"line_end":238,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27388,"byte_end":27391,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This is primarily useful if you need to interoperate with serializations produced by older","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27396,"byte_end":27490,"line_start":240,"line_end":240,"column_start":5,"column_end":99}},{"value":"/ versions of `rmp-serde`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27495,"byte_end":27523,"line_start":241,"line_end":241,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27528,"byte_end":27537,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28163,"byte_end":28174,"line_start":259,"line_end":259,"column_start":12,"column_end":23},"name":"with_binary","qualname":"<Deserializer<R, C>>::with_binary","value":"fn with_binary(Self) -> Deserializer<R, BinaryConfig<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this deserializer and returns a new one, which will deserialize types with\n binary representations (`Deserializer::is_human_readable` will return `false`).","sig":null,"attributes":[{"value":"/ Consumes this deserializer and returns a new one, which will deserialize types with","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27836,"byte_end":27923,"line_start":253,"line_end":253,"column_start":5,"column_end":92}},{"value":"/ binary representations (`Deserializer::is_human_readable` will return `false`).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27928,"byte_end":28011,"line_start":254,"line_end":254,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28016,"byte_end":28019,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ This is the default MessagePack deserialization mechanism, consuming the most compact","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28024,"byte_end":28113,"line_start":256,"line_end":256,"column_start":5,"column_end":94}},{"value":"/ representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28118,"byte_end":28137,"line_start":257,"line_end":257,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28142,"byte_end":28151,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28608,"byte_end":28616,"line_start":273,"line_end":273,"column_start":12,"column_end":20},"name":"position","qualname":"<Deserializer<ReadReader<Cursor<R>>>>::position","value":"fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this deserializer, i.e. how many bytes were read.\n","sig":null,"attributes":[{"value":"/ Returns the current position of this deserializer, i.e. how many bytes were read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28489,"byte_end":28574,"line_start":271,"line_end":271,"column_start":5,"column_end":90}},{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28579,"byte_end":28596,"line_start":272,"line_end":272,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28858,"byte_end":28871,"line_start":284,"line_end":284,"column_start":12,"column_end":25},"name":"from_read_ref","qualname":"<Deserializer<ReadRefReader>>::from_read_ref","value":"fn from_read_ref(&'de R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Deserializer` from the given byte slice.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Deserializer` from the given byte slice.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28762,"byte_end":28824,"line_start":282,"line_end":282,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28829,"byte_end":28846,"line_start":283,"line_end":283,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":29160,"byte_end":29167,"line_start":295,"line_end":295,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Deserializer<ReadRefReader>>::get_ref","value":"fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader in this decoder.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader in this decoder.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":29064,"byte_end":29126,"line_start":293,"line_end":293,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":29131,"byte_end":29148,"line_start":294,"line_end":294,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":29382,"byte_end":29395,"line_start":303,"line_end":303,"column_start":12,"column_end":25},"name":"set_max_depth","qualname":"<Deserializer<R, C>>::set_max_depth","value":"fn set_max_depth(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Changes the maximum nesting depth that is allowed\n","sig":null,"attributes":[{"value":"/ Changes the maximum nesting depth that is allowed","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":29295,"byte_end":29348,"line_start":301,"line_end":301,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":29353,"byte_end":29370,"line_start":302,"line_end":302,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":34060,"byte_end":34075,"line_start":455,"line_end":455,"column_start":8,"column_end":23},"name":"deserialize_any","qualname":"<&'_ mut ExtDeserializer as serde::Deserializer>::deserialize_any","value":"fn deserialize_any<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":20,"index":1581},"children":[],"decl_id":{"krate":20,"index":1584},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":35321,"byte_end":35338,"line_start":487,"line_end":487,"column_start":8,"column_end":25},"name":"is_human_readable","qualname":"<&'a mut Deserializer<R, C> as serde::Deserializer>::is_human_readable","value":"fn is_human_readable(&Self) -> bool","parent":{"krate":20,"index":1581},"children":[],"decl_id":{"krate":20,"index":1642},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":35296,"byte_end":35313,"line_start":486,"line_end":486,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":35422,"byte_end":35437,"line_start":492,"line_end":492,"column_start":8,"column_end":23},"name":"deserialize_any","qualname":"<&'a mut Deserializer<R, C> as serde::Deserializer>::deserialize_any","value":"fn deserialize_any<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":20,"index":1581},"children":[],"decl_id":{"krate":20,"index":1584},"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":35398,"byte_end":35414,"line_start":491,"line_end":491,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":39769,"byte_end":39787,"line_start":588,"line_end":588,"column_start":8,"column_end":26},"name":"deserialize_option","qualname":"<&'a mut Deserializer<R, C> as serde::Deserializer>::deserialize_option","value":"fn deserialize_option<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":20,"index":1581},"children":[],"decl_id":{"krate":20,"index":1618},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":40944,"byte_end":40960,"line_start":615,"line_end":615,"column_start":8,"column_end":24},"name":"deserialize_enum","qualname":"<&'a mut Deserializer<R, C> as serde::Deserializer>::deserialize_enum","value":"fn deserialize_enum<V>(Self, &str, &[&str], V) -> Result<V::Value, Error>\nwhere V: Visitor","parent":{"krate":20,"index":1581},"children":[],"decl_id":{"krate":20,"index":1636},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":41772,"byte_end":41798,"line_start":635,"line_end":635,"column_start":8,"column_end":34},"name":"deserialize_newtype_struct","qualname":"<&'a mut Deserializer<R, C> as serde::Deserializer>::deserialize_newtype_struct","value":"fn deserialize_newtype_struct<V>(Self, &'static str, V)\n-> Result<V::Value, Error> where V: Visitor","parent":{"krate":20,"index":1581},"children":[],"decl_id":{"krate":20,"index":1624},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":42240,"byte_end":42263,"line_start":649,"line_end":649,"column_start":8,"column_end":31},"name":"deserialize_unit_struct","qualname":"<&'a mut Deserializer<R, C> as serde::Deserializer>::deserialize_unit_struct","value":"fn deserialize_unit_struct<V>(Self, &'static str, V)\n-> Result<V::Value, Self::Error> where V: Visitor","parent":{"krate":20,"index":1581},"children":[],"decl_id":{"krate":20,"index":1622},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":42873,"byte_end":42889,"line_start":665,"line_end":665,"column_start":8,"column_end":24},"name":"deserialize_i128","qualname":"<&'a mut Deserializer<R, C> as serde::Deserializer>::deserialize_i128","value":"fn deserialize_i128<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":20,"index":1581},"children":[],"decl_id":{"krate":20,"index":8984},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":42856,"byte_end":42865,"line_start":664,"line_end":664,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":43102,"byte_end":43118,"line_start":674,"line_end":674,"column_start":8,"column_end":24},"name":"deserialize_u128","qualname":"<&'a mut Deserializer<R, C> as serde::Deserializer>::deserialize_u128","value":"fn deserialize_u128<V>(Self, V) -> Result<V::Value, Self::Error> where\nV: Visitor","parent":{"krate":20,"index":1581},"children":[],"decl_id":{"krate":20,"index":8986},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":43085,"byte_end":43094,"line_start":673,"line_end":673,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1272},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48656,"byte_end":48664,"line_start":895,"line_end":895,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::decode::Reference::Borrowed","value":"Reference::Borrowed(&'b T)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The reference is pointed at data that was borrowed.\n","sig":null,"attributes":[{"value":"/ The reference is pointed at data that was borrowed.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48596,"byte_end":48651,"line_start":894,"line_end":894,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1274},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48665,"byte_end":48670,"line_start":895,"line_end":895,"column_start":14,"column_end":19},"name":"0","qualname":"::decode::Reference::Borrowed::0","value":"&'b T","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1275},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48735,"byte_end":48741,"line_start":897,"line_end":897,"column_start":5,"column_end":11},"name":"Copied","qualname":"::decode::Reference::Copied","value":"Reference::Copied(&'c T)","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The reference is pointed at data that was copied.\n","sig":null,"attributes":[{"value":"/ The reference is pointed at data that was copied.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48677,"byte_end":48730,"line_start":896,"line_end":896,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1277},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48742,"byte_end":48747,"line_start":897,"line_end":897,"column_start":12,"column_end":17},"name":"0","qualname":"::decode::Reference::Copied::0","value":"&'c T","parent":{"krate":0,"index":1275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1268},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48551,"byte_end":48560,"line_start":893,"line_end":893,"column_start":10,"column_end":19},"name":"Reference","qualname":"::decode::Reference","value":"enum Reference<'b, 'c, T> where T: ?Sized + 'static {\n    Borrowed(&'b T),\n    Copied(&'c T),\n}","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1275}],"decl_id":null,"docs":" Unification of both borrowed and non-borrowed reference types.\n","sig":null,"attributes":[{"value":"/ Unification of both borrowed and non-borrowed reference types.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48434,"byte_end":48500,"line_start":891,"line_end":891,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":518},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48889,"byte_end":48898,"line_start":903,"line_end":903,"column_start":11,"column_end":20},"name":"ReadSlice","qualname":"::decode::ReadSlice","value":"ReadSlice<'de>: Read","parent":null,"children":[{"krate":0,"index":520}],"decl_id":null,"docs":" Extends the `Read` trait by allowing to read slices directly by borrowing bytes.","sig":null,"attributes":[{"value":"/ Extends the `Read` trait by allowing to read slices directly by borrowing bytes.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48753,"byte_end":48837,"line_start":900,"line_end":900,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48838,"byte_end":48841,"line_start":901,"line_end":901,"column_start":1,"column_end":4}},{"value":"/ Used to allow zero-copy reading.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48842,"byte_end":48878,"line_start":902,"line_end":902,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48991,"byte_end":49001,"line_start":905,"line_end":905,"column_start":8,"column_end":18},"name":"read_slice","qualname":"::decode::ReadSlice::read_slice","value":"fn read_slice<'a>(&'a mut Self, usize) -> Result<Reference, io::Error>","parent":{"krate":0,"index":518},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes from the underlying byte-array.\n","sig":null,"attributes":[{"value":"/ Reads the exact number of bytes from the underlying byte-array.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48916,"byte_end":48983,"line_start":904,"line_end":904,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1302},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49137,"byte_end":49147,"line_start":910,"line_end":910,"column_start":12,"column_end":22},"name":"ReadReader","qualname":"::decode::ReadReader","value":"ReadReader {  }","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1305}],"decl_id":null,"docs":" Owned reader wrapper.\n","sig":null,"attributes":[{"value":"/ Owned reader wrapper.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49083,"byte_end":49108,"line_start":908,"line_end":908,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49436,"byte_end":49446,"line_start":927,"line_end":927,"column_start":8,"column_end":18},"name":"read_slice","qualname":"<ReadReader<R> as decode::ReadSlice>::read_slice","value":"fn read_slice<'a>(&'a mut Self, usize) -> Result<Reference, io::Error>","parent":{"krate":0,"index":518},"children":[],"decl_id":{"krate":0,"index":520},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49419,"byte_end":49428,"line_start":926,"line_end":926,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49845,"byte_end":49849,"line_start":940,"line_end":940,"column_start":8,"column_end":12},"name":"read","qualname":"<ReadReader<R> as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4527},"children":[],"decl_id":{"krate":1,"index":4528},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49828,"byte_end":49837,"line_start":939,"line_end":939,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49954,"byte_end":49964,"line_start":945,"line_end":945,"column_start":8,"column_end":18},"name":"read_exact","qualname":"<ReadReader<R> as std::io::Read>::read_exact","value":"fn read_exact(&mut Self, &mut [u8]) -> io::Result<()>","parent":{"krate":1,"index":4527},"children":[],"decl_id":{"krate":1,"index":4534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49937,"byte_end":49946,"line_start":944,"line_end":944,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50110,"byte_end":50123,"line_start":952,"line_end":952,"column_start":12,"column_end":25},"name":"ReadRefReader","qualname":"::decode::ReadRefReader","value":"ReadRefReader {  }","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313}],"decl_id":null,"docs":" Borrowed reader wrapper.\n","sig":null,"attributes":[{"value":"/ Borrowed reader wrapper.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50053,"byte_end":50081,"line_start":950,"line_end":950,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50288,"byte_end":50303,"line_start":959,"line_end":959,"column_start":12,"column_end":27},"name":"remaining_slice","qualname":"<ReadRefReader>::remaining_slice","value":"fn remaining_slice(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the part that hasn't been consumed yet\n","sig":null,"attributes":[{"value":"/ Returns the part that hasn't been consumed yet","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50226,"byte_end":50276,"line_start":958,"line_end":958,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50634,"byte_end":50638,"line_start":976,"line_end":976,"column_start":8,"column_end":12},"name":"read","qualname":"<ReadRefReader as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> Result<usize, io::Error>","parent":{"krate":1,"index":4527},"children":[],"decl_id":{"krate":1,"index":4528},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50617,"byte_end":50626,"line_start":975,"line_end":975,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50751,"byte_end":50761,"line_start":981,"line_end":981,"column_start":8,"column_end":18},"name":"read_exact","qualname":"<ReadRefReader as std::io::Read>::read_exact","value":"fn read_exact(&mut Self, &mut [u8]) -> Result<(), io::Error>","parent":{"krate":1,"index":4527},"children":[],"decl_id":{"krate":1,"index":4534},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50734,"byte_end":50743,"line_start":980,"line_end":980,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50957,"byte_end":50967,"line_start":988,"line_end":988,"column_start":8,"column_end":18},"name":"read_slice","qualname":"<ReadRefReader as decode::ReadSlice>::read_slice","value":"fn read_slice<'a>(&'a mut Self, usize) -> Result<Reference, io::Error>","parent":{"krate":0,"index":518},"children":[],"decl_id":{"krate":0,"index":520},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50940,"byte_end":50949,"line_start":987,"line_end":987,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":552},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52085,"byte_end":52094,"line_start":1017,"line_end":1017,"column_start":8,"column_end":17},"name":"from_read","qualname":"::decode::from_read","value":"fn from_read<R, T>(R) -> Result<T, Error> where R: Read, T: DeserializeOwned","parent":null,"children":[],"decl_id":null,"docs":" Deserialize an instance of type `T` from an I/O stream of MessagePack.","sig":null,"attributes":[{"value":"/ Deserialize an instance of type `T` from an I/O stream of MessagePack.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":51677,"byte_end":51751,"line_start":1009,"line_end":1009,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":51752,"byte_end":51755,"line_start":1010,"line_end":1010,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":51756,"byte_end":51768,"line_start":1011,"line_end":1011,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":51769,"byte_end":51772,"line_start":1012,"line_end":1012,"column_start":1,"column_end":4}},{"value":"/ This conversion can fail if the structure of the Value does not match the structure expected","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":51773,"byte_end":51869,"line_start":1013,"line_end":1013,"column_start":1,"column_end":97}},{"value":"/ by `T`. It can also fail if the structure is correct but `T`'s implementation of `Deserialize`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":51870,"byte_end":51968,"line_start":1014,"line_end":1014,"column_start":1,"column_end":99}},{"value":"/ decides that something is wrong with the data, for example required struct fields are missing.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":51969,"byte_end":52067,"line_start":1015,"line_end":1015,"column_start":1,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52068,"byte_end":52077,"line_start":1016,"line_end":1016,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":555},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53266,"byte_end":53276,"line_start":1053,"line_end":1053,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::decode::from_slice","value":"fn from_slice<'a, T>(&'a [u8]) -> Result<T, Error> where T: Deserialize","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a temporary scope-bound instance of type `T` from a slice, with zero-copy if possible.","sig":null,"attributes":[{"value":"/ Deserialize a temporary scope-bound instance of type `T` from a slice, with zero-copy if possible.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52231,"byte_end":52333,"line_start":1024,"line_end":1024,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52334,"byte_end":52337,"line_start":1025,"line_end":1025,"column_start":1,"column_end":4}},{"value":"/ Deserialization will be performed in zero-copy manner whenever it is possible, borrowing the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52338,"byte_end":52434,"line_start":1026,"line_end":1026,"column_start":1,"column_end":97}},{"value":"/ data from the slice itself. For example, strings and byte-arrays won't copied.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52435,"byte_end":52517,"line_start":1027,"line_end":1027,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52518,"byte_end":52521,"line_start":1028,"line_end":1028,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52522,"byte_end":52534,"line_start":1029,"line_end":1029,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52535,"byte_end":52538,"line_start":1030,"line_end":1030,"column_start":1,"column_end":4}},{"value":"/ This conversion can fail if the structure of the Value does not match the structure expected","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52539,"byte_end":52635,"line_start":1031,"line_end":1031,"column_start":1,"column_end":97}},{"value":"/ by `T`. It can also fail if the structure is correct but `T`'s implementation of `Deserialize`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52636,"byte_end":52734,"line_start":1032,"line_end":1032,"column_start":1,"column_end":99}},{"value":"/ decides that something is wrong with the data, for example required struct fields are missing.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52735,"byte_end":52833,"line_start":1033,"line_end":1033,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52834,"byte_end":52837,"line_start":1034,"line_end":1034,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52838,"byte_end":52852,"line_start":1035,"line_end":1035,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52853,"byte_end":52856,"line_start":1036,"line_end":1036,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52857,"byte_end":52864,"line_start":1037,"line_end":1037,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate serde_derive;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52865,"byte_end":52910,"line_start":1038,"line_end":1038,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52911,"byte_end":52914,"line_start":1039,"line_end":1039,"column_start":1,"column_end":4}},{"value":"/ // Encoded `[\"Bobby\", 8]`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52915,"byte_end":52945,"line_start":1040,"line_end":1040,"column_start":1,"column_end":31}},{"value":"/ let buf = [0x92, 0xa5, 0x42, 0x6f, 0x62, 0x62, 0x79, 0x8];","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":52946,"byte_end":53008,"line_start":1041,"line_end":1041,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53009,"byte_end":53012,"line_start":1042,"line_end":1042,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Deserialize, PartialEq)]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53013,"byte_end":53057,"line_start":1043,"line_end":1043,"column_start":1,"column_end":45}},{"value":"/ struct Dog<'a> {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53058,"byte_end":53078,"line_start":1044,"line_end":1044,"column_start":1,"column_end":21}},{"value":"/    name: &'a str,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53079,"byte_end":53100,"line_start":1045,"line_end":1045,"column_start":1,"column_end":22}},{"value":"/    age: u8,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53101,"byte_end":53116,"line_start":1046,"line_end":1046,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53117,"byte_end":53122,"line_start":1047,"line_end":1047,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53123,"byte_end":53126,"line_start":1048,"line_end":1048,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Dog { name: \"Bobby\", age: 8 }, rmp_serde::from_slice(&buf).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53127,"byte_end":53211,"line_start":1049,"line_end":1049,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53212,"byte_end":53219,"line_start":1050,"line_end":1050,"column_start":1,"column_end":8}},{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53220,"byte_end":53237,"line_start":1051,"line_end":1051,"column_start":1,"column_end":18}},{"value":"allow(deprecated)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53238,"byte_end":53258,"line_start":1052,"line_end":1052,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":558},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53451,"byte_end":53464,"line_start":1063,"line_end":1063,"column_start":8,"column_end":21},"name":"from_read_ref","qualname":"::decode::from_read_ref","value":"fn from_read_ref<'a, R, T>(&'a R) -> Result<T, Error> where R: AsRef<[u8]> +\n?Sized, T: Deserialize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53380,"byte_end":53389,"line_start":1060,"line_end":1060,"column_start":1,"column_end":10}},{"value":"deprecated(note = \"use from_slice\")","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":53405,"byte_end":53443,"line_start":1062,"line_end":1062,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encode","qualname":"::encode","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":1318},{"krate":0,"index":1332},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":1334},{"krate":0,"index":1340},{"krate":0,"index":650},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":665},{"krate":0,"index":671},{"krate":0,"index":678},{"krate":0,"index":1344},{"krate":0,"index":1349},{"krate":0,"index":1354},{"krate":0,"index":1360},{"krate":0,"index":1364},{"krate":0,"index":1369},{"krate":0,"index":685},{"krate":0,"index":694},{"krate":0,"index":703},{"krate":0,"index":712},{"krate":0,"index":721},{"krate":0,"index":730},{"krate":0,"index":1373},{"krate":0,"index":1377},{"krate":0,"index":739},{"krate":0,"index":1380},{"krate":0,"index":1386},{"krate":0,"index":743},{"krate":0,"index":752},{"krate":0,"index":763},{"krate":0,"index":816},{"krate":0,"index":860},{"krate":0,"index":903},{"krate":0,"index":911},{"krate":0,"index":917},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":931}],"decl_id":null,"docs":" Serialize a Rust data structure into MessagePack data.\n","sig":null,"attributes":[{"value":"/ Serialize a Rust data structure into MessagePack data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":53658,"byte_end":53716,"line_start":1,"line_end":1,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1319},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54412,"byte_end":54429,"line_start":28,"line_end":28,"column_start":5,"column_end":22},"name":"InvalidValueWrite","qualname":"::encode::Error::InvalidValueWrite","value":"Error::InvalidValueWrite(ValueWriteError)","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" Failed to write a MessagePack value.\n","sig":null,"attributes":[{"value":"/ Failed to write a MessagePack value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54367,"byte_end":54407,"line_start":27,"line_end":27,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1321},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54430,"byte_end":54445,"line_start":28,"line_end":28,"column_start":23,"column_end":38},"name":"0","qualname":"::encode::Error::InvalidValueWrite::0","value":"rmp::encode::ValueWriteError","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1322},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54582,"byte_end":54595,"line_start":31,"line_end":31,"column_start":5,"column_end":18},"name":"UnknownLength","qualname":"::encode::Error::UnknownLength","value":"Error::UnknownLength","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" Failed to serialize struct, sequence or map, because its length is unknown.\n","sig":null,"attributes":[{"value":"/ Failed to serialize struct, sequence or map, because its length is unknown.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54498,"byte_end":54577,"line_start":30,"line_end":30,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1324},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54678,"byte_end":54694,"line_start":33,"line_end":33,"column_start":5,"column_end":21},"name":"InvalidDataModel","qualname":"::encode::Error::InvalidDataModel","value":"Error::InvalidDataModel(&'static str)","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" Invalid Data model, i.e. Serialize trait is not implmented correctly\n","sig":null,"attributes":[{"value":"/ Invalid Data model, i.e. Serialize trait is not implmented correctly","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54601,"byte_end":54673,"line_start":32,"line_end":32,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1326},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54695,"byte_end":54707,"line_start":33,"line_end":33,"column_start":22,"column_end":34},"name":"0","qualname":"::encode::Error::InvalidDataModel::0","value":"&'static str","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1327},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54743,"byte_end":54761,"line_start":35,"line_end":35,"column_start":5,"column_end":23},"name":"DepthLimitExceeded","qualname":"::encode::Error::DepthLimitExceeded","value":"Error::DepthLimitExceeded","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" Depth limit exceeded\n","sig":null,"attributes":[{"value":"/ Depth limit exceeded","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54714,"byte_end":54738,"line_start":34,"line_end":34,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1329},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54811,"byte_end":54817,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::encode::Error::Syntax","value":"Error::Syntax(String)","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":" Catchall for syntax error messages.\n","sig":null,"attributes":[{"value":"/ Catchall for syntax error messages.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54767,"byte_end":54806,"line_start":36,"line_end":36,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1331},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54818,"byte_end":54824,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"0","qualname":"::encode::Error::Syntax::0","value":"std::string::String","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1318},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54355,"byte_end":54360,"line_start":26,"line_end":26,"column_start":10,"column_end":15},"name":"Error","qualname":"::encode::Error","value":"enum Error {\n    InvalidValueWrite(ValueWriteError),\n    UnknownLength,\n    InvalidDataModel(&'static str),\n    DepthLimitExceeded,\n    Syntax(String),\n}","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1327},{"krate":0,"index":1329}],"decl_id":null,"docs":" This type represents all possible errors that can occur when serializing or\n deserializing MessagePack data.\n","sig":null,"attributes":[{"value":"/ This type represents all possible errors that can occur when serializing or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54213,"byte_end":54292,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ deserializing MessagePack data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54293,"byte_end":54328,"line_start":24,"line_end":24,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54879,"byte_end":54885,"line_start":42,"line_end":42,"column_start":8,"column_end":14},"name":"source","qualname":"<Error as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn error::Error + 'static>","parent":{"krate":1,"index":2565},"children":[],"decl_id":{"krate":1,"index":2566},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54864,"byte_end":54871,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":55257,"byte_end":55260,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10023},"children":[],"decl_id":{"krate":2,"index":10024},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":55242,"byte_end":55249,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":55892,"byte_end":55896,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(ValueWriteError) -> Error","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":55877,"byte_end":55884,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56101,"byte_end":56107,"line_start":78,"line_end":78,"column_start":8,"column_end":14},"name":"custom","qualname":"<Error as serde::ser::Error>::custom","value":"fn custom<T>(T) -> Error where T: Display","parent":{"krate":20,"index":9529},"children":[],"decl_id":{"krate":20,"index":9530},"docs":" Raised when there is general error when deserializing a type.\n","sig":null,"attributes":[{"value":"/ Raised when there is general error when deserializing a type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56016,"byte_end":56081,"line_start":76,"line_end":76,"column_start":5,"column_end":70}},{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56086,"byte_end":56093,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":645},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56231,"byte_end":56246,"line_start":84,"line_end":84,"column_start":11,"column_end":26},"name":"UnderlyingWrite","qualname":"::encode::UnderlyingWrite","value":"UnderlyingWrite","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"decl_id":null,"docs":" Obtain the underlying writer.\n","sig":null,"attributes":[{"value":"/ Obtain the underlying writer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56187,"byte_end":56220,"line_start":83,"line_end":83,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":646},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56290,"byte_end":56295,"line_start":86,"line_end":86,"column_start":10,"column_end":15},"name":"Write","qualname":"::encode::UnderlyingWrite::Write","value":"type Write: Write;","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" Underlying writer type.\n","sig":null,"attributes":[{"value":"/ Underlying writer type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56253,"byte_end":56280,"line_start":85,"line_end":85,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56363,"byte_end":56370,"line_start":89,"line_end":89,"column_start":8,"column_end":15},"name":"get_ref","qualname":"::encode::UnderlyingWrite::get_ref","value":"fn get_ref(&Self) -> &Self::Write","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56309,"byte_end":56355,"line_start":88,"line_end":88,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56540,"byte_end":56547,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::encode::UnderlyingWrite::get_mut","value":"fn get_mut(&mut Self) -> &mut Self::Write","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56400,"byte_end":56454,"line_start":91,"line_end":91,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56459,"byte_end":56462,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56467,"byte_end":56532,"line_start":93,"line_end":93,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56656,"byte_end":56666,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"into_inner","qualname":"::encode::UnderlyingWrite::into_inner","value":"fn into_inner(Self) -> Self::Write","parent":{"krate":0,"index":645},"children":[],"decl_id":null,"docs":" Unwraps this `Serializer`, returning the underlying writer.\n","sig":null,"attributes":[{"value":"/ Unwraps this `Serializer`, returning the underlying writer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56585,"byte_end":56648,"line_start":96,"line_end":96,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1334},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57328,"byte_end":57338,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::encode::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339}],"decl_id":null,"docs":" Represents MessagePack serialization implementation.","sig":null,"attributes":[{"value":"/ Represents MessagePack serialization implementation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56692,"byte_end":56748,"line_start":100,"line_end":100,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56749,"byte_end":56752,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56753,"byte_end":56763,"line_start":102,"line_end":102,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56764,"byte_end":56767,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ MessagePack has no specification about how to encode enum types. Thus we are free to do","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56768,"byte_end":56859,"line_start":104,"line_end":104,"column_start":1,"column_end":92}},{"value":"/ whatever we want, so the given choice may be not ideal for you.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56860,"byte_end":56927,"line_start":105,"line_end":105,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56928,"byte_end":56931,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ An enum value is represented as a single-entry map whose key is the variant","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56932,"byte_end":57011,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ id and whose value is a sequence containing all associated data. If the enum","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57012,"byte_end":57092,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ does not have associated data, the sequence is empty.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57093,"byte_end":57150,"line_start":109,"line_end":109,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57151,"byte_end":57154,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ All instances of `ErrorKind::Interrupted` are handled by this function and the underlying","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57155,"byte_end":57248,"line_start":111,"line_end":111,"column_start":1,"column_end":94}},{"value":"/ operation is retried.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57249,"byte_end":57274,"line_start":112,"line_end":112,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57531,"byte_end":57538,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Serializer<W, C>>::get_ref","value":"fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57451,"byte_end":57497,"line_start":122,"line_end":122,"column_start":5,"column_end":51}},{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57502,"byte_end":57519,"line_start":123,"line_end":123,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57748,"byte_end":57755,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Serializer<W, C>>::get_mut","value":"fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57582,"byte_end":57636,"line_start":128,"line_end":128,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57641,"byte_end":57644,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57649,"byte_end":57714,"line_start":130,"line_end":130,"column_start":5,"column_end":70}},{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57719,"byte_end":57736,"line_start":131,"line_end":131,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57908,"byte_end":57918,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Serializer<W, C>>::into_inner","value":"fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Serializer`, returning the underlying writer.\n","sig":null,"attributes":[{"value":"/ Unwraps this `Serializer`, returning the underlying writer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57811,"byte_end":57874,"line_start":136,"line_end":136,"column_start":5,"column_end":68}},{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57879,"byte_end":57896,"line_start":137,"line_end":137,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58092,"byte_end":58114,"line_start":147,"line_end":147,"column_start":12,"column_end":34},"name":"unstable_set_max_depth","qualname":"<Serializer<W, C>>::unstable_set_max_depth","value":"fn unstable_set_max_depth(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Changes the maximum nesting depth that is allowed.","sig":null,"attributes":[{"value":"/ Changes the maximum nesting depth that is allowed.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57959,"byte_end":58013,"line_start":142,"line_end":142,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58018,"byte_end":58021,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Currently unused.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58026,"byte_end":58047,"line_start":144,"line_end":144,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58071,"byte_end":58080,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58546,"byte_end":58549,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer<W, DefaultConfig>>::new","value":"fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `MessagePack` serializer whose output will be written to the writer\n specified.","sig":null,"attributes":[{"value":"/ Constructs a new `MessagePack` serializer whose output will be written to the writer","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58229,"byte_end":58317,"line_start":153,"line_end":153,"column_start":5,"column_end":93}},{"value":"/ specified.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58322,"byte_end":58336,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58341,"byte_end":58344,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58349,"byte_end":58359,"line_start":156,"line_end":156,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58364,"byte_end":58367,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This is the default constructor, which returns a serializer that will serialize structs","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58372,"byte_end":58463,"line_start":158,"line_end":158,"column_start":5,"column_end":96}},{"value":"/ and enums using the most compact representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58468,"byte_end":58520,"line_start":159,"line_end":159,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58525,"byte_end":58534,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":59752,"byte_end":59767,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"with_struct_map","qualname":"<Serializer<W, C>>::with_struct_map","value":"fn with_struct_map(Self) -> Serializer<W, StructMapConfig<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this serializer returning the new one, which will serialize structs as a map.","sig":null,"attributes":[{"value":"/ Consumes this serializer returning the new one, which will serialize structs as a map.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":59517,"byte_end":59607,"line_start":197,"line_end":197,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":59612,"byte_end":59615,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This is used, when the default struct serialization as a tuple does not fit your","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":59620,"byte_end":59704,"line_start":199,"line_end":199,"column_start":5,"column_end":89}},{"value":"/ requirements.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":59709,"byte_end":59726,"line_start":200,"line_end":200,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":59731,"byte_end":59740,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60262,"byte_end":60279,"line_start":217,"line_end":217,"column_start":12,"column_end":29},"name":"with_struct_tuple","qualname":"<Serializer<W, C>>::with_struct_tuple","value":"fn with_struct_tuple(Self) -> Serializer<W, StructTupleConfig<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this serializer returning the new one, which will serialize structs as a tuple\n without field names.","sig":null,"attributes":[{"value":"/ Consumes this serializer returning the new one, which will serialize structs as a tuple","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":59993,"byte_end":60084,"line_start":211,"line_end":211,"column_start":5,"column_end":96}},{"value":"/ without field names.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60089,"byte_end":60113,"line_start":212,"line_end":212,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60118,"byte_end":60121,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This is the default MessagePack serialization mechanism, emitting the most compact","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60126,"byte_end":60212,"line_start":214,"line_end":214,"column_start":5,"column_end":91}},{"value":"/ representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60217,"byte_end":60236,"line_start":215,"line_end":215,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60241,"byte_end":60250,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61001,"byte_end":61020,"line_start":234,"line_end":234,"column_start":12,"column_end":31},"name":"with_human_readable","qualname":"<Serializer<W, C>>::with_human_readable","value":"fn with_human_readable(Self) -> Serializer<W, HumanReadableConfig<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this serializer returning the new one, which will serialize some types in\n human-readable representations (`Serializer::is_human_readable` will return `true`). Note\n that the overall representation is still binary, but some types such as IP addresses will\n be saved as human-readable strings.","sig":null,"attributes":[{"value":"/ Consumes this serializer returning the new one, which will serialize some types in","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60509,"byte_end":60595,"line_start":226,"line_end":226,"column_start":5,"column_end":91}},{"value":"/ human-readable representations (`Serializer::is_human_readable` will return `true`). Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60600,"byte_end":60693,"line_start":227,"line_end":227,"column_start":5,"column_end":98}},{"value":"/ that the overall representation is still binary, but some types such as IP addresses will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60698,"byte_end":60791,"line_start":228,"line_end":228,"column_start":5,"column_end":98}},{"value":"/ be saved as human-readable strings.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60796,"byte_end":60835,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60840,"byte_end":60843,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This is primarily useful if you need to interoperate with serializations produced by older","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60848,"byte_end":60942,"line_start":231,"line_end":231,"column_start":5,"column_end":99}},{"value":"/ versions of `rmp-serde`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60947,"byte_end":60975,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":60980,"byte_end":60989,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61554,"byte_end":61565,"line_start":249,"line_end":249,"column_start":12,"column_end":23},"name":"with_binary","qualname":"<Serializer<W, C>>::with_binary","value":"fn with_binary(Self) -> Serializer<W, BinaryConfig<C>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this serializer returning the new one, which will serialize types as binary\n (`Serializer::is_human_readable` will return `false`).","sig":null,"attributes":[{"value":"/ Consumes this serializer returning the new one, which will serialize types as binary","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61254,"byte_end":61342,"line_start":243,"line_end":243,"column_start":5,"column_end":93}},{"value":"/ (`Serializer::is_human_readable` will return `false`).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61347,"byte_end":61405,"line_start":244,"line_end":244,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61410,"byte_end":61413,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This is the default MessagePack serialization mechanism, emitting the most compact","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61418,"byte_end":61504,"line_start":246,"line_end":246,"column_start":5,"column_end":91}},{"value":"/ representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61509,"byte_end":61528,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61533,"byte_end":61542,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61890,"byte_end":61897,"line_start":263,"line_end":263,"column_start":8,"column_end":15},"name":"get_ref","qualname":"<Serializer<W, C> as encode::UnderlyingWrite>::get_ref","value":"fn get_ref(&Self) -> &Self::Write","parent":{"krate":0,"index":645},"children":[],"decl_id":{"krate":0,"index":647},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61865,"byte_end":61882,"line_start":262,"line_end":262,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61976,"byte_end":61983,"line_start":268,"line_end":268,"column_start":8,"column_end":15},"name":"get_mut","qualname":"<Serializer<W, C> as encode::UnderlyingWrite>::get_mut","value":"fn get_mut(&mut Self) -> &mut Self::Write","parent":{"krate":0,"index":645},"children":[],"decl_id":{"krate":0,"index":648},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61951,"byte_end":61968,"line_start":267,"line_end":267,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62074,"byte_end":62084,"line_start":273,"line_end":273,"column_start":8,"column_end":18},"name":"into_inner","qualname":"<Serializer<W, C> as encode::UnderlyingWrite>::into_inner","value":"fn into_inner(Self) -> Self::Write","parent":{"krate":0,"index":645},"children":[],"decl_id":{"krate":0,"index":649},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62049,"byte_end":62066,"line_start":272,"line_end":272,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1344},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62198,"byte_end":62206,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"Compound","qualname":"::encode::Compound","value":"Compound {  }","parent":null,"children":[{"krate":0,"index":1348}],"decl_id":null,"docs":" Part of serde serialization API.\n","sig":null,"attributes":[{"value":"/ Part of serde serialization API.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62133,"byte_end":62169,"line_start":278,"line_end":278,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1354},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62315,"byte_end":62333,"line_start":286,"line_end":286,"column_start":12,"column_end":30},"name":"ExtFieldSerializer","qualname":"::encode::ExtFieldSerializer","value":"ExtFieldSerializer {  }","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62281,"byte_end":62303,"line_start":285,"line_end":285,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1364},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62497,"byte_end":62510,"line_start":294,"line_end":294,"column_start":12,"column_end":25},"name":"ExtSerializer","qualname":"::encode::ExtSerializer","value":"ExtSerializer {  }","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1368}],"decl_id":null,"docs":" Represents MessagePack serialization implementation for Ext.\n","sig":null,"attributes":[{"value":"/ Represents MessagePack serialization implementation for Ext.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62404,"byte_end":62468,"line_start":292,"line_end":292,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62738,"byte_end":62755,"line_start":304,"line_end":304,"column_start":8,"column_end":25},"name":"serialize_element","qualname":"<Compound as serde::ser::SerializeSeq>::serialize_element","value":"fn serialize_element<T>(&mut Self, &T) -> Result<(), Self::Error> where\nT: ?Sized + Serialize","parent":{"krate":20,"index":2153},"children":[],"decl_id":{"krate":20,"index":2156},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62721,"byte_end":62730,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62905,"byte_end":62908,"line_start":309,"line_end":309,"column_start":8,"column_end":11},"name":"end","qualname":"<Compound as serde::ser::SerializeSeq>::end","value":"fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2153},"children":[],"decl_id":{"krate":20,"index":2158},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62880,"byte_end":62897,"line_start":308,"line_end":308,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63123,"byte_end":63140,"line_start":319,"line_end":319,"column_start":8,"column_end":25},"name":"serialize_element","qualname":"<Compound as serde::ser::SerializeTuple>::serialize_element","value":"fn serialize_element<T>(&mut Self, &T) -> Result<(), Self::Error> where\nT: ?Sized + Serialize","parent":{"krate":20,"index":2159},"children":[],"decl_id":{"krate":20,"index":2162},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63106,"byte_end":63115,"line_start":318,"line_end":318,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63290,"byte_end":63293,"line_start":324,"line_end":324,"column_start":8,"column_end":11},"name":"end","qualname":"<Compound as serde::ser::SerializeTuple>::end","value":"fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2159},"children":[],"decl_id":{"krate":20,"index":2164},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63265,"byte_end":63282,"line_start":323,"line_end":323,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63514,"byte_end":63529,"line_start":334,"line_end":334,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"<Compound as serde::ser::SerializeTupleStruct>::serialize_field","value":"fn serialize_field<T>(&mut Self, &T) -> Result<(), Self::Error> where\nT: ?Sized + Serialize","parent":{"krate":20,"index":2165},"children":[],"decl_id":{"krate":20,"index":2168},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63497,"byte_end":63506,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63679,"byte_end":63682,"line_start":339,"line_end":339,"column_start":8,"column_end":11},"name":"end","qualname":"<Compound as serde::ser::SerializeTupleStruct>::end","value":"fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2165},"children":[],"decl_id":{"krate":20,"index":2170},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63654,"byte_end":63671,"line_start":338,"line_end":338,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63898,"byte_end":63913,"line_start":349,"line_end":349,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"<Compound as serde::ser::SerializeStruct>::serialize_field","value":"fn serialize_field<T>(&mut Self, &'static str, &T) -> Result<(), Self::Error>\nwhere T: ?Sized + Serialize","parent":{"krate":20,"index":2188},"children":[],"decl_id":{"krate":20,"index":2191},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63881,"byte_end":63890,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":64112,"byte_end":64115,"line_start":356,"line_end":356,"column_start":8,"column_end":11},"name":"end","qualname":"<Compound as serde::ser::SerializeStruct>::end","value":"fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2188},"children":[],"decl_id":{"krate":20,"index":2194},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":64087,"byte_end":64104,"line_start":355,"line_end":355,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":64337,"byte_end":64352,"line_start":366,"line_end":366,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"<Compound as serde::ser::SerializeTupleVariant>::serialize_field","value":"fn serialize_field<T>(&mut Self, &T) -> Result<(), Self::Error> where\nT: ?Sized + Serialize","parent":{"krate":20,"index":2171},"children":[],"decl_id":{"krate":20,"index":2174},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":64320,"byte_end":64329,"line_start":365,"line_end":365,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":64502,"byte_end":64505,"line_start":371,"line_end":371,"column_start":8,"column_end":11},"name":"end","qualname":"<Compound as serde::ser::SerializeTupleVariant>::end","value":"fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2171},"children":[],"decl_id":{"krate":20,"index":2176},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":64477,"byte_end":64494,"line_start":370,"line_end":370,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":64714,"byte_end":64729,"line_start":380,"line_end":380,"column_start":8,"column_end":23},"name":"serialize_field","qualname":"<Compound as serde::ser::SerializeStructVariant>::serialize_field","value":"fn serialize_field<T>(&mut Self, &'static str, &T) -> Result<(), Self::Error>\nwhere T: ?Sized + Serialize","parent":{"krate":20,"index":2195},"children":[],"decl_id":{"krate":20,"index":2198},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":64928,"byte_end":64931,"line_start":387,"line_end":387,"column_start":8,"column_end":11},"name":"end","qualname":"<Compound as serde::ser::SerializeStructVariant>::end","value":"fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2195},"children":[],"decl_id":{"krate":20,"index":2201},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":64903,"byte_end":64920,"line_start":386,"line_end":386,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1380},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":66405,"byte_end":66431,"line_start":424,"line_end":424,"column_start":12,"column_end":38},"name":"MaybeUnknownLengthCompound","qualname":"::encode::MaybeUnknownLengthCompound","value":"MaybeUnknownLengthCompound {  }","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"decl_id":null,"docs":" Contains a `Serializer` for encoding elements of sequences and maps.","sig":null,"attributes":[{"value":"/ Contains a `Serializer` for encoding elements of sequences and maps.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":65552,"byte_end":65624,"line_start":408,"line_end":408,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":65625,"byte_end":65628,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":65629,"byte_end":65639,"line_start":410,"line_end":410,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":65640,"byte_end":65643,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ If , for example, a field inside a struct is tagged with `#serde(flatten)` the total number of","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":65644,"byte_end":65742,"line_start":412,"line_end":412,"column_start":1,"column_end":99}},{"value":"/ fields of this struct will be unknown to serde because flattened fields may have name clashes","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":65743,"byte_end":65840,"line_start":413,"line_end":413,"column_start":1,"column_end":98}},{"value":"/ and then will be overwritten. So, serde wants to serialize the struct as a map with an unknown","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":65841,"byte_end":65939,"line_start":414,"line_end":414,"column_start":1,"column_end":99}},{"value":"/ length.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":65940,"byte_end":65951,"line_start":415,"line_end":415,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":65952,"byte_end":65955,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ For the described case a `UnknownLengthCompound` is used to encode the elements. On `end()`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":65956,"byte_end":66051,"line_start":417,"line_end":417,"column_start":1,"column_end":96}},{"value":"/ the counted length and the encoded elements will be written to the `Serializer`. A caveat is,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":66052,"byte_end":66149,"line_start":418,"line_end":418,"column_start":1,"column_end":98}},{"value":"/ that structs that contain flattened fields arem always written as a map, even when compact","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":66150,"byte_end":66244,"line_start":419,"line_end":419,"column_start":1,"column_end":95}},{"value":"/ representaion is desired.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":66245,"byte_end":66274,"line_start":420,"line_end":420,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":66275,"byte_end":66278,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ Otherwise, if the length is known, the elements will be encoded directly by the `Serializer`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":66279,"byte_end":66376,"line_start":422,"line_end":422,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":66688,"byte_end":66705,"line_start":433,"line_end":433,"column_start":8,"column_end":25},"name":"serialize_element","qualname":"<MaybeUnknownLengthCompound as serde::ser::SerializeSeq>::serialize_element","value":"fn serialize_element<T>(&mut Self, &T) -> Result<(), Self::Error> where\nT: ?Sized + Serialize","parent":{"krate":20,"index":2153},"children":[],"decl_id":{"krate":20,"index":2156},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":67043,"byte_end":67046,"line_start":444,"line_end":444,"column_start":8,"column_end":11},"name":"end","qualname":"<MaybeUnknownLengthCompound as serde::ser::SerializeSeq>::end","value":"fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2153},"children":[],"decl_id":{"krate":20,"index":2158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":67519,"byte_end":67532,"line_start":458,"line_end":458,"column_start":8,"column_end":21},"name":"serialize_key","qualname":"<MaybeUnknownLengthCompound as serde::ser::SerializeMap>::serialize_key","value":"fn serialize_key<T>(&mut Self, &T) -> Result<(), Self::Error> where\nT: ?Sized + Serialize","parent":{"krate":20,"index":2177},"children":[],"decl_id":{"krate":20,"index":2180},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":67680,"byte_end":67695,"line_start":462,"line_end":462,"column_start":8,"column_end":23},"name":"serialize_value","qualname":"<MaybeUnknownLengthCompound as serde::ser::SerializeMap>::serialize_value","value":"fn serialize_value<T>(&mut Self, &T) -> Result<(), Self::Error> where\nT: ?Sized + Serialize","parent":{"krate":20,"index":2177},"children":[],"decl_id":{"krate":20,"index":2182},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":67847,"byte_end":67850,"line_start":466,"line_end":466,"column_start":8,"column_end":11},"name":"end","qualname":"<MaybeUnknownLengthCompound as serde::ser::SerializeMap>::end","value":"fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2177},"children":[],"decl_id":{"krate":20,"index":2187},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":68710,"byte_end":68727,"line_start":492,"line_end":492,"column_start":8,"column_end":25},"name":"is_human_readable","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::is_human_readable","value":"fn is_human_readable(&Self) -> bool","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2152},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":68790,"byte_end":68804,"line_start":496,"line_end":496,"column_start":8,"column_end":22},"name":"serialize_bool","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_bool","value":"fn serialize_bool(Self, bool) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2113},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":69008,"byte_end":69020,"line_start":501,"line_end":501,"column_start":8,"column_end":20},"name":"serialize_i8","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_i8","value":"fn serialize_i8(Self, i8) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2114},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":69120,"byte_end":69133,"line_start":505,"line_end":505,"column_start":8,"column_end":21},"name":"serialize_i16","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_i16","value":"fn serialize_i16(Self, i16) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2115},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":69234,"byte_end":69247,"line_start":509,"line_end":509,"column_start":8,"column_end":21},"name":"serialize_i32","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_i32","value":"fn serialize_i32(Self, i32) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2116},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":69348,"byte_end":69361,"line_start":513,"line_end":513,"column_start":8,"column_end":21},"name":"serialize_i64","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_i64","value":"fn serialize_i64(Self, i64) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2117},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":69486,"byte_end":69500,"line_start":518,"line_end":518,"column_start":8,"column_end":22},"name":"serialize_i128","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_i128","value":"fn serialize_i128(Self, i128) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":9532},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":69612,"byte_end":69624,"line_start":522,"line_end":522,"column_start":8,"column_end":20},"name":"serialize_u8","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_u8","value":"fn serialize_u8(Self, u8) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":69724,"byte_end":69737,"line_start":526,"line_end":526,"column_start":8,"column_end":21},"name":"serialize_u16","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_u16","value":"fn serialize_u16(Self, u16) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2119},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":69838,"byte_end":69851,"line_start":530,"line_end":530,"column_start":8,"column_end":21},"name":"serialize_u32","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_u32","value":"fn serialize_u32(Self, u32) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2120},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":69952,"byte_end":69965,"line_start":534,"line_end":534,"column_start":8,"column_end":21},"name":"serialize_u64","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_u64","value":"fn serialize_u64(Self, u64) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2121},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":70090,"byte_end":70104,"line_start":539,"line_end":539,"column_start":8,"column_end":22},"name":"serialize_u128","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_u128","value":"fn serialize_u128(Self, u128) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":9533},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":70216,"byte_end":70229,"line_start":543,"line_end":543,"column_start":8,"column_end":21},"name":"serialize_f32","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_f32","value":"fn serialize_f32(Self, f32) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2122},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":70353,"byte_end":70366,"line_start":548,"line_end":548,"column_start":8,"column_end":21},"name":"serialize_f64","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_f64","value":"fn serialize_f64(Self, f64) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2123},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":70490,"byte_end":70504,"line_start":553,"line_end":553,"column_start":8,"column_end":22},"name":"serialize_char","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_char","value":"fn serialize_char(Self, char) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2124},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":70709,"byte_end":70722,"line_start":559,"line_end":559,"column_start":8,"column_end":21},"name":"serialize_str","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_str","value":"fn serialize_str(Self, &str) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2125},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":70847,"byte_end":70862,"line_start":564,"line_end":564,"column_start":8,"column_end":23},"name":"serialize_bytes","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_bytes","value":"fn serialize_bytes(Self, &[u8]) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2126},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":71137,"byte_end":71151,"line_start":571,"line_end":571,"column_start":8,"column_end":22},"name":"serialize_none","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_none","value":"fn serialize_none(Self) -> Result<(), Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2127},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":71231,"byte_end":71245,"line_start":575,"line_end":575,"column_start":8,"column_end":22},"name":"serialize_some","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_some","value":"fn serialize_some<T>(Self, &T) -> Result<(), Self::Error> where T: ?Sized +\nserde::Serialize","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2128},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":71358,"byte_end":71372,"line_start":579,"line_end":579,"column_start":8,"column_end":22},"name":"serialize_unit","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_unit","value":"fn serialize_unit(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2130},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":71563,"byte_end":71584,"line_start":584,"line_end":584,"column_start":8,"column_end":29},"name":"serialize_unit_struct","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_unit_struct","value":"fn serialize_unit_struct(Self, &'static str) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2131},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":71727,"byte_end":71749,"line_start":589,"line_end":589,"column_start":8,"column_end":30},"name":"serialize_unit_variant","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_unit_variant","value":"fn serialize_unit_variant(Self, &str, u32, &'static str)\n-> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2132},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":71914,"byte_end":71938,"line_start":595,"line_end":595,"column_start":8,"column_end":32},"name":"serialize_newtype_struct","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_newtype_struct","value":"fn serialize_newtype_struct<T>(Self, &'static str, &T)\n-> Result<(), Self::Error> where T: ?Sized + serde::Serialize","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":72308,"byte_end":72333,"line_start":607,"line_end":607,"column_start":8,"column_end":33},"name":"serialize_newtype_variant","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_newtype_variant","value":"fn serialize_newtype_variant<T>(Self, &'static str, u32, &'static str, &T)\n-> Result<Self::Ok, Self::Error> where T: ?Sized + serde::Serialize","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2135},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":72705,"byte_end":72718,"line_start":614,"line_end":614,"column_start":8,"column_end":21},"name":"serialize_seq","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_seq","value":"fn serialize_seq(Self, Option<usize>) -> Result<Self::SerializeSeq, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2137},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":72914,"byte_end":72929,"line_start":619,"line_end":619,"column_start":8,"column_end":23},"name":"serialize_tuple","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_tuple","value":"fn serialize_tuple(Self, usize) -> Result<Self::SerializeTuple, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2138},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":73094,"byte_end":73116,"line_start":625,"line_end":625,"column_start":8,"column_end":30},"name":"serialize_tuple_struct","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_tuple_struct","value":"fn serialize_tuple_struct(Self, &'static str, usize)\n-> Result<Self::SerializeTupleStruct, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2139},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":73320,"byte_end":73343,"line_start":633,"line_end":633,"column_start":8,"column_end":31},"name":"serialize_tuple_variant","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_tuple_variant","value":"fn serialize_tuple_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeTupleVariant, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2140},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":73735,"byte_end":73748,"line_start":642,"line_end":642,"column_start":8,"column_end":21},"name":"serialize_map","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_map","value":"fn serialize_map(Self, Option<usize>) -> Result<Self::SerializeMap, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2141},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":73915,"byte_end":73931,"line_start":646,"line_end":646,"column_start":8,"column_end":24},"name":"serialize_struct","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_struct","value":"fn serialize_struct(Self, &'static str, usize)\n-> Result<Self::SerializeStruct, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2142},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":74110,"byte_end":74134,"line_start":653,"line_end":653,"column_start":8,"column_end":32},"name":"serialize_struct_variant","qualname":"<&'a mut Serializer<W, C> as serde::Serializer>::serialize_struct_variant","value":"fn serialize_struct_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeStructVariant, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2143},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":75115,"byte_end":75127,"line_start":676,"line_end":676,"column_start":8,"column_end":20},"name":"serialize_i8","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_i8","value":"fn serialize_i8(Self, i8) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2114},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":75098,"byte_end":75107,"line_start":675,"line_end":675,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":75411,"byte_end":75426,"line_start":686,"line_end":686,"column_start":8,"column_end":23},"name":"serialize_bytes","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_bytes","value":"fn serialize_bytes(Self, &[u8]) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2126},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":75394,"byte_end":75403,"line_start":685,"line_end":685,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":75941,"byte_end":75955,"line_start":702,"line_end":702,"column_start":8,"column_end":22},"name":"serialize_bool","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_bool","value":"fn serialize_bool(Self, bool) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2113},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":75924,"byte_end":75933,"line_start":701,"line_end":701,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":76116,"byte_end":76129,"line_start":707,"line_end":707,"column_start":8,"column_end":21},"name":"serialize_i16","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_i16","value":"fn serialize_i16(Self, i16) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2115},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":76099,"byte_end":76108,"line_start":706,"line_end":706,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":76288,"byte_end":76301,"line_start":712,"line_end":712,"column_start":8,"column_end":21},"name":"serialize_i32","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_i32","value":"fn serialize_i32(Self, i32) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2116},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":76271,"byte_end":76280,"line_start":711,"line_end":711,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":76460,"byte_end":76473,"line_start":717,"line_end":717,"column_start":8,"column_end":21},"name":"serialize_i64","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_i64","value":"fn serialize_i64(Self, i64) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2117},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":76443,"byte_end":76452,"line_start":716,"line_end":716,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":76632,"byte_end":76644,"line_start":722,"line_end":722,"column_start":8,"column_end":20},"name":"serialize_u8","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_u8","value":"fn serialize_u8(Self, u8) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2118},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":76615,"byte_end":76624,"line_start":721,"line_end":721,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":76801,"byte_end":76814,"line_start":727,"line_end":727,"column_start":8,"column_end":21},"name":"serialize_u16","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_u16","value":"fn serialize_u16(Self, u16) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2119},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":76784,"byte_end":76793,"line_start":726,"line_end":726,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":76973,"byte_end":76986,"line_start":732,"line_end":732,"column_start":8,"column_end":21},"name":"serialize_u32","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_u32","value":"fn serialize_u32(Self, u32) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2120},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":76956,"byte_end":76965,"line_start":731,"line_end":731,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":77145,"byte_end":77158,"line_start":737,"line_end":737,"column_start":8,"column_end":21},"name":"serialize_u64","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_u64","value":"fn serialize_u64(Self, u64) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2121},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":77128,"byte_end":77137,"line_start":736,"line_end":736,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":77317,"byte_end":77330,"line_start":742,"line_end":742,"column_start":8,"column_end":21},"name":"serialize_f32","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_f32","value":"fn serialize_f32(Self, f32) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2122},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":77300,"byte_end":77309,"line_start":741,"line_end":741,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":77489,"byte_end":77502,"line_start":747,"line_end":747,"column_start":8,"column_end":21},"name":"serialize_f64","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_f64","value":"fn serialize_f64(Self, f64) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2123},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":77472,"byte_end":77481,"line_start":746,"line_end":746,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":77661,"byte_end":77675,"line_start":752,"line_end":752,"column_start":8,"column_end":22},"name":"serialize_char","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_char","value":"fn serialize_char(Self, char) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2124},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":77644,"byte_end":77653,"line_start":751,"line_end":751,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":77836,"byte_end":77849,"line_start":757,"line_end":757,"column_start":8,"column_end":21},"name":"serialize_str","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_str","value":"fn serialize_str(Self, &str) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2125},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":77819,"byte_end":77828,"line_start":756,"line_end":756,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":78009,"byte_end":78023,"line_start":762,"line_end":762,"column_start":8,"column_end":22},"name":"serialize_unit","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_unit","value":"fn serialize_unit(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2130},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":77992,"byte_end":78001,"line_start":761,"line_end":761,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":78172,"byte_end":78193,"line_start":767,"line_end":767,"column_start":8,"column_end":29},"name":"serialize_unit_struct","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_unit_struct","value":"fn serialize_unit_struct(Self, &'static str) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2131},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":78155,"byte_end":78164,"line_start":766,"line_end":766,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":78370,"byte_end":78392,"line_start":772,"line_end":772,"column_start":8,"column_end":30},"name":"serialize_unit_variant","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_unit_variant","value":"fn serialize_unit_variant(Self, &'static str, u32, &'static str)\n-> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2132},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":78353,"byte_end":78362,"line_start":771,"line_end":771,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":78605,"byte_end":78629,"line_start":777,"line_end":777,"column_start":8,"column_end":32},"name":"serialize_newtype_struct","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_newtype_struct","value":"fn serialize_newtype_struct<T>(Self, &'static str, &T)\n-> Result<Self::Ok, Self::Error> where T: ?Sized, T: Serialize","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2133},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":78588,"byte_end":78597,"line_start":776,"line_end":776,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":78849,"byte_end":78874,"line_start":783,"line_end":783,"column_start":8,"column_end":33},"name":"serialize_newtype_variant","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_newtype_variant","value":"fn serialize_newtype_variant<T>(Self, &'static str, u32, &'static str, &T)\n-> Result<Self::Ok, Self::Error> where T: ?Sized, T: Serialize","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2135},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":79144,"byte_end":79158,"line_start":790,"line_end":790,"column_start":8,"column_end":22},"name":"serialize_none","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_none","value":"fn serialize_none(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2127},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":79127,"byte_end":79136,"line_start":789,"line_end":789,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":79307,"byte_end":79321,"line_start":795,"line_end":795,"column_start":8,"column_end":22},"name":"serialize_some","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_some","value":"fn serialize_some<T>(Self, &T) -> Result<Self::Ok, Self::Error> where\nT: ?Sized, T: Serialize","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2128},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":79290,"byte_end":79299,"line_start":794,"line_end":794,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":79510,"byte_end":79523,"line_start":801,"line_end":801,"column_start":8,"column_end":21},"name":"serialize_seq","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_seq","value":"fn serialize_seq(Self, Option<usize>)\n-> Result<Self::SerializeSeq, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2137},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":79688,"byte_end":79703,"line_start":805,"line_end":805,"column_start":8,"column_end":23},"name":"serialize_tuple","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_tuple","value":"fn serialize_tuple(Self, usize) -> Result<Self::SerializeTuple, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2138},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":79858,"byte_end":79880,"line_start":809,"line_end":809,"column_start":8,"column_end":30},"name":"serialize_tuple_struct","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_tuple_struct","value":"fn serialize_tuple_struct(Self, &'static str, usize)\n-> Result<Self::SerializeTupleStruct, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2139},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":80069,"byte_end":80092,"line_start":813,"line_end":813,"column_start":8,"column_end":31},"name":"serialize_tuple_variant","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_tuple_variant","value":"fn serialize_tuple_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeTupleVariant, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2140},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":80318,"byte_end":80331,"line_start":817,"line_end":817,"column_start":8,"column_end":21},"name":"serialize_map","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_map","value":"fn serialize_map(Self, Option<usize>) -> Result<Self::SerializeMap, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2141},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":80490,"byte_end":80506,"line_start":821,"line_end":821,"column_start":8,"column_end":24},"name":"serialize_struct","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_struct","value":"fn serialize_struct(Self, &'static str, usize)\n-> Result<Self::SerializeStruct, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2142},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":80684,"byte_end":80708,"line_start":825,"line_end":825,"column_start":8,"column_end":32},"name":"serialize_struct_variant","qualname":"<&'_ mut ExtFieldSerializer as serde::Serializer>::serialize_struct_variant","value":"fn serialize_struct_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeStructVariant, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2143},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":81489,"byte_end":81504,"line_start":843,"line_end":843,"column_start":8,"column_end":23},"name":"serialize_bytes","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_bytes","value":"fn serialize_bytes(Self, &[u8]) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2126},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":81474,"byte_end":81481,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":81656,"byte_end":81670,"line_start":848,"line_end":848,"column_start":8,"column_end":22},"name":"serialize_bool","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_bool","value":"fn serialize_bool(Self, bool) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2113},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":81641,"byte_end":81648,"line_start":847,"line_end":847,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":81820,"byte_end":81832,"line_start":853,"line_end":853,"column_start":8,"column_end":20},"name":"serialize_i8","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_i8","value":"fn serialize_i8(Self, i8) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2114},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":81805,"byte_end":81812,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":81980,"byte_end":81993,"line_start":858,"line_end":858,"column_start":8,"column_end":21},"name":"serialize_i16","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_i16","value":"fn serialize_i16(Self, i16) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2115},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":81965,"byte_end":81972,"line_start":857,"line_end":857,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":82141,"byte_end":82154,"line_start":863,"line_end":863,"column_start":8,"column_end":21},"name":"serialize_i32","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_i32","value":"fn serialize_i32(Self, i32) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2116},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":82126,"byte_end":82133,"line_start":862,"line_end":862,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":82302,"byte_end":82315,"line_start":868,"line_end":868,"column_start":8,"column_end":21},"name":"serialize_i64","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_i64","value":"fn serialize_i64(Self, i64) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2117},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":82287,"byte_end":82294,"line_start":867,"line_end":867,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":82463,"byte_end":82475,"line_start":873,"line_end":873,"column_start":8,"column_end":20},"name":"serialize_u8","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_u8","value":"fn serialize_u8(Self, u8) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2118},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":82448,"byte_end":82455,"line_start":872,"line_end":872,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":82621,"byte_end":82634,"line_start":878,"line_end":878,"column_start":8,"column_end":21},"name":"serialize_u16","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_u16","value":"fn serialize_u16(Self, u16) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2119},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":82606,"byte_end":82613,"line_start":877,"line_end":877,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":82782,"byte_end":82795,"line_start":883,"line_end":883,"column_start":8,"column_end":21},"name":"serialize_u32","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_u32","value":"fn serialize_u32(Self, u32) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2120},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":82767,"byte_end":82774,"line_start":882,"line_end":882,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":82943,"byte_end":82956,"line_start":888,"line_end":888,"column_start":8,"column_end":21},"name":"serialize_u64","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_u64","value":"fn serialize_u64(Self, u64) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2121},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":82928,"byte_end":82935,"line_start":887,"line_end":887,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":83104,"byte_end":83117,"line_start":893,"line_end":893,"column_start":8,"column_end":21},"name":"serialize_f32","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_f32","value":"fn serialize_f32(Self, f32) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2122},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":83089,"byte_end":83096,"line_start":892,"line_end":892,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":83265,"byte_end":83278,"line_start":898,"line_end":898,"column_start":8,"column_end":21},"name":"serialize_f64","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_f64","value":"fn serialize_f64(Self, f64) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2123},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":83250,"byte_end":83257,"line_start":897,"line_end":897,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":83426,"byte_end":83440,"line_start":903,"line_end":903,"column_start":8,"column_end":22},"name":"serialize_char","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_char","value":"fn serialize_char(Self, char) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2124},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":83411,"byte_end":83418,"line_start":902,"line_end":902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":83590,"byte_end":83603,"line_start":908,"line_end":908,"column_start":8,"column_end":21},"name":"serialize_str","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_str","value":"fn serialize_str(Self, &str) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2125},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":83575,"byte_end":83582,"line_start":907,"line_end":907,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":83752,"byte_end":83766,"line_start":913,"line_end":913,"column_start":8,"column_end":22},"name":"serialize_unit","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_unit","value":"fn serialize_unit(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2130},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":83737,"byte_end":83744,"line_start":912,"line_end":912,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":83904,"byte_end":83925,"line_start":918,"line_end":918,"column_start":8,"column_end":29},"name":"serialize_unit_struct","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_unit_struct","value":"fn serialize_unit_struct(Self, &'static str) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2131},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":83889,"byte_end":83896,"line_start":917,"line_end":917,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":84091,"byte_end":84113,"line_start":923,"line_end":923,"column_start":8,"column_end":30},"name":"serialize_unit_variant","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_unit_variant","value":"fn serialize_unit_variant(Self, &'static str, u32, &'static str)\n-> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2132},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":84076,"byte_end":84083,"line_start":922,"line_end":922,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":84315,"byte_end":84339,"line_start":928,"line_end":928,"column_start":8,"column_end":32},"name":"serialize_newtype_struct","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_newtype_struct","value":"fn serialize_newtype_struct<T>(Self, &'static str, &T)\n-> Result<Self::Ok, Self::Error> where T: ?Sized, T: Serialize","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2133},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":84300,"byte_end":84307,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":84562,"byte_end":84587,"line_start":935,"line_end":935,"column_start":8,"column_end":33},"name":"serialize_newtype_variant","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_newtype_variant","value":"fn serialize_newtype_variant<T>(Self, &'static str, u32, &'static str, &T)\n-> Result<Self::Ok, Self::Error> where T: ?Sized, T: Serialize","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2135},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":84547,"byte_end":84554,"line_start":934,"line_end":934,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":84846,"byte_end":84860,"line_start":942,"line_end":942,"column_start":8,"column_end":22},"name":"serialize_none","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_none","value":"fn serialize_none(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2127},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":84831,"byte_end":84838,"line_start":941,"line_end":941,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":84998,"byte_end":85012,"line_start":947,"line_end":947,"column_start":8,"column_end":22},"name":"serialize_some","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_some","value":"fn serialize_some<T>(Self, &T) -> Result<Self::Ok, Self::Error> where\nT: ?Sized, T: Serialize","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2128},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":84983,"byte_end":84990,"line_start":946,"line_end":946,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":85204,"byte_end":85217,"line_start":954,"line_end":954,"column_start":8,"column_end":21},"name":"serialize_seq","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_seq","value":"fn serialize_seq(Self, Option<usize>)\n-> Result<Self::SerializeSeq, Self::Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2137},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":85189,"byte_end":85196,"line_start":953,"line_end":953,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":85373,"byte_end":85388,"line_start":958,"line_end":958,"column_start":8,"column_end":23},"name":"serialize_tuple","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_tuple","value":"fn serialize_tuple(Self, usize) -> Result<Self::SerializeTuple, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2138},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":85556,"byte_end":85578,"line_start":966,"line_end":966,"column_start":8,"column_end":30},"name":"serialize_tuple_struct","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_tuple_struct","value":"fn serialize_tuple_struct(Self, &'static str, usize)\n-> Result<Self::SerializeTupleStruct, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2139},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":85541,"byte_end":85548,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":85770,"byte_end":85793,"line_start":971,"line_end":971,"column_start":8,"column_end":31},"name":"serialize_tuple_variant","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_tuple_variant","value":"fn serialize_tuple_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeTupleVariant, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2140},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":85755,"byte_end":85762,"line_start":970,"line_end":970,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":86022,"byte_end":86035,"line_start":976,"line_end":976,"column_start":8,"column_end":21},"name":"serialize_map","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_map","value":"fn serialize_map(Self, Option<usize>) -> Result<Self::SerializeMap, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2141},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":86007,"byte_end":86014,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":86197,"byte_end":86213,"line_start":981,"line_end":981,"column_start":8,"column_end":24},"name":"serialize_struct","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_struct","value":"fn serialize_struct(Self, &'static str, usize)\n-> Result<Self::SerializeStruct, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2142},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":86182,"byte_end":86189,"line_start":980,"line_end":980,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":86394,"byte_end":86418,"line_start":986,"line_end":986,"column_start":8,"column_end":32},"name":"serialize_struct_variant","qualname":"<&'_ mut ExtSerializer as serde::Serializer>::serialize_struct_variant","value":"fn serialize_struct_variant(Self, &'static str, u32, &'static str, usize)\n-> Result<Self::SerializeStructVariant, Error>","parent":{"krate":20,"index":2103},"children":[],"decl_id":{"krate":20,"index":2143},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":86379,"byte_end":86386,"line_start":985,"line_end":985,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":86767,"byte_end":86784,"line_start":996,"line_end":996,"column_start":8,"column_end":25},"name":"serialize_element","qualname":"<&'_ mut ExtSerializer as serde::ser::SerializeTuple>::serialize_element","value":"fn serialize_element<T>(&mut Self, &T) -> Result<(), Self::Error> where\nT: ?Sized + Serialize","parent":{"krate":20,"index":2159},"children":[],"decl_id":{"krate":20,"index":2162},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":86750,"byte_end":86759,"line_start":995,"line_end":995,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":86940,"byte_end":86943,"line_start":1001,"line_end":1001,"column_start":8,"column_end":11},"name":"end","qualname":"<&'_ mut ExtSerializer as serde::ser::SerializeTuple>::end","value":"fn end(Self) -> Result<Self::Ok, Self::Error>","parent":{"krate":20,"index":2159},"children":[],"decl_id":{"krate":20,"index":2164},"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":86915,"byte_end":86932,"line_start":1000,"line_end":1000,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":923},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88177,"byte_end":88182,"line_start":1050,"line_end":1050,"column_start":8,"column_end":13},"name":"write","qualname":"::encode::write","value":"fn write<W, T>(&mut W, &T) -> Result<(), Error> where W: Write + ?Sized,\nT: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as MessagePack into the I/O stream.\n This function uses compact representation - structures as arrays","sig":null,"attributes":[{"value":"/ Serialize the given data structure as MessagePack into the I/O stream.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":87929,"byte_end":88003,"line_start":1045,"line_end":1045,"column_start":1,"column_end":75}},{"value":"/ This function uses compact representation - structures as arrays","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88004,"byte_end":88072,"line_start":1046,"line_end":1046,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88073,"byte_end":88076,"line_start":1047,"line_end":1047,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to fail.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88077,"byte_end":88159,"line_start":1048,"line_end":1048,"column_start":1,"column_end":83}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88160,"byte_end":88169,"line_start":1049,"line_end":1049,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":926},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88552,"byte_end":88563,"line_start":1062,"line_end":1062,"column_start":8,"column_end":19},"name":"write_named","qualname":"::encode::write_named","value":"fn write_named<W, T>(&mut W, &T) -> Result<(), Error> where W: Write + ?Sized,\nT: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as MessagePack into the I/O stream.\n This function serializes structures as maps","sig":null,"attributes":[{"value":"/ Serialize the given data structure as MessagePack into the I/O stream.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88335,"byte_end":88409,"line_start":1058,"line_end":1058,"column_start":1,"column_end":75}},{"value":"/ This function serializes structures as maps","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88410,"byte_end":88457,"line_start":1059,"line_end":1059,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88458,"byte_end":88461,"line_start":1060,"line_end":1060,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to fail.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88462,"byte_end":88544,"line_start":1061,"line_end":1061,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":929},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":89006,"byte_end":89012,"line_start":1076,"line_end":1076,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::encode::to_vec","value":"fn to_vec<T>(&T) -> Result<Vec<u8>, Error> where T: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a MessagePack byte vector.\n This method uses compact representation, structs are serialized as arrays","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a MessagePack byte vector.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88755,"byte_end":88823,"line_start":1071,"line_end":1071,"column_start":1,"column_end":69}},{"value":"/ This method uses compact representation, structs are serialized as arrays","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88824,"byte_end":88901,"line_start":1072,"line_end":1072,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88902,"byte_end":88905,"line_start":1073,"line_end":1073,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to fail.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88906,"byte_end":88988,"line_start":1074,"line_end":1074,"column_start":1,"column_end":83}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":88989,"byte_end":88998,"line_start":1075,"line_end":1075,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":931},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":89403,"byte_end":89415,"line_start":1092,"line_end":1092,"column_start":8,"column_end":20},"name":"to_vec_named","qualname":"::encode::to_vec_named","value":"fn to_vec_named<T>(&T) -> Result<Vec<u8>, Error> where T: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Serializes data structure into byte vector as a map\n Resulting MessagePack message will contain field names","sig":null,"attributes":[{"value":"/ Serializes data structure into byte vector as a map","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":89167,"byte_end":89222,"line_start":1085,"line_end":1085,"column_start":1,"column_end":56}},{"value":"/ Resulting MessagePack message will contain field names","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":89223,"byte_end":89281,"line_start":1086,"line_end":1086,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":89282,"byte_end":89285,"line_start":1087,"line_end":1087,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":89286,"byte_end":89298,"line_start":1088,"line_end":1088,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":89299,"byte_end":89302,"line_start":1089,"line_end":1089,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to fail.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":89303,"byte_end":89385,"line_start":1090,"line_end":1090,"column_start":1,"column_end":83}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":89386,"byte_end":89395,"line_start":1091,"line_end":1091,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":933},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2671,"byte_end":2694,"line_start":95,"line_end":95,"column_start":11,"column_end":34},"name":"MSGPACK_EXT_STRUCT_NAME","qualname":"::MSGPACK_EXT_STRUCT_NAME","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Name of Serde newtype struct to Represent Msgpack's Ext\n Msgpack Ext: Ext(tag, binary)\n Serde data model: _ExtStruct((tag, binary))\n Example Serde impl for custom type:","sig":null,"attributes":[{"value":"/ Name of Serde newtype struct to Represent Msgpack's Ext","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2199,"byte_end":2258,"line_start":82,"line_end":82,"column_start":1,"column_end":60}},{"value":"/ Msgpack Ext: Ext(tag, binary)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2259,"byte_end":2292,"line_start":83,"line_end":83,"column_start":1,"column_end":34}},{"value":"/ Serde data model: _ExtStruct((tag, binary))","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2293,"byte_end":2340,"line_start":84,"line_end":84,"column_start":1,"column_end":48}},{"value":"/ Example Serde impl for custom type:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2341,"byte_end":2380,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2381,"byte_end":2384,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2385,"byte_end":2398,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/ #[derive(Debug, PartialEq, Serialize, Deserialize)]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2399,"byte_end":2454,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"/ #[serde(rename = \"_ExtStruct\")]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2455,"byte_end":2490,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/ struct ExtStruct((i8, serde_bytes::ByteBuf));","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2491,"byte_end":2540,"line_start":90,"line_end":90,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2541,"byte_end":2544,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ test_round(ExtStruct((2, serde_bytes::ByteBuf::from(vec![5]))),","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2545,"byte_end":2612,"line_start":92,"line_end":92,"column_start":1,"column_end":68}},{"value":"/            Value::Ext(2, vec![5]));","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2613,"byte_end":2652,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2653,"byte_end":2660,"line_start":94,"line_end":94,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1391},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2978,"byte_end":2981,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"Raw","qualname":"::Raw","value":"Raw {  }","parent":null,"children":[{"krate":0,"index":1392}],"decl_id":null,"docs":" Helper that allows both to encode and decode strings no matter whether they contain valid or\n invalid UTF-8.","sig":null,"attributes":[{"value":"/ Helper that allows both to encode and decode strings no matter whether they contain valid or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2718,"byte_end":2814,"line_start":97,"line_end":97,"column_start":1,"column_end":97}},{"value":"/ invalid UTF-8.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2815,"byte_end":2833,"line_start":98,"line_end":98,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2834,"byte_end":2837,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Regardless of validity the UTF-8 content this type will always be serialized as a string.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2838,"byte_end":2931,"line_start":100,"line_end":100,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3122,"byte_end":3125,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Raw>::new","value":"fn new(String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Raw` from the UTF-8 string.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Raw` from the UTF-8 string.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3047,"byte_end":3096,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3101,"byte_end":3110,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3393,"byte_end":3402,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"from_utf8","qualname":"<Raw>::from_utf8","value":"fn from_utf8(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" DO NOT USE. See <https://github.com/3Hren/msgpack-rust/issues/305>\n","sig":null,"attributes":[{"value":"/ DO NOT USE. See <https://github.com/3Hren/msgpack-rust/issues/305>","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3184,"byte_end":3254,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"deprecated(note =\n\"This implementation is unsound and dangerous. See https://github.com/3Hren/msgpack-rust/issues/305\")","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3259,"byte_end":3381,"line_start":114,"line_end":114,"column_start":5,"column_end":127}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3762,"byte_end":3768,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"is_str","qualname":"<Raw>::is_str","value":"fn is_str(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the raw is valid UTF-8.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the raw is valid UTF-8.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3691,"byte_end":3736,"line_start":127,"line_end":127,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3741,"byte_end":3750,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3908,"byte_end":3914,"line_start":135,"line_end":135,"column_start":12,"column_end":18},"name":"is_err","qualname":"<Raw>::is_err","value":"fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the raw contains invalid UTF-8 sequence.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the raw contains invalid UTF-8 sequence.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3820,"byte_end":3882,"line_start":133,"line_end":133,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3887,"byte_end":3896,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4068,"byte_end":4074,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Raw>::as_str","value":"fn as_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the string reference if the raw is valid UTF-8, or else `None`.\n","sig":null,"attributes":[{"value":"/ Returns the string reference if the raw is valid UTF-8, or else `None`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3967,"byte_end":4042,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4047,"byte_end":4056,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4348,"byte_end":4354,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"as_err","qualname":"<Raw>::as_err","value":"fn as_err(&Self) -> Option<&Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `Utf8Error` if the raw contains invalid UTF-8 sequence, or\n else `None`.\n","sig":null,"attributes":[{"value":"/ Returns the underlying `Utf8Error` if the raw contains invalid UTF-8 sequence, or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4216,"byte_end":4301,"line_start":148,"line_end":148,"column_start":5,"column_end":90}},{"value":"/ else `None`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4306,"byte_end":4322,"line_start":149,"line_end":149,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4327,"byte_end":4336,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4576,"byte_end":4584,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Raw>::as_bytes","value":"fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a byte slice of this raw's contents.\n","sig":null,"attributes":[{"value":"/ Returns a byte slice of this raw's contents.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4502,"byte_end":4550,"line_start":158,"line_end":158,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4555,"byte_end":4564,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4840,"byte_end":4848,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"into_str","qualname":"<Raw>::into_str","value":"fn into_str(Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this object, yielding the string if the raw is valid UTF-8, or else `None`.\n","sig":null,"attributes":[{"value":"/ Consumes this object, yielding the string if the raw is valid UTF-8, or else `None`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4726,"byte_end":4814,"line_start":167,"line_end":167,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4819,"byte_end":4828,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4972,"byte_end":4982,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<Raw>::into_bytes","value":"fn into_bytes(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Raw` into a byte vector.\n","sig":null,"attributes":[{"value":"/ Converts a `Raw` into a byte vector.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4906,"byte_end":4946,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":4951,"byte_end":4960,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":5144,"byte_end":5153,"line_start":184,"line_end":184,"column_start":8,"column_end":17},"name":"serialize","qualname":"<Raw as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where\nS: serde::Serializer","parent":{"krate":20,"index":2100},"children":[],"decl_id":{"krate":20,"index":2101},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":6745,"byte_end":6756,"line_start":251,"line_end":251,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<Raw as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: de::Deserializer","parent":{"krate":20,"index":1559},"children":[],"decl_id":{"krate":20,"index":1561},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":6728,"byte_end":6737,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1401},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7152,"byte_end":7158,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"RawRef","qualname":"::RawRef","value":"RawRef {  }","parent":null,"children":[{"krate":0,"index":1403}],"decl_id":null,"docs":" Helper that allows both to encode and decode strings no matter whether they contain valid or\n invalid UTF-8.","sig":null,"attributes":[{"value":"/ Helper that allows both to encode and decode strings no matter whether they contain valid or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":6886,"byte_end":6982,"line_start":258,"line_end":258,"column_start":1,"column_end":97}},{"value":"/ invalid UTF-8.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":6983,"byte_end":7001,"line_start":259,"line_end":259,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7002,"byte_end":7005,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ Regardless of validity the UTF-8 content this type will always be serialized as a string.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7006,"byte_end":7099,"line_start":261,"line_end":261,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7319,"byte_end":7322,"line_start":270,"line_end":270,"column_start":12,"column_end":15},"name":"new","qualname":"<RawRef>::new","value":"fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `RawRef` from the UTF-8 string.\n","sig":null,"attributes":[{"value":"/ Constructs a new `RawRef` from the UTF-8 string.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7241,"byte_end":7293,"line_start":268,"line_end":268,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7298,"byte_end":7307,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7591,"byte_end":7600,"line_start":276,"line_end":276,"column_start":12,"column_end":21},"name":"from_utf8","qualname":"<RawRef>::from_utf8","value":"fn from_utf8(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" DO NOT USE. See <https://github.com/3Hren/msgpack-rust/issues/305>\n","sig":null,"attributes":[{"value":"/ DO NOT USE. See <https://github.com/3Hren/msgpack-rust/issues/305>","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7382,"byte_end":7452,"line_start":274,"line_end":274,"column_start":5,"column_end":75}},{"value":"deprecated(note =\n\"This implementation is unsound and dangerous. See https://github.com/3Hren/msgpack-rust/issues/305\")","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7457,"byte_end":7579,"line_start":275,"line_end":275,"column_start":5,"column_end":127}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7905,"byte_end":7911,"line_start":289,"line_end":289,"column_start":12,"column_end":18},"name":"is_str","qualname":"<RawRef>::is_str","value":"fn is_str(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the raw is valid UTF-8.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the raw is valid UTF-8.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7834,"byte_end":7879,"line_start":287,"line_end":287,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7884,"byte_end":7893,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8051,"byte_end":8057,"line_start":295,"line_end":295,"column_start":12,"column_end":18},"name":"is_err","qualname":"<RawRef>::is_err","value":"fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the raw contains invalid UTF-8 sequence.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the raw contains invalid UTF-8 sequence.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7963,"byte_end":8025,"line_start":293,"line_end":293,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8030,"byte_end":8039,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8211,"byte_end":8217,"line_start":301,"line_end":301,"column_start":12,"column_end":18},"name":"as_str","qualname":"<RawRef>::as_str","value":"fn as_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the string reference if the raw is valid UTF-8, or else `None`.\n","sig":null,"attributes":[{"value":"/ Returns the string reference if the raw is valid UTF-8, or else `None`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8110,"byte_end":8185,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8190,"byte_end":8199,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8478,"byte_end":8484,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"name":"as_err","qualname":"<RawRef>::as_err","value":"fn as_err(&Self) -> Option<&Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `Utf8Error` if the raw contains invalid UTF-8 sequence, or\n else `None`.\n","sig":null,"attributes":[{"value":"/ Returns the underlying `Utf8Error` if the raw contains invalid UTF-8 sequence, or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8346,"byte_end":8431,"line_start":308,"line_end":308,"column_start":5,"column_end":90}},{"value":"/ else `None`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8436,"byte_end":8452,"line_start":309,"line_end":309,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8457,"byte_end":8466,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8706,"byte_end":8714,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<RawRef>::as_bytes","value":"fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a byte slice of this raw's contents.\n","sig":null,"attributes":[{"value":"/ Returns a byte slice of this raw's contents.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8632,"byte_end":8680,"line_start":318,"line_end":318,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8685,"byte_end":8694,"line_start":319,"line_end":319,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8894,"byte_end":8903,"line_start":329,"line_end":329,"column_start":8,"column_end":17},"name":"serialize","qualname":"<RawRef as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where\nS: serde::Serializer","parent":{"krate":20,"index":2100},"children":[],"decl_id":{"krate":20,"index":2101},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":10042,"byte_end":10053,"line_start":376,"line_end":376,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<RawRef as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: de::Deserializer","parent":{"krate":20,"index":1559},"children":[],"decl_id":{"krate":20,"index":1561},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":10025,"byte_end":10034,"line_start":375,"line_end":375,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":10694,"byte_end":10695,"line_start":13,"line_end":13,"column_start":56,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12521,"byte_end":12534,"line_start":65,"line_end":65,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":113},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13950,"byte_end":13965,"line_start":115,"line_end":115,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":14206,"byte_end":14221,"line_start":123,"line_end":123,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":129},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":15446,"byte_end":15463,"line_start":171,"line_end":171,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":15708,"byte_end":15725,"line_start":179,"line_end":179,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":16947,"byte_end":16966,"line_start":227,"line_end":227,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":17200,"byte_end":17219,"line_start":235,"line_end":235,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18409,"byte_end":18421,"line_start":282,"line_end":282,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18656,"byte_end":18668,"line_start":290,"line_end":290,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21661,"byte_end":21666,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":22238,"byte_end":22243,"line_start":80,"line_end":80,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":22367,"byte_end":22372,"line_start":87,"line_end":87,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":23474,"byte_end":23479,"line_start":110,"line_end":110,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":23670,"byte_end":23675,"line_start":119,"line_end":119,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":23798,"byte_end":23803,"line_start":126,"line_end":126,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":24181,"byte_end":24186,"line_start":137,"line_end":137,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":24648,"byte_end":24653,"line_start":149,"line_end":149,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":25257,"byte_end":25262,"line_start":162,"line_end":162,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":25701,"byte_end":25713,"line_start":183,"line_end":183,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":26236,"byte_end":26248,"line_start":202,"line_end":202,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":26643,"byte_end":26655,"line_start":216,"line_end":216,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27176,"byte_end":27188,"line_start":236,"line_end":236,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28447,"byte_end":28459,"line_start":270,"line_end":270,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28685,"byte_end":28697,"line_start":278,"line_end":278,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":29270,"byte_end":29282,"line_start":300,"line_end":300,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":32572,"byte_end":32587,"line_start":407,"line_end":407,"column_start":60,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":32913,"byte_end":32928,"line_start":418,"line_end":418,"column_start":86,"column_end":101},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1158},{"krate":0,"index":1160},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":33464,"byte_end":33479,"line_start":435,"line_end":435,"column_start":83,"column_end":98},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":43623,"byte_end":43632,"line_start":695,"line_end":695,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":43882,"byte_end":43891,"line_start":705,"line_end":705,"column_start":83,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":44451,"byte_end":44460,"line_start":731,"line_end":731,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":44696,"byte_end":44705,"line_start":740,"line_end":740,"column_start":83,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":45441,"byte_end":45458,"line_start":772,"line_end":772,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":45652,"byte_end":45669,"line_start":779,"line_end":779,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":46055,"byte_end":46072,"line_start":795,"line_end":795,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":47079,"byte_end":47092,"line_start":842,"line_end":842,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":47278,"byte_end":47291,"line_start":848,"line_end":848,"column_start":79,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":47633,"byte_end":47646,"line_start":860,"line_end":860,"column_start":82,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49205,"byte_end":49215,"line_start":915,"line_end":915,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49399,"byte_end":49409,"line_start":925,"line_end":925,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49808,"byte_end":49818,"line_start":938,"line_end":938,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50199,"byte_end":50212,"line_start":957,"line_end":957,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50385,"byte_end":50398,"line_start":964,"line_end":964,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50590,"byte_end":50603,"line_start":974,"line_end":974,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50912,"byte_end":50925,"line_start":986,"line_end":986,"column_start":55,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54852,"byte_end":54857,"line_start":40,"line_end":40,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":55230,"byte_end":55235,"line_start":53,"line_end":53,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":55865,"byte_end":55870,"line_start":68,"line_end":68,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56004,"byte_end":56009,"line_start":75,"line_end":75,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57428,"byte_end":57438,"line_start":121,"line_end":121,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58194,"byte_end":58204,"line_start":152,"line_end":152,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58710,"byte_end":58720,"line_start":170,"line_end":170,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58919,"byte_end":58929,"line_start":178,"line_end":178,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":59494,"byte_end":59504,"line_start":196,"line_end":196,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61821,"byte_end":61831,"line_start":259,"line_end":259,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62653,"byte_end":62661,"line_start":299,"line_end":299,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63038,"byte_end":63046,"line_start":314,"line_end":314,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63429,"byte_end":63437,"line_start":329,"line_end":329,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63813,"byte_end":63821,"line_start":344,"line_end":344,"column_start":66,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":64252,"byte_end":64260,"line_start":361,"line_end":361,"column_start":72,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":64643,"byte_end":64651,"line_start":376,"line_end":376,"column_start":73,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":65324,"byte_end":65345,"line_start":399,"line_end":399,"column_start":58,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":66599,"byte_end":66625,"line_start":429,"line_end":429,"column_start":63,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":67430,"byte_end":67456,"line_start":454,"line_end":454,"column_start":63,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":87033,"byte_end":87046,"line_start":1006,"line_end":1006,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":87503,"byte_end":87521,"line_start":1025,"line_end":1025,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3037,"byte_end":3040,"line_start":106,"line_end":106,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":5131,"byte_end":5134,"line_start":183,"line_end":183,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":5619,"byte_end":5629,"line_start":201,"line_end":201,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":6718,"byte_end":6721,"line_start":249,"line_end":249,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7224,"byte_end":7230,"line_start":267,"line_end":267,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8874,"byte_end":8880,"line_start":328,"line_end":328,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":9359,"byte_end":9372,"line_start":346,"line_end":346,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":10007,"byte_end":10013,"line_start":374,"line_end":374,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2158,"byte_end":2164,"line_start":78,"line_end":78,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":57}},{"kind":"Mod","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2174,"byte_end":2180,"line_start":79,"line_end":79,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":181}},{"kind":"Mod","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":2190,"byte_end":2196,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":562}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":10618,"byte_end":10634,"line_start":11,"line_end":11,"column_start":37,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":93},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":10694,"byte_end":10695,"line_start":13,"line_end":13,"column_start":56,"column_end":57},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":77},"to":{"krate":0,"index":75}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":11099,"byte_end":11103,"line_start":24,"line_end":24,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3187},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":12521,"byte_end":12534,"line_start":65,"line_end":65,"column_start":35,"column_end":48},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":992},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":13950,"byte_end":13965,"line_start":115,"line_end":115,"column_start":9,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":14206,"byte_end":14221,"line_start":123,"line_end":123,"column_start":38,"column_end":53},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":999},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":15446,"byte_end":15463,"line_start":171,"line_end":171,"column_start":9,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":15708,"byte_end":15725,"line_start":179,"line_end":179,"column_start":38,"column_end":55},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1011},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":16947,"byte_end":16966,"line_start":227,"line_end":227,"column_start":9,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":17200,"byte_end":17219,"line_start":235,"line_end":235,"column_start":38,"column_end":57},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1023},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18409,"byte_end":18421,"line_start":282,"line_end":282,"column_start":9,"column_end":21},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/config.rs","byte_start":18656,"byte_end":18668,"line_start":290,"line_end":290,"column_start":38,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1035},"to":{"krate":0,"index":93}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":21661,"byte_end":21666,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1047},"to":{"krate":1,"index":2565}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":22238,"byte_end":22243,"line_start":80,"line_end":80,"column_start":20,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1047},"to":{"krate":20,"index":8914}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":22367,"byte_end":22372,"line_start":87,"line_end":87,"column_start":18,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1047},"to":{"krate":2,"index":10023}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":23474,"byte_end":23479,"line_start":110,"line_end":110,"column_start":32,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1047},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":23670,"byte_end":23675,"line_start":119,"line_end":119,"column_start":26,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1047},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":23798,"byte_end":23803,"line_start":126,"line_end":126,"column_start":31,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1047},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":24181,"byte_end":24186,"line_start":137,"line_end":137,"column_start":34,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1047},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":24648,"byte_end":24653,"line_start":149,"line_end":149,"column_start":42,"column_end":47},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1047},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":25257,"byte_end":25262,"line_start":162,"line_end":162,"column_start":32,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1047},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":25701,"byte_end":25713,"line_start":183,"line_end":183,"column_start":18,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":26236,"byte_end":26248,"line_start":202,"line_end":202,"column_start":15,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":26643,"byte_end":26655,"line_start":216,"line_end":216,"column_start":18,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":27176,"byte_end":27188,"line_start":236,"line_end":236,"column_start":36,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28447,"byte_end":28459,"line_start":270,"line_end":270,"column_start":22,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":28685,"byte_end":28697,"line_start":278,"line_end":278,"column_start":14,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":29270,"byte_end":29282,"line_start":300,"line_end":300,"column_start":51,"column_end":63},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":32572,"byte_end":32587,"line_start":407,"line_end":407,"column_start":60,"column_end":75},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":32913,"byte_end":32928,"line_start":418,"line_end":418,"column_start":86,"column_end":101},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1095},"to":{"krate":20,"index":1581}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":33464,"byte_end":33479,"line_start":435,"line_end":435,"column_start":83,"column_end":98},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1095},"to":{"krate":20,"index":1701}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":43623,"byte_end":43632,"line_start":695,"line_end":695,"column_start":20,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":43882,"byte_end":43891,"line_start":705,"line_end":705,"column_start":83,"column_end":92},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":412},"to":{"krate":20,"index":1701}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":44451,"byte_end":44460,"line_start":731,"line_end":731,"column_start":20,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":44696,"byte_end":44705,"line_start":740,"line_end":740,"column_start":83,"column_end":92},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":432},"to":{"krate":20,"index":1719}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":45441,"byte_end":45458,"line_start":772,"line_end":772,"column_start":20,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":45652,"byte_end":45669,"line_start":779,"line_end":779,"column_start":9,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":454},"to":{"krate":20,"index":1757}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":46055,"byte_end":46072,"line_start":795,"line_end":795,"column_start":9,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":454},"to":{"krate":20,"index":1765}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":47079,"byte_end":47092,"line_start":842,"line_end":842,"column_start":20,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":47278,"byte_end":47291,"line_start":848,"line_end":848,"column_start":79,"column_end":92},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":486},"to":{"krate":20,"index":1757}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":47633,"byte_end":47646,"line_start":860,"line_end":860,"column_start":82,"column_end":95},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":486},"to":{"krate":20,"index":1765}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":48905,"byte_end":48909,"line_start":903,"line_end":903,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":4527},"to":{"krate":0,"index":518}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49205,"byte_end":49215,"line_start":915,"line_end":915,"column_start":15,"column_end":25},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49399,"byte_end":49409,"line_start":925,"line_end":925,"column_start":39,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1302},"to":{"krate":0,"index":518}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":49808,"byte_end":49818,"line_start":938,"line_end":938,"column_start":24,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1302},"to":{"krate":1,"index":4527}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50199,"byte_end":50212,"line_start":957,"line_end":957,"column_start":13,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50385,"byte_end":50398,"line_start":964,"line_end":964,"column_start":35,"column_end":48},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50590,"byte_end":50603,"line_start":974,"line_end":974,"column_start":44,"column_end":57},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1309},"to":{"krate":1,"index":4527}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/decode.rs","byte_start":50912,"byte_end":50925,"line_start":986,"line_end":986,"column_start":55,"column_end":68},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1309},"to":{"krate":0,"index":518}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":54852,"byte_end":54857,"line_start":40,"line_end":40,"column_start":23,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1318},"to":{"krate":1,"index":2565}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":55230,"byte_end":55235,"line_start":53,"line_end":53,"column_start":18,"column_end":23},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1318},"to":{"krate":2,"index":10023}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":55865,"byte_end":55870,"line_start":68,"line_end":68,"column_start":32,"column_end":37},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1318},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":56004,"byte_end":56009,"line_start":75,"line_end":75,"column_start":28,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1318},"to":{"krate":20,"index":9529}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":57428,"byte_end":57438,"line_start":121,"line_end":121,"column_start":19,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58194,"byte_end":58204,"line_start":152,"line_end":152,"column_start":16,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58710,"byte_end":58720,"line_start":170,"line_end":170,"column_start":28,"column_end":38},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":58919,"byte_end":58929,"line_start":178,"line_end":178,"column_start":46,"column_end":56},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":59494,"byte_end":59504,"line_start":196,"line_end":196,"column_start":19,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":61821,"byte_end":61831,"line_start":259,"line_end":259,"column_start":39,"column_end":49},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1334},"to":{"krate":0,"index":645}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":62653,"byte_end":62661,"line_start":299,"line_end":299,"column_start":63,"column_end":71},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1344},"to":{"krate":20,"index":2153}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63038,"byte_end":63046,"line_start":314,"line_end":314,"column_start":65,"column_end":73},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1344},"to":{"krate":20,"index":2159}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63429,"byte_end":63437,"line_start":329,"line_end":329,"column_start":71,"column_end":79},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1344},"to":{"krate":20,"index":2165}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":63813,"byte_end":63821,"line_start":344,"line_end":344,"column_start":66,"column_end":74},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1344},"to":{"krate":20,"index":2188}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":64252,"byte_end":64260,"line_start":361,"line_end":361,"column_start":72,"column_end":80},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1344},"to":{"krate":20,"index":2171}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":64643,"byte_end":64651,"line_start":376,"line_end":376,"column_start":73,"column_end":81},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1344},"to":{"krate":20,"index":2195}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":65324,"byte_end":65345,"line_start":399,"line_end":399,"column_start":58,"column_end":79},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":66599,"byte_end":66625,"line_start":429,"line_end":429,"column_start":63,"column_end":89},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1380},"to":{"krate":20,"index":2153}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":67430,"byte_end":67456,"line_start":454,"line_end":454,"column_start":63,"column_end":89},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1380},"to":{"krate":20,"index":2177}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":87033,"byte_end":87046,"line_start":1006,"line_end":1006,"column_start":25,"column_end":38},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/encode.rs","byte_start":87503,"byte_end":87521,"line_start":1025,"line_end":1025,"column_start":25,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":3037,"byte_end":3040,"line_start":106,"line_end":106,"column_start":6,"column_end":9},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":5131,"byte_end":5134,"line_start":183,"line_end":183,"column_start":20,"column_end":23},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1391},"to":{"krate":20,"index":2100}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":5619,"byte_end":5629,"line_start":201,"line_end":201,"column_start":32,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":947},"to":{"krate":20,"index":1645}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":6718,"byte_end":6721,"line_start":249,"line_end":249,"column_start":32,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1391},"to":{"krate":20,"index":1559}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":7224,"byte_end":7230,"line_start":267,"line_end":267,"column_start":10,"column_end":16},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":8874,"byte_end":8880,"line_start":328,"line_end":328,"column_start":24,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1401},"to":{"krate":20,"index":2100}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":9359,"byte_end":9372,"line_start":346,"line_end":346,"column_start":32,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":978},"to":{"krate":20,"index":1645}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-serde-1.1.0/src/lib.rs","byte_start":10007,"byte_end":10013,"line_start":374,"line_end":374,"column_start":32,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1401},"to":{"krate":20,"index":1559}}]}