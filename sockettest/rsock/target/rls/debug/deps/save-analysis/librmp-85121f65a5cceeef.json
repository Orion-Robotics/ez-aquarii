{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11","program":"/home/pythomancer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rmp","--edition=2018","/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=85121f65a5cceeef","-C","extra-filename=-85121f65a5cceeef","--out-dir","/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps","-L","dependency=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps","--extern","byteorder=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libbyteorder-19cac908f6232626.rmeta","--extern","num_traits=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libnum_traits-f60875c508f12322.rmeta","--extern","paste=/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/libpaste-85067c7f435fa569.so","--cap-lints","allow","--error-format=json","--sysroot","/home/pythomancer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/pythomancer/Documents/ez-aquarii/sockettest/rsock/target/rls/debug/deps/librmp-85121f65a5cceeef.rmeta"},"prelude":{"crate_id":{"name":"rmp","disambiguator":[1791596239868621461,0]},"crate_root":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src","external_crates":[{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17410308932696108380,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","num":2,"id":{"name":"core","disambiguator":[14414087034259949263,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13372101680896079740,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5118101865554607907,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8025854276978217217,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4385070015268585674,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9992538824178466914,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15270312766295648766,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[18385953104680678603,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9852578511365041000,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2269743475717416395,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17706006846336192414,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6383024135923770218,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[10215543262378548890,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[4195348899700366916,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[10100673089080813811,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[341892175500051738,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[141027009196343679,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[5788120405916140848,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","num":20,"id":{"name":"num_traits","disambiguator":[14151819688243967828,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","num":21,"id":{"name":"paste","disambiguator":[15175479538455062054,0]}},{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","num":22,"id":{"name":"byteorder","disambiguator":[15744533976623629838,0]}}],"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":0,"byte_end":5934,"line_start":1,"line_end":162,"column_start":1,"column_end":36}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":19},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6676,"byte_end":6684,"line_start":18,"line_end":18,"column_start":21,"column_end":29},"alias_span":null,"name":"read_f32","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":21},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6686,"byte_end":6694,"line_start":18,"line_end":18,"column_start":31,"column_end":39},"alias_span":null,"name":"read_f64","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":61},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6722,"byte_end":6735,"line_start":20,"line_end":20,"column_start":5,"column_end":18},"alias_span":null,"name":"read_ext_meta","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":37},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6737,"byte_end":6749,"line_start":20,"line_end":20,"column_start":20,"column_end":32},"alias_span":null,"name":"read_fixext1","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6751,"byte_end":6764,"line_start":20,"line_end":20,"column_start":34,"column_end":47},"alias_span":null,"name":"read_fixext16","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":39},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6766,"byte_end":6778,"line_start":20,"line_end":20,"column_start":49,"column_end":61},"alias_span":null,"name":"read_fixext2","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6780,"byte_end":6792,"line_start":20,"line_end":20,"column_start":63,"column_end":75},"alias_span":null,"name":"read_fixext4","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":49},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6794,"byte_end":6806,"line_start":20,"line_end":20,"column_start":77,"column_end":89},"alias_span":null,"name":"read_fixext8","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":700},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6808,"byte_end":6815,"line_start":20,"line_end":20,"column_start":91,"column_end":98},"alias_span":null,"name":"ExtMeta","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6841,"byte_end":6849,"line_start":22,"line_end":22,"column_start":22,"column_end":30},"alias_span":null,"name":"read_i16","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6851,"byte_end":6859,"line_start":22,"line_end":22,"column_start":32,"column_end":40},"alias_span":null,"name":"read_i32","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6861,"byte_end":6869,"line_start":22,"line_end":22,"column_start":42,"column_end":50},"alias_span":null,"name":"read_i64","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":79},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6871,"byte_end":6878,"line_start":22,"line_end":22,"column_start":52,"column_end":59},"alias_span":null,"name":"read_i8","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6880,"byte_end":6889,"line_start":22,"line_end":22,"column_start":61,"column_end":70},"alias_span":null,"name":"read_nfix","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":140},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7034,"byte_end":7042,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"alias_span":null,"name":"read_str","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":147},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7044,"byte_end":7063,"line_start":25,"line_end":25,"column_start":31,"column_end":50},"alias_span":null,"name":"read_str_from_slice","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7065,"byte_end":7077,"line_start":25,"line_end":25,"column_start":52,"column_end":64},"alias_span":null,"name":"read_str_len","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":146},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7079,"byte_end":7091,"line_start":25,"line_end":25,"column_start":66,"column_end":78},"alias_span":null,"name":"read_str_ref","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":709},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7093,"byte_end":7110,"line_start":25,"line_end":25,"column_start":80,"column_end":97},"alias_span":null,"name":"DecodeStringError","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":163},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7134,"byte_end":7143,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"alias_span":null,"name":"read_pfix","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7145,"byte_end":7153,"line_start":26,"line_end":26,"column_start":33,"column_end":41},"alias_span":null,"name":"read_u16","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7155,"byte_end":7163,"line_start":26,"line_end":26,"column_start":43,"column_end":51},"alias_span":null,"name":"read_u32","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7165,"byte_end":7173,"line_start":26,"line_end":26,"column_start":53,"column_end":61},"alias_span":null,"name":"read_u64","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7175,"byte_end":7182,"line_start":26,"line_end":26,"column_start":63,"column_end":70},"alias_span":null,"name":"read_u8","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":739},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7365,"byte_end":7370,"line_start":37,"line_end":37,"column_start":16,"column_end":21},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7432,"byte_end":7437,"line_start":41,"line_end":41,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50708,"byte_end":50717,"line_start":12,"line_end":12,"column_start":21,"column_end":30},"alias_span":null,"name":"write_bin","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":391},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50719,"byte_end":50732,"line_start":12,"line_end":12,"column_start":32,"column_end":45},"alias_span":null,"name":"write_bin_len","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":409},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50755,"byte_end":50764,"line_start":13,"line_end":13,"column_start":21,"column_end":30},"alias_span":null,"name":"write_f32","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":411},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50766,"byte_end":50775,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"write_f64","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":450},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50799,"byte_end":50808,"line_start":14,"line_end":14,"column_start":22,"column_end":31},"alias_span":null,"name":"write_i16","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":452},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50810,"byte_end":50819,"line_start":14,"line_end":14,"column_start":33,"column_end":42},"alias_span":null,"name":"write_i32","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":454},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50821,"byte_end":50830,"line_start":14,"line_end":14,"column_start":44,"column_end":53},"alias_span":null,"name":"write_i64","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50832,"byte_end":50840,"line_start":14,"line_end":14,"column_start":55,"column_end":63},"alias_span":null,"name":"write_i8","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":445},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50842,"byte_end":50852,"line_start":14,"line_end":14,"column_start":65,"column_end":75},"alias_span":null,"name":"write_nfix","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":456},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50854,"byte_end":50864,"line_start":14,"line_end":14,"column_start":77,"column_end":87},"alias_span":null,"name":"write_sint","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":474},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50887,"byte_end":50896,"line_start":15,"line_end":15,"column_start":21,"column_end":30},"alias_span":null,"name":"write_str","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":472},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50898,"byte_end":50911,"line_start":15,"line_end":15,"column_start":32,"column_end":45},"alias_span":null,"name":"write_str_len","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":491},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50935,"byte_end":50945,"line_start":16,"line_end":16,"column_start":22,"column_end":32},"alias_span":null,"name":"write_pfix","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":496},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50947,"byte_end":50956,"line_start":16,"line_end":16,"column_start":34,"column_end":43},"alias_span":null,"name":"write_u16","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":498},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50958,"byte_end":50967,"line_start":16,"line_end":16,"column_start":45,"column_end":54},"alias_span":null,"name":"write_u32","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":500},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50969,"byte_end":50978,"line_start":16,"line_end":16,"column_start":56,"column_end":65},"alias_span":null,"name":"write_u64","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":494},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50980,"byte_end":50988,"line_start":16,"line_end":16,"column_start":67,"column_end":75},"alias_span":null,"name":"write_u8","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50990,"byte_end":51000,"line_start":16,"line_end":16,"column_start":77,"column_end":87},"alias_span":null,"name":"write_uint","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":864},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51147,"byte_end":51154,"line_start":25,"line_end":25,"column_start":17,"column_end":24},"alias_span":null,"name":"ByteBuf","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51216,"byte_end":51221,"line_start":29,"line_end":29,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":929},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5796,"byte_end":5802,"line_start":159,"line_end":159,"column_start":24,"column_end":30},"alias_span":null,"name":"Marker","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":0,"byte_end":5934,"line_start":1,"line_end":162,"column_start":1,"column_end":36},"name":"","qualname":"::","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":375},{"krate":0,"index":680},{"krate":0,"index":691},{"krate":0,"index":696},{"krate":0,"index":699}],"decl_id":null,"docs":" # The Rust MessagePack Library","sig":null,"attributes":[{"value":"/ # The Rust MessagePack Library","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":0,"byte_end":34,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":35,"byte_end":38,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ RMP is a pure Rust [MessagePack](http://msgpack.org) implementation of an efficient binary","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":39,"byte_end":133,"line_start":3,"line_end":3,"column_start":1,"column_end":95}},{"value":"/ serialization format. This crate provides low-level core functionality, writers and readers for","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":134,"byte_end":233,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ primitive values with direct mapping between binary MessagePack format.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":234,"byte_end":309,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":310,"byte_end":313,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ **Warning** this library is still in rapid development and everything may change until 1.0","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":314,"byte_end":408,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ comes.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":409,"byte_end":419,"line_start":8,"line_end":8,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":420,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":424,"byte_end":436,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":437,"byte_end":440,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ To use `rmp`, first add this to your `Cargo.toml`:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":441,"byte_end":495,"line_start":12,"line_end":12,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":496,"byte_end":499,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":500,"byte_end":511,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ [dependencies.rmp]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":512,"byte_end":534,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/ rmp = \"^0.8\"","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":535,"byte_end":551,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":552,"byte_end":559,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":560,"byte_end":563,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Then, add this line to your crate root:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":564,"byte_end":607,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":608,"byte_end":611,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":612,"byte_end":623,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ extern crate rmp;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":624,"byte_end":645,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":646,"byte_end":653,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":654,"byte_end":657,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":658,"byte_end":673,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":674,"byte_end":677,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ - **Convenient API**","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":678,"byte_end":702,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":703,"byte_end":706,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/   RMP is designed to be lightweight and straightforward. There are low-level API, which gives you","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":707,"byte_end":808,"line_start":29,"line_end":29,"column_start":1,"column_end":102}},{"value":"/   full control on data encoding/decoding process and makes no heap allocations. On the other hand","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":809,"byte_end":910,"line_start":30,"line_end":30,"column_start":1,"column_end":102}},{"value":"/   there are high-level API, which provides you convenient interface using Rust standard library and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":911,"byte_end":1014,"line_start":31,"line_end":31,"column_start":1,"column_end":104}},{"value":"/   compiler reflection, allowing to encode/decode structures using `derive` attribute.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1015,"byte_end":1104,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ - **Zero-copy value decoding**","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1109,"byte_end":1143,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1144,"byte_end":1147,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/   RMP allows to decode bytes from a buffer in a zero-copy manner easily and blazingly fast, while Rust","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1148,"byte_end":1254,"line_start":36,"line_end":36,"column_start":1,"column_end":107}},{"value":"/   static checks guarantees that the data will be valid until buffer lives.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1255,"byte_end":1333,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1334,"byte_end":1337,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ - **Clear error handling**","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1338,"byte_end":1368,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1369,"byte_end":1372,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/   RMP's error system guarantees that you never receive an error enum with unreachable variant.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1373,"byte_end":1471,"line_start":41,"line_end":41,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1472,"byte_end":1475,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ - **Robust and tested**","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1476,"byte_end":1503,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1504,"byte_end":1507,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/   This project is developed using TDD and CI, so any found bugs will be fixed without breaking","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1508,"byte_end":1606,"line_start":45,"line_end":45,"column_start":1,"column_end":99}},{"value":"/   existing functionality.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1607,"byte_end":1636,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1637,"byte_end":1640,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ## Detailed","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1641,"byte_end":1656,"line_start":48,"line_end":48,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1657,"byte_end":1660,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ This crate represents the very basic functionality needed to work with MessagePack format.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1661,"byte_end":1755,"line_start":50,"line_end":50,"column_start":1,"column_end":95}},{"value":"/ Ideologically it is developed as a basis for building high-level abstractions.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1756,"byte_end":1838,"line_start":51,"line_end":51,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1839,"byte_end":1842,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Currently there are two large modules: encode and decode. More detail you can find in the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1843,"byte_end":1936,"line_start":53,"line_end":53,"column_start":1,"column_end":94}},{"value":"/ corresponding sections.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1937,"byte_end":1964,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1965,"byte_end":1968,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Formally every MessagePack message consists of some marker encapsulating a data type and the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":1969,"byte_end":2065,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ data itself. Sometimes there are no separate data chunk, for example for booleans. In these","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2066,"byte_end":2161,"line_start":57,"line_end":57,"column_start":1,"column_end":96}},{"value":"/ cases a marker contains the value. For example, the `true` value is encoded as `0xc3`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2162,"byte_end":2252,"line_start":58,"line_end":58,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2253,"byte_end":2256,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2257,"byte_end":2264,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2265,"byte_end":2294,"line_start":61,"line_end":61,"column_start":1,"column_end":30}},{"value":"/ rmp::encode::write_bool(&mut buf, true).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2295,"byte_end":2348,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2349,"byte_end":2352,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ assert_eq!([0xc3], buf[..]);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2353,"byte_end":2385,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2386,"byte_end":2393,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2394,"byte_end":2397,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Sometimes a single value can be encoded in multiple ways. For example a value of `42` can be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2398,"byte_end":2494,"line_start":67,"line_end":67,"column_start":1,"column_end":97}},{"value":"/ represented as: `[0x2a], [0xcc, 0x2a], [0xcd, 0x00, 0x2a]` and so on, and all of them are","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2495,"byte_end":2588,"line_start":68,"line_end":68,"column_start":1,"column_end":94}},{"value":"/ considered as valid representations. To allow fine-grained control over encoding such values","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2589,"byte_end":2685,"line_start":69,"line_end":69,"column_start":1,"column_end":97}},{"value":"/ the library provides direct mapping functions.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2686,"byte_end":2736,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2737,"byte_end":2740,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2741,"byte_end":2748,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ let mut bufs = vec![vec![]; 5];","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2749,"byte_end":2784,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2785,"byte_end":2788,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ rmp::encode::write_pfix(&mut bufs[0], 42).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2789,"byte_end":2844,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"/ rmp::encode::write_u8(&mut bufs[1], 42).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2845,"byte_end":2898,"line_start":76,"line_end":76,"column_start":1,"column_end":54}},{"value":"/ rmp::encode::write_u16(&mut bufs[2], 42).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2899,"byte_end":2953,"line_start":77,"line_end":77,"column_start":1,"column_end":55}},{"value":"/ rmp::encode::write_u32(&mut bufs[3], 42).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":2954,"byte_end":3008,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ rmp::encode::write_u64(&mut bufs[4], 42).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3009,"byte_end":3063,"line_start":79,"line_end":79,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3064,"byte_end":3067,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ assert_eq!([0x2a], bufs[0][..]);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3068,"byte_end":3104,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ assert_eq!([0xcc, 0x2a], bufs[1][..]);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3105,"byte_end":3147,"line_start":82,"line_end":82,"column_start":1,"column_end":43}},{"value":"/ assert_eq!([0xcd, 0x00, 0x2a], bufs[2][..]);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3148,"byte_end":3196,"line_start":83,"line_end":83,"column_start":1,"column_end":49}},{"value":"/ assert_eq!([0xce, 0x00, 0x00, 0x00, 0x2a], bufs[3][..]);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3197,"byte_end":3257,"line_start":84,"line_end":84,"column_start":1,"column_end":61}},{"value":"/ assert_eq!([0xcf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a], bufs[4][..]);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3258,"byte_end":3342,"line_start":85,"line_end":85,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3343,"byte_end":3350,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3351,"byte_end":3354,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ But they aren't planned to be widely used. Instead we often need to encode bytes compactly to","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3355,"byte_end":3452,"line_start":88,"line_end":88,"column_start":1,"column_end":98}},{"value":"/ save space. In these cases RMP provides functions that guarantee that for encoding the most","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3453,"byte_end":3548,"line_start":89,"line_end":89,"column_start":1,"column_end":96}},{"value":"/ compact representation will be chosen.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3549,"byte_end":3591,"line_start":90,"line_end":90,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3592,"byte_end":3595,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3596,"byte_end":3603,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3604,"byte_end":3633,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3634,"byte_end":3637,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ rmp::encode::write_sint(&mut buf, 300).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3638,"byte_end":3690,"line_start":95,"line_end":95,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3691,"byte_end":3694,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ assert_eq!([0xcd, 0x1, 0x2c], buf[..]);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3695,"byte_end":3738,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3739,"byte_end":3746,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3747,"byte_end":3750,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ On the other hand for deserialization it is not matter in which representation the value is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3751,"byte_end":3846,"line_start":100,"line_end":100,"column_start":1,"column_end":96}},{"value":"/ encoded - RMP deals with all of them.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3847,"byte_end":3888,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3889,"byte_end":3892,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Sometimes you know the exact type representation and want to enforce the deserialization process","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3893,"byte_end":3993,"line_start":103,"line_end":103,"column_start":1,"column_end":101}},{"value":"/ to make it strongly type safe.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":3994,"byte_end":4028,"line_start":104,"line_end":104,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4029,"byte_end":4032,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4033,"byte_end":4040,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ let buf = [0xcd, 0x1, 0x2c];","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4041,"byte_end":4073,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4074,"byte_end":4077,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(300, rmp::decode::read_u16(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4078,"byte_end":4145,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4146,"byte_end":4153,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4154,"byte_end":4157,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ However if you try to decode such bytearray as other integer type, for example `u32`, there will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4158,"byte_end":4258,"line_start":112,"line_end":112,"column_start":1,"column_end":101}},{"value":"/ be type mismatch error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4259,"byte_end":4286,"line_start":113,"line_end":113,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4287,"byte_end":4290,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4291,"byte_end":4298,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ let buf = [0xcd, 0x1, 0x2c];","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4299,"byte_end":4331,"line_start":116,"line_end":116,"column_start":1,"column_end":33}},{"value":"/ rmp::decode::read_u32(&mut &buf[..]).err().unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4332,"byte_end":4388,"line_start":117,"line_end":117,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4389,"byte_end":4396,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4397,"byte_end":4400,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ But sometimes all you want is just to encode an integer that *must* fit in the specified type","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4401,"byte_end":4498,"line_start":120,"line_end":120,"column_start":1,"column_end":98}},{"value":"/ no matter how it was encoded. RMP provides [`such`][read_int] function to ease integration with","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4499,"byte_end":4598,"line_start":121,"line_end":121,"column_start":1,"column_end":100}},{"value":"/ other MessagePack libraries.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4599,"byte_end":4631,"line_start":122,"line_end":122,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4632,"byte_end":4635,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4636,"byte_end":4643,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ let buf = [0xcd, 0x1, 0x2c];","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4644,"byte_end":4676,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4677,"byte_end":4680,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(300i16, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4681,"byte_end":4751,"line_start":127,"line_end":127,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(300i32, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4752,"byte_end":4822,"line_start":128,"line_end":128,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(300i64, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4823,"byte_end":4893,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(300u16, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4894,"byte_end":4964,"line_start":130,"line_end":130,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(300u32, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":4965,"byte_end":5035,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(300u64, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5036,"byte_end":5106,"line_start":132,"line_end":132,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5107,"byte_end":5114,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5115,"byte_end":5118,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## API","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5119,"byte_end":5129,"line_start":135,"line_end":135,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5130,"byte_end":5133,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Almost all API are represented as pure functions, which accepts a generic `Write` or `Read` and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5134,"byte_end":5233,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ the value to be encoded/decoded. For example let's do a round trip for π number.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5234,"byte_end":5319,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5320,"byte_end":5323,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5324,"byte_end":5331,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ let pi = std::f64::consts::PI;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5332,"byte_end":5366,"line_start":141,"line_end":141,"column_start":1,"column_end":35}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5367,"byte_end":5396,"line_start":142,"line_end":142,"column_start":1,"column_end":30}},{"value":"/ rmp::encode::write_f64(&mut buf, pi).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5397,"byte_end":5447,"line_start":143,"line_end":143,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5448,"byte_end":5451,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!([0xcb, 0x40, 0x9, 0x21, 0xfb, 0x54, 0x44, 0x2d, 0x18], buf[..]);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5452,"byte_end":5531,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(pi, rmp::decode::read_f64(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5532,"byte_end":5598,"line_start":146,"line_end":146,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5599,"byte_end":5606,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5607,"byte_end":5610,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ [read_int]: decode/fn.read_int.html","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5611,"byte_end":5650,"line_start":149,"line_end":149,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"decode","qualname":"::decode","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":23},{"krate":0,"index":63},{"krate":0,"index":87},{"krate":0,"index":149},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":317},{"krate":0,"index":325},{"krate":0,"index":807},{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":821},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":326},{"krate":0,"index":330},{"krate":0,"index":334},{"krate":0,"index":827},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":845},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":848},{"krate":0,"index":861},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373}],"decl_id":null,"docs":" Provides various functions and structs for MessagePack decoding.","sig":null,"attributes":[{"value":"/ Provides various functions and structs for MessagePack decoding.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":5936,"byte_end":6004,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6005,"byte_end":6008,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Most of the function defined in this module will silently handle interruption error (EINTR)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6009,"byte_end":6104,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ received from the given `Read` to be in consistent state with the `Write::write_all` method in","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6105,"byte_end":6203,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ the standard library.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6204,"byte_end":6229,"line_start":5,"line_end":5,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6230,"byte_end":6233,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Any other error would immediately interrupt the parsing process. If your reader can results in","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6234,"byte_end":6332,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"/ I/O error and simultaneously be a recoverable state (for example, when reading from","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6333,"byte_end":6420,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/ non-blocking socket and it returns EWOULDBLOCK) be sure that you buffer the data externally","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6421,"byte_end":6516,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ to avoid data loss (using `BufRead` readers with manual consuming or some other way).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":6517,"byte_end":6606,"line_start":10,"line_end":10,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23231,"byte_end":23239,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"read_f32","qualname":"::decode::dec::read_f32","value":"fn read_f32<R>(&mut R) -> Result<f32, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 5 bytes from the given reader and to decode them as `f32` value.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 5 bytes from the given reader and to decode them as `f32` value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":22617,"byte_end":22710,"line_start":4,"line_end":4,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":22711,"byte_end":22714,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The first byte should be the marker and the others should represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":22715,"byte_end":22803,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":22804,"byte_end":22807,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":22808,"byte_end":22820,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":22821,"byte_end":22824,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":22825,"byte_end":22923,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":22924,"byte_end":22937,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":22938,"byte_end":22941,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":22942,"byte_end":23033,"line_start":13,"line_end":13,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23034,"byte_end":23088,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23089,"byte_end":23092,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23093,"byte_end":23103,"line_start":16,"line_end":16,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23104,"byte_end":23107,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23108,"byte_end":23202,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23203,"byte_end":23223,"line_start":19,"line_end":19,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":24068,"byte_end":24076,"line_start":43,"line_end":43,"column_start":8,"column_end":16},"name":"read_f64","qualname":"::decode::dec::read_f64","value":"fn read_f64<R>(&mut R) -> Result<f64, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 9 bytes from the given reader and to decode them as `f64` value.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 9 bytes from the given reader and to decode them as `f64` value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23454,"byte_end":23547,"line_start":27,"line_end":27,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23548,"byte_end":23551,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The first byte should be the marker and the others should represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23552,"byte_end":23640,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23641,"byte_end":23644,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23645,"byte_end":23657,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23658,"byte_end":23661,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23662,"byte_end":23760,"line_start":33,"line_end":33,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23761,"byte_end":23774,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23775,"byte_end":23778,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23779,"byte_end":23870,"line_start":36,"line_end":36,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23871,"byte_end":23925,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23926,"byte_end":23929,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23930,"byte_end":23940,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23941,"byte_end":23944,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":23945,"byte_end":24039,"line_start":41,"line_end":41,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/dec.rs","byte_start":24040,"byte_end":24060,"line_start":42,"line_end":42,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25008,"byte_end":25020,"line_start":21,"line_end":21,"column_start":8,"column_end":20},"name":"read_fixext1","qualname":"::decode::ext::read_fixext1","value":"fn read_fixext1<R>(&mut R) -> Result<(i8, u8), ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 3 bytes from the given reader and interpret them as a fixext1 type\n with data attached.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 3 bytes from the given reader and interpret them as a fixext1 type","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24362,"byte_end":24457,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ with data attached.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24458,"byte_end":24481,"line_start":5,"line_end":5,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24482,"byte_end":24485,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, a fixext1 stores an integer and a byte array whose","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24486,"byte_end":24584,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"/ length is 1 byte. Its marker byte is `0xd4`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24585,"byte_end":24633,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24634,"byte_end":24637,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Note, that this function copies a byte array from the reader to the output `u8` variable.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24638,"byte_end":24731,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24732,"byte_end":24735,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24736,"byte_end":24748,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24749,"byte_end":24752,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24753,"byte_end":24851,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24852,"byte_end":24865,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24866,"byte_end":24869,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24870,"byte_end":24880,"line_start":17,"line_end":17,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24881,"byte_end":24884,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24885,"byte_end":24979,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":24980,"byte_end":25000,"line_start":20,"line_end":20,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":39},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25906,"byte_end":25918,"line_start":45,"line_end":45,"column_start":8,"column_end":20},"name":"read_fixext2","qualname":"::decode::ext::read_fixext2","value":"fn read_fixext2<R>(&mut R) -> Result<(i8, [u8; ]), ValueReadError<R::Error>>\nwhere R: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 4 bytes from the given reader and interpret them as a fixext2 type\n with data attached.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 4 bytes from the given reader and interpret them as a fixext2 type","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25342,"byte_end":25437,"line_start":32,"line_end":32,"column_start":1,"column_end":96}},{"value":"/ with data attached.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25438,"byte_end":25461,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25462,"byte_end":25465,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, a fixext2 stores an integer and a byte array whose","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25466,"byte_end":25564,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/ length is 2 bytes. Its marker byte is `0xd5`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25565,"byte_end":25614,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25615,"byte_end":25618,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Note, that this function copies a byte array from the reader to the output buffer, which is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25619,"byte_end":25714,"line_start":38,"line_end":38,"column_start":1,"column_end":96}},{"value":"/ unlikely if you want zero-copy functionality.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25715,"byte_end":25764,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25765,"byte_end":25768,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25769,"byte_end":25781,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25782,"byte_end":25785,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25786,"byte_end":25884,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":25885,"byte_end":25898,"line_start":44,"line_end":44,"column_start":1,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26795,"byte_end":26807,"line_start":68,"line_end":68,"column_start":8,"column_end":20},"name":"read_fixext4","qualname":"::decode::ext::read_fixext4","value":"fn read_fixext4<R>(&mut R) -> Result<(i8, [u8; ]), ValueReadError<R::Error>>\nwhere R: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 6 bytes from the given reader and interpret them as a fixext4 type\n with data attached.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 6 bytes from the given reader and interpret them as a fixext4 type","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26231,"byte_end":26326,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/ with data attached.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26327,"byte_end":26350,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26351,"byte_end":26354,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, a fixext4 stores an integer and a byte array whose","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26355,"byte_end":26453,"line_start":58,"line_end":58,"column_start":1,"column_end":99}},{"value":"/ length is 4 bytes. Its marker byte is `0xd6`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26454,"byte_end":26503,"line_start":59,"line_end":59,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26504,"byte_end":26507,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, that this function copies a byte array from the reader to the output buffer, which is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26508,"byte_end":26603,"line_start":61,"line_end":61,"column_start":1,"column_end":96}},{"value":"/ unlikely if you want zero-copy functionality.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26604,"byte_end":26653,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26654,"byte_end":26657,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26658,"byte_end":26670,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26671,"byte_end":26674,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26675,"byte_end":26773,"line_start":66,"line_end":66,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":26774,"byte_end":26787,"line_start":67,"line_end":67,"column_start":1,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27685,"byte_end":27697,"line_start":91,"line_end":91,"column_start":8,"column_end":20},"name":"read_fixext8","qualname":"::decode::ext::read_fixext8","value":"fn read_fixext8<R>(&mut R) -> Result<(i8, [u8; ]), ValueReadError<R::Error>>\nwhere R: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 10 bytes from the given reader and interpret them as a fixext8 type\n with data attached.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 10 bytes from the given reader and interpret them as a fixext8 type","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27120,"byte_end":27216,"line_start":78,"line_end":78,"column_start":1,"column_end":97}},{"value":"/ with data attached.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27217,"byte_end":27240,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27241,"byte_end":27244,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, a fixext8 stores an integer and a byte array whose","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27245,"byte_end":27343,"line_start":81,"line_end":81,"column_start":1,"column_end":99}},{"value":"/ length is 8 bytes. Its marker byte is `0xd7`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27344,"byte_end":27393,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27394,"byte_end":27397,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Note, that this function copies a byte array from the reader to the output buffer, which is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27398,"byte_end":27493,"line_start":84,"line_end":84,"column_start":1,"column_end":96}},{"value":"/ unlikely if you want zero-copy functionality.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27494,"byte_end":27543,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27544,"byte_end":27547,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27548,"byte_end":27560,"line_start":87,"line_end":87,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27561,"byte_end":27564,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27565,"byte_end":27663,"line_start":89,"line_end":89,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":27664,"byte_end":27677,"line_start":90,"line_end":90,"column_start":1,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28578,"byte_end":28591,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"read_fixext16","qualname":"::decode::ext::read_fixext16","value":"fn read_fixext16<R>(&mut R) -> Result<(i8, [u8; ]), ValueReadError<R::Error>>\nwhere R: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 18 bytes from the given reader and interpret them as a fixext16 type\n with data attached.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 18 bytes from the given reader and interpret them as a fixext16 type","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28010,"byte_end":28107,"line_start":101,"line_end":101,"column_start":1,"column_end":98}},{"value":"/ with data attached.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28108,"byte_end":28131,"line_start":102,"line_end":102,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28132,"byte_end":28135,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, a fixext16 stores an integer and a byte array whose","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28136,"byte_end":28235,"line_start":104,"line_end":104,"column_start":1,"column_end":100}},{"value":"/ length is 16 bytes. Its marker byte is `0xd8`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28236,"byte_end":28286,"line_start":105,"line_end":105,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28287,"byte_end":28290,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Note, that this function copies a byte array from the reader to the output buffer, which is","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28291,"byte_end":28386,"line_start":107,"line_end":107,"column_start":1,"column_end":96}},{"value":"/ unlikely if you want zero-copy functionality.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28387,"byte_end":28436,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28437,"byte_end":28440,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28441,"byte_end":28453,"line_start":110,"line_end":110,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28454,"byte_end":28457,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28458,"byte_end":28556,"line_start":112,"line_end":112,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":28557,"byte_end":28570,"line_start":113,"line_end":113,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29649,"byte_end":29656,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"name":"ExtMeta","qualname":"::decode::ext::ExtMeta","value":"ExtMeta { typeid, size }","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702}],"decl_id":null,"docs":" Extension type meta information.","sig":null,"attributes":[{"value":"/ Extension type meta information.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29175,"byte_end":29211,"line_start":132,"line_end":132,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29212,"byte_end":29215,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Extension represents a tuple of type information and a byte array where type information is an","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29216,"byte_end":29314,"line_start":134,"line_end":134,"column_start":1,"column_end":99}},{"value":"/ integer whose meaning is defined by applications.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29315,"byte_end":29368,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29369,"byte_end":29372,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Applications can assign 0 to 127 to store application-specific type information.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29373,"byte_end":29457,"line_start":137,"line_end":137,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29458,"byte_end":29461,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29462,"byte_end":29472,"line_start":139,"line_end":139,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29473,"byte_end":29476,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ MessagePack reserves -1 to -128 for future extension to add predefined types which will be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29477,"byte_end":29571,"line_start":141,"line_end":141,"column_start":1,"column_end":95}},{"value":"/ described in separated documents.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29572,"byte_end":29609,"line_start":142,"line_end":142,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":701},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29693,"byte_end":29699,"line_start":146,"line_end":146,"column_start":9,"column_end":15},"name":"typeid","qualname":"::decode::ext::ExtMeta::typeid","value":"i8","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Type information.\n","sig":null,"attributes":[{"value":"/ Type information.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29663,"byte_end":29684,"line_start":145,"line_end":145,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":702},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29738,"byte_end":29742,"line_start":148,"line_end":148,"column_start":9,"column_end":13},"name":"size","qualname":"::decode::ext::ExtMeta::size","value":"u32","parent":{"krate":0,"index":700},"children":[],"decl_id":null,"docs":" Byte array size.\n","sig":null,"attributes":[{"value":"/ Byte array size.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29709,"byte_end":29729,"line_start":147,"line_end":147,"column_start":5,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":61},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/ext.rs","byte_start":29759,"byte_end":29772,"line_start":151,"line_end":151,"column_start":8,"column_end":21},"name":"read_ext_meta","qualname":"::decode::ext::read_ext_meta","value":"fn read_ext_meta<R>(&mut R) -> Result<ExtMeta, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":77},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31186,"byte_end":31195,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"read_nfix","qualname":"::decode::sint::read_nfix","value":"fn read_nfix<R>(&mut R) -> Result<i8, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read a single byte from the given reader and to decode it as a negative fixnum\n value.","sig":null,"attributes":[{"value":"/ Attempts to read a single byte from the given reader and to decode it as a negative fixnum","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":30428,"byte_end":30522,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":30523,"byte_end":30533,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":30534,"byte_end":30537,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, a negative fixed integer value is represented using","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":30538,"byte_end":30637,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ a single byte in `[0xe0; 0xff]` range inclusively, prepended with a special marker mask.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":30638,"byte_end":30730,"line_start":8,"line_end":8,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":30731,"byte_end":30734,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":30735,"byte_end":30747,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":30748,"byte_end":30751,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading the marker,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":30752,"byte_end":30841,"line_start":12,"line_end":12,"column_start":1,"column_end":90}},{"value":"/ except the EINTR, which is handled internally.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":30842,"byte_end":30892,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":30893,"byte_end":30896,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":30897,"byte_end":30988,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":30989,"byte_end":31043,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31044,"byte_end":31047,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31048,"byte_end":31058,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31059,"byte_end":31062,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31063,"byte_end":31157,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31158,"byte_end":31178,"line_start":21,"line_end":21,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32018,"byte_end":32025,"line_start":45,"line_end":45,"column_start":8,"column_end":15},"name":"read_i8","qualname":"::decode::sint::read_i8","value":"fn read_i8<R>(&mut R) -> Result<i8, ValueReadError<R::Error>> where R: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 2 bytes from the given reader and to decode them as `i8` value.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 2 bytes from the given reader and to decode them as `i8` value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31401,"byte_end":31493,"line_start":29,"line_end":29,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31494,"byte_end":31497,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The first byte should be the marker and the second one should represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31498,"byte_end":31590,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31591,"byte_end":31594,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31595,"byte_end":31607,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31608,"byte_end":31611,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31612,"byte_end":31710,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31711,"byte_end":31724,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31725,"byte_end":31728,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31729,"byte_end":31820,"line_start":38,"line_end":38,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31821,"byte_end":31875,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31876,"byte_end":31879,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31880,"byte_end":31890,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31891,"byte_end":31894,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31895,"byte_end":31989,"line_start":43,"line_end":43,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":31990,"byte_end":32010,"line_start":44,"line_end":44,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32846,"byte_end":32854,"line_start":68,"line_end":68,"column_start":8,"column_end":16},"name":"read_i16","qualname":"::decode::sint::read_i16","value":"fn read_i16<R>(&mut R) -> Result<i16, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 3 bytes from the given reader and to decode them as `i16` value.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 3 bytes from the given reader and to decode them as `i16` value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32232,"byte_end":32325,"line_start":52,"line_end":52,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32326,"byte_end":32329,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The first byte should be the marker and the others should represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32330,"byte_end":32418,"line_start":54,"line_end":54,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32419,"byte_end":32422,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32423,"byte_end":32435,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32436,"byte_end":32439,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32440,"byte_end":32538,"line_start":58,"line_end":58,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32539,"byte_end":32552,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32553,"byte_end":32556,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32557,"byte_end":32648,"line_start":61,"line_end":61,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32649,"byte_end":32703,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32704,"byte_end":32707,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32708,"byte_end":32718,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32719,"byte_end":32722,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32723,"byte_end":32817,"line_start":66,"line_end":66,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":32818,"byte_end":32838,"line_start":67,"line_end":67,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33678,"byte_end":33686,"line_start":91,"line_end":91,"column_start":8,"column_end":16},"name":"read_i32","qualname":"::decode::sint::read_i32","value":"fn read_i32<R>(&mut R) -> Result<i32, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 5 bytes from the given reader and to decode them as `i32` value.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 5 bytes from the given reader and to decode them as `i32` value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33064,"byte_end":33157,"line_start":75,"line_end":75,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33158,"byte_end":33161,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ The first byte should be the marker and the others should represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33162,"byte_end":33250,"line_start":77,"line_end":77,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33251,"byte_end":33254,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33255,"byte_end":33267,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33268,"byte_end":33271,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33272,"byte_end":33370,"line_start":81,"line_end":81,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33371,"byte_end":33384,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33385,"byte_end":33388,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33389,"byte_end":33480,"line_start":84,"line_end":84,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33481,"byte_end":33535,"line_start":85,"line_end":85,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33536,"byte_end":33539,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33540,"byte_end":33550,"line_start":87,"line_end":87,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33551,"byte_end":33554,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33555,"byte_end":33649,"line_start":89,"line_end":89,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33650,"byte_end":33670,"line_start":90,"line_end":90,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":85},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34510,"byte_end":34518,"line_start":114,"line_end":114,"column_start":8,"column_end":16},"name":"read_i64","qualname":"::decode::sint::read_i64","value":"fn read_i64<R>(&mut R) -> Result<i64, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 9 bytes from the given reader and to decode them as `i64` value.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 9 bytes from the given reader and to decode them as `i64` value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33896,"byte_end":33989,"line_start":98,"line_end":98,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33990,"byte_end":33993,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The first byte should be the marker and the others should represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":33994,"byte_end":34082,"line_start":100,"line_end":100,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34083,"byte_end":34086,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34087,"byte_end":34099,"line_start":102,"line_end":102,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34100,"byte_end":34103,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34104,"byte_end":34202,"line_start":104,"line_end":104,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34203,"byte_end":34216,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34217,"byte_end":34220,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34221,"byte_end":34312,"line_start":107,"line_end":107,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34313,"byte_end":34367,"line_start":108,"line_end":108,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34368,"byte_end":34371,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34372,"byte_end":34382,"line_start":110,"line_end":110,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34383,"byte_end":34386,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34387,"byte_end":34481,"line_start":112,"line_end":112,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/sint.rs","byte_start":34482,"byte_end":34502,"line_start":113,"line_end":113,"column_start":1,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":712},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35065,"byte_end":35082,"line_start":12,"line_end":12,"column_start":5,"column_end":22},"name":"InvalidMarkerRead","qualname":"::decode::str::DecodeStringError::InvalidMarkerRead","value":"DecodeStringError::InvalidMarkerRead(E)","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":714},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35083,"byte_end":35084,"line_start":12,"line_end":12,"column_start":23,"column_end":24},"name":"0","qualname":"::decode::str::DecodeStringError::InvalidMarkerRead::0","value":"E","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":715},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35091,"byte_end":35106,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"name":"InvalidDataRead","qualname":"::decode::str::DecodeStringError::InvalidDataRead","value":"DecodeStringError::InvalidDataRead(E)","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":717},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35107,"byte_end":35108,"line_start":13,"line_end":13,"column_start":21,"column_end":22},"name":"0","qualname":"::decode::str::DecodeStringError::InvalidDataRead::0","value":"E","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":718},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35115,"byte_end":35127,"line_start":14,"line_end":14,"column_start":5,"column_end":17},"name":"TypeMismatch","qualname":"::decode::str::DecodeStringError::TypeMismatch","value":"DecodeStringError::TypeMismatch(Marker)","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":720},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35128,"byte_end":35134,"line_start":14,"line_end":14,"column_start":18,"column_end":24},"name":"0","qualname":"::decode::str::DecodeStringError::TypeMismatch::0","value":"marker::Marker","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":721},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35231,"byte_end":35249,"line_start":16,"line_end":16,"column_start":5,"column_end":23},"name":"BufferSizeTooSmall","qualname":"::decode::str::DecodeStringError::BufferSizeTooSmall","value":"DecodeStringError::BufferSizeTooSmall(u32)","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" The given buffer is not large enough to accumulate the specified amount of bytes.\n","sig":null,"attributes":[{"value":"/ The given buffer is not large enough to accumulate the specified amount of bytes.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35141,"byte_end":35226,"line_start":15,"line_end":15,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":723},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35250,"byte_end":35253,"line_start":16,"line_end":16,"column_start":24,"column_end":27},"name":"0","qualname":"::decode::str::DecodeStringError::BufferSizeTooSmall::0","value":"u32","parent":{"krate":0,"index":721},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":724},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35260,"byte_end":35271,"line_start":17,"line_end":17,"column_start":5,"column_end":16},"name":"InvalidUtf8","qualname":"::decode::str::DecodeStringError::InvalidUtf8","value":"DecodeStringError::InvalidUtf8(&'a [u8], Utf8Error)","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":726},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35272,"byte_end":35280,"line_start":17,"line_end":17,"column_start":17,"column_end":25},"name":"0","qualname":"::decode::str::DecodeStringError::InvalidUtf8::0","value":"&'a [u8]","parent":{"krate":0,"index":724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":727},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35282,"byte_end":35291,"line_start":17,"line_end":17,"column_start":27,"column_end":36},"name":"1","qualname":"::decode::str::DecodeStringError::InvalidUtf8::1","value":"std::str::Utf8Error","parent":{"krate":0,"index":724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":709},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35007,"byte_end":35024,"line_start":11,"line_end":11,"column_start":10,"column_end":27},"name":"DecodeStringError","qualname":"::decode::str::DecodeStringError","value":"enum DecodeStringError<'a, E = super::Error> where E: RmpReadErr {\n    InvalidMarkerRead(E),\n    InvalidDataRead(E),\n    TypeMismatch(Marker),\n    BufferSizeTooSmall(u32),\n    InvalidUtf8(&'a [u8], Utf8Error),\n}","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":34951,"byte_end":34971,"line_start":10,"line_end":10,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35408,"byte_end":35414,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"source","qualname":"<DecodeStringError as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn error::Error + 'static>","parent":{"krate":1,"index":2565},"children":[],"decl_id":{"krate":1,"index":2566},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35393,"byte_end":35400,"line_start":22,"line_end":22,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35900,"byte_end":35903,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DecodeStringError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10023},"children":[],"decl_id":{"krate":2,"index":10024},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35885,"byte_end":35892,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36120,"byte_end":36124,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"from","qualname":"<DecodeStringError as std::convert::From>::from","value":"fn from(ValueReadError<E>) -> DecodeStringError","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36105,"byte_end":36112,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":37096,"byte_end":37108,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"read_str_len","qualname":"::decode::str::read_str_len","value":"fn read_str_len<R>(&mut R) -> Result<u32, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read up to 9 bytes from the given reader and to decode them as a string `u32` size\n value.","sig":null,"attributes":[{"value":"/ Attempts to read up to 9 bytes from the given reader and to decode them as a string `u32` size","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36501,"byte_end":36599,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"/ value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36600,"byte_end":36610,"line_start":53,"line_end":53,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36611,"byte_end":36614,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, the string format family stores an byte array in 1,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36615,"byte_end":36714,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"/ 2, 3, or 5 bytes of extra bytes in addition to the size of the byte array.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36715,"byte_end":36793,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36794,"byte_end":36797,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36798,"byte_end":36810,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36811,"byte_end":36814,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36815,"byte_end":36913,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36914,"byte_end":36927,"line_start":61,"line_end":61,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36928,"byte_end":36931,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36932,"byte_end":37023,"line_start":63,"line_end":63,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":37024,"byte_end":37078,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":37079,"byte_end":37088,"line_start":65,"line_end":65,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":140},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38834,"byte_end":38842,"line_start":112,"line_end":112,"column_start":8,"column_end":16},"name":"read_str","qualname":"::decode::str::read_str","value":"fn read_str<'r, R>(&mut R, &'r mut [u8]) -> Result<&'r str, DecodeStringError>\nwhere R: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read a string data from the given reader and copy it to the buffer provided.","sig":null,"attributes":[{"value":"/ Attempts to read a string data from the given reader and copy it to the buffer provided.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":37663,"byte_end":37755,"line_start":82,"line_end":82,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":37756,"byte_end":37759,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ On success returns a borrowed string type, allowing to view the copied bytes as properly utf-8","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":37760,"byte_end":37858,"line_start":84,"line_end":84,"column_start":1,"column_end":99}},{"value":"/ string.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":37859,"byte_end":37870,"line_start":85,"line_end":85,"column_start":1,"column_end":12}},{"value":"/ According to the spec, the string's data must to be encoded using utf-8.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":37871,"byte_end":37947,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":37948,"byte_end":37951,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":37952,"byte_end":37964,"line_start":88,"line_end":88,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":37965,"byte_end":37968,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Returns `Err` in the following cases:","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":37969,"byte_end":38010,"line_start":90,"line_end":90,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38011,"byte_end":38014,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/  - if any IO error (including unexpected EOF) occurs, while reading an `rd`, except the EINTR,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38015,"byte_end":38113,"line_start":92,"line_end":92,"column_start":1,"column_end":99}},{"value":"/    which is handled internally.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38114,"byte_end":38149,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/  - if the `out` buffer size is not large enough to keep all the data copied.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38150,"byte_end":38230,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/  - if the data is not utf-8, with a description as to why the provided data is not utf-8 and","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38231,"byte_end":38327,"line_start":95,"line_end":95,"column_start":1,"column_end":97}},{"value":"/    with a size of bytes actually copied to be able to get them from `out`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38328,"byte_end":38406,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38407,"byte_end":38410,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38411,"byte_end":38425,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38426,"byte_end":38433,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ use rmp::decode::read_str;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38434,"byte_end":38464,"line_start":100,"line_end":100,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38465,"byte_end":38468,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let buf = [0xaa, 0x6c, 0x65, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65];","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38469,"byte_end":38550,"line_start":102,"line_end":102,"column_start":1,"column_end":82}},{"value":"/ let mut out = [0u8; 16];","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38551,"byte_end":38579,"line_start":103,"line_end":103,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38580,"byte_end":38583,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"le message\", read_str(&mut &buf[..], &mut &mut out[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38584,"byte_end":38666,"line_start":105,"line_end":105,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38667,"byte_end":38674,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38675,"byte_end":38678,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ # Unstable","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38679,"byte_end":38693,"line_start":108,"line_end":108,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38694,"byte_end":38697,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This function is **unstable**, because it needs review.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":38698,"byte_end":38757,"line_start":110,"line_end":110,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":146},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40048,"byte_end":40060,"line_start":148,"line_end":148,"column_start":8,"column_end":20},"name":"read_str_ref","qualname":"::decode::str::read_str_ref","value":"fn read_str_ref(&[u8])\n-> Result<&[u8], DecodeStringError<, super::bytes::BytesReadError>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read and decode a string value from the reader, returning a borrowed slice from it.","sig":null,"attributes":[{"value":"/ Attempts to read and decode a string value from the reader, returning a borrowed slice from it.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":39756,"byte_end":39855,"line_start":144,"line_end":144,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":39856,"byte_end":39859,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"deprecated(since = \"0.8.6\", note =\n\"useless, use `read_str_from_slice` instead\")","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":39957,"byte_end":40040,"line_start":147,"line_end":147,"column_start":1,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":147},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40931,"byte_end":40950,"line_start":176,"line_end":176,"column_start":8,"column_end":27},"name":"read_str_from_slice","qualname":"::decode::str::read_str_from_slice","value":"fn read_str_from_slice<T>(&T)\n-> Result<(&str, &[u8]), DecodeStringError<, super::bytes::BytesReadError>>\nwhere T: ?Sized + AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read and decode a string value from the reader, returning a borrowed slice from it.","sig":null,"attributes":[{"value":"/ Attempts to read and decode a string value from the reader, returning a borrowed slice from it.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40274,"byte_end":40373,"line_start":154,"line_end":154,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40374,"byte_end":40377,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40378,"byte_end":40392,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40393,"byte_end":40396,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40397,"byte_end":40404,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use rmp::encode::write_str;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40405,"byte_end":40436,"line_start":159,"line_end":159,"column_start":1,"column_end":32}},{"value":"/ use rmp::decode::read_str_from_slice;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40437,"byte_end":40478,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40479,"byte_end":40482,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40483,"byte_end":40512,"line_start":162,"line_end":162,"column_start":1,"column_end":30}},{"value":"/ write_str(&mut buf, \"Unpacking\").unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40513,"byte_end":40559,"line_start":163,"line_end":163,"column_start":1,"column_end":47}},{"value":"/ write_str(&mut buf, \"multiple\").unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40560,"byte_end":40605,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ write_str(&mut buf, \"strings\").unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40606,"byte_end":40650,"line_start":165,"line_end":165,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40651,"byte_end":40654,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ let mut chunks = Vec::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40655,"byte_end":40687,"line_start":167,"line_end":167,"column_start":1,"column_end":33}},{"value":"/ let mut unparsed = &buf[..];","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40688,"byte_end":40720,"line_start":168,"line_end":168,"column_start":1,"column_end":33}},{"value":"/ while let Ok((chunk, tail)) = read_str_from_slice(unparsed) {","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40721,"byte_end":40786,"line_start":169,"line_end":169,"column_start":1,"column_end":66}},{"value":"/     chunks.push(chunk);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40787,"byte_end":40814,"line_start":170,"line_end":170,"column_start":1,"column_end":28}},{"value":"/     unparsed = tail;","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40815,"byte_end":40839,"line_start":171,"line_end":171,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40840,"byte_end":40845,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40846,"byte_end":40849,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec![\"Unpacking\", \"multiple\", \"strings\"], chunks);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40850,"byte_end":40915,"line_start":174,"line_end":174,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":40916,"byte_end":40923,"line_start":175,"line_end":175,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":163},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42369,"byte_end":42378,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"read_pfix","qualname":"::decode::uint::read_pfix","value":"fn read_pfix<R>(&mut R) -> Result<u8, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read a single byte from the given reader and to decode it as a positive fixnum\n value.","sig":null,"attributes":[{"value":"/ Attempts to read a single byte from the given reader and to decode it as a positive fixnum","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":41611,"byte_end":41705,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":41706,"byte_end":41716,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":41717,"byte_end":41720,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, a positive fixed integer value is represented using","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":41721,"byte_end":41820,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ a single byte in `[0x00; 0x7f]` range inclusively, prepended with a special marker mask.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":41821,"byte_end":41913,"line_start":8,"line_end":8,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":41914,"byte_end":41917,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":41918,"byte_end":41930,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":41931,"byte_end":41934,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading the marker,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":41935,"byte_end":42024,"line_start":12,"line_end":12,"column_start":1,"column_end":90}},{"value":"/ except the EINTR, which is handled internally.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42025,"byte_end":42075,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42076,"byte_end":42079,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42080,"byte_end":42171,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42172,"byte_end":42226,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42227,"byte_end":42230,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42231,"byte_end":42241,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42242,"byte_end":42245,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42246,"byte_end":42340,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42341,"byte_end":42361,"line_start":21,"line_end":21,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":165},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43066,"byte_end":43073,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"read_u8","qualname":"::decode::uint::read_u8","value":"fn read_u8<R>(&mut R) -> Result<u8, ValueReadError<R::Error>> where R: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 2 bytes from the given reader and to decode them as `u8` value.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 2 bytes from the given reader and to decode them as `u8` value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42584,"byte_end":42676,"line_start":29,"line_end":29,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42677,"byte_end":42680,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The first byte should be the marker and the second one should represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42681,"byte_end":42773,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42774,"byte_end":42777,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42778,"byte_end":42790,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42791,"byte_end":42794,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42795,"byte_end":42893,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42894,"byte_end":42907,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42908,"byte_end":42911,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":42912,"byte_end":43003,"line_start":38,"line_end":38,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43004,"byte_end":43058,"line_start":39,"line_end":39,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43894,"byte_end":43902,"line_start":63,"line_end":63,"column_start":8,"column_end":16},"name":"read_u16","qualname":"::decode::uint::read_u16","value":"fn read_u16<R>(&mut R) -> Result<u16, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 3 bytes from the given reader and to decode them as `u16` value.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 3 bytes from the given reader and to decode them as `u16` value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43280,"byte_end":43373,"line_start":47,"line_end":47,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43374,"byte_end":43377,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The first byte should be the marker and the others should represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43378,"byte_end":43466,"line_start":49,"line_end":49,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43467,"byte_end":43470,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43471,"byte_end":43483,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43484,"byte_end":43487,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43488,"byte_end":43586,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43587,"byte_end":43600,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43601,"byte_end":43604,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43605,"byte_end":43696,"line_start":56,"line_end":56,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43697,"byte_end":43751,"line_start":57,"line_end":57,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43752,"byte_end":43755,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43756,"byte_end":43766,"line_start":59,"line_end":59,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43767,"byte_end":43770,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43771,"byte_end":43865,"line_start":61,"line_end":61,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":43866,"byte_end":43886,"line_start":62,"line_end":62,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":169},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44726,"byte_end":44734,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"read_u32","qualname":"::decode::uint::read_u32","value":"fn read_u32<R>(&mut R) -> Result<u32, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 5 bytes from the given reader and to decode them as `u32` value.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 5 bytes from the given reader and to decode them as `u32` value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44112,"byte_end":44205,"line_start":70,"line_end":70,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44206,"byte_end":44209,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The first byte should be the marker and the others should represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44210,"byte_end":44298,"line_start":72,"line_end":72,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44299,"byte_end":44302,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44303,"byte_end":44315,"line_start":74,"line_end":74,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44316,"byte_end":44319,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44320,"byte_end":44418,"line_start":76,"line_end":76,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44419,"byte_end":44432,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44433,"byte_end":44436,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44437,"byte_end":44528,"line_start":79,"line_end":79,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44529,"byte_end":44583,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44584,"byte_end":44587,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44588,"byte_end":44598,"line_start":82,"line_end":82,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44599,"byte_end":44602,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44603,"byte_end":44697,"line_start":84,"line_end":84,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44698,"byte_end":44718,"line_start":85,"line_end":85,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":171},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45558,"byte_end":45566,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"read_u64","qualname":"::decode::uint::read_u64","value":"fn read_u64<R>(&mut R) -> Result<u64, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read exactly 9 bytes from the given reader and to decode them as `u64` value.","sig":null,"attributes":[{"value":"/ Attempts to read exactly 9 bytes from the given reader and to decode them as `u64` value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":44944,"byte_end":45037,"line_start":93,"line_end":93,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45038,"byte_end":45041,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The first byte should be the marker and the others should represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45042,"byte_end":45130,"line_start":95,"line_end":95,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45131,"byte_end":45134,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45135,"byte_end":45147,"line_start":97,"line_end":97,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45148,"byte_end":45151,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading either the marker or","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45152,"byte_end":45250,"line_start":99,"line_end":99,"column_start":1,"column_end":99}},{"value":"/ the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45251,"byte_end":45264,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45265,"byte_end":45268,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45269,"byte_end":45360,"line_start":102,"line_end":102,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45361,"byte_end":45415,"line_start":103,"line_end":103,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45416,"byte_end":45419,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45420,"byte_end":45430,"line_start":105,"line_end":105,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45431,"byte_end":45434,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45435,"byte_end":45529,"line_start":107,"line_end":107,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/uint.rs","byte_start":45530,"byte_end":45550,"line_start":108,"line_end":108,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":272},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bytes","qualname":"::decode::bytes","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":732},{"krate":0,"index":737},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":739},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":765},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":290},{"krate":0,"index":295},{"krate":0,"index":298}],"decl_id":null,"docs":" Implementation of the [Bytes] type\n","sig":null,"attributes":[{"value":"/ Implementation of the [Bytes] type","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":45776,"byte_end":45814,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"StructVariant","id":{"krate":0,"index":733},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46133,"byte_end":46150,"line_start":13,"line_end":13,"column_start":5,"column_end":22},"name":"InsufficientBytes","qualname":"::decode::bytes::BytesReadError::InsufficientBytes","value":"BytesReadError::InsufficientBytes { expected, actual, position }","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":" Indicates that there were not enough bytes.\n","sig":null,"attributes":[{"value":"/ Indicates that there were not enough bytes.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46081,"byte_end":46128,"line_start":12,"line_end":12,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":734},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46161,"byte_end":46169,"line_start":14,"line_end":14,"column_start":9,"column_end":17},"name":"expected","qualname":"::decode::bytes::BytesReadError::InsufficientBytes::expected","value":"usize","parent":{"krate":0,"index":733},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":735},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46186,"byte_end":46192,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"actual","qualname":"::decode::bytes::BytesReadError::InsufficientBytes::actual","value":"usize","parent":{"krate":0,"index":733},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":736},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46209,"byte_end":46217,"line_start":16,"line_end":16,"column_start":9,"column_end":17},"name":"position","qualname":"::decode::bytes::BytesReadError::InsufficientBytes::position","value":"u64","parent":{"krate":0,"index":733},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":732},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46060,"byte_end":46074,"line_start":11,"line_end":11,"column_start":10,"column_end":24},"name":"BytesReadError","qualname":"::decode::bytes::BytesReadError","value":"enum BytesReadError {\n    InsufficientBytes {\n            expected: usize,\n            actual: usize,\n            position: u64,\n        },\n}","parent":null,"children":[{"krate":0,"index":733}],"decl_id":null,"docs":" Indicates that an error occurred reading from [Bytes]\n","sig":null,"attributes":[{"value":"/ Indicates that an error occurred reading from [Bytes]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":45905,"byte_end":45962,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"non_exhaustive","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":45980,"byte_end":45997,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46273,"byte_end":46276,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BytesReadError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut Formatter) -> core::fmt::Result","parent":{"krate":2,"index":10023},"children":[],"decl_id":{"krate":2,"index":10024},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":739},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47399,"byte_end":47404,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::decode::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742}],"decl_id":null,"docs":" A wrapper around `&[u8]` to read more efficiently.","sig":null,"attributes":[{"value":"/ A wrapper around `&[u8]` to read more efficiently.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46684,"byte_end":46738,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46739,"byte_end":46742,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This has a specialized implementation of `RmpWrite`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46743,"byte_end":46798,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/ and has error type [Infallible](core::convert::Infallible).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46799,"byte_end":46862,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46863,"byte_end":46866,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This has the additional benefit of working on `#[no_std]` (unlike the builtin Read trait)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46867,"byte_end":46960,"line_start":38,"line_end":38,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46961,"byte_end":46964,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ See also [serde_bytes::Bytes](https://docs.rs/serde_bytes/0.11/serde_bytes/struct.Bytes.html)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46965,"byte_end":47062,"line_start":40,"line_end":40,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47063,"byte_end":47066,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Unlike a plain `&[u8]` this also tracks an internal offset in the input (See [Self::position]).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47067,"byte_end":47166,"line_start":42,"line_end":42,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47167,"byte_end":47170,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This is used for (limited) compatibility with [std::io::Cursor]. Unlike a [Cursor](std::io::Cursor) it does","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47171,"byte_end":47282,"line_start":44,"line_end":44,"column_start":1,"column_end":112}},{"value":"/ not support mark/reset.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47283,"byte_end":47310,"line_start":45,"line_end":45,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47787,"byte_end":47790,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Bytes>::new","value":"fn new(&'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrap an existing bytes slice.","sig":null,"attributes":[{"value":"/ Wrap an existing bytes slice.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47671,"byte_end":47704,"line_start":56,"line_end":56,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47709,"byte_end":47712,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This sets the internal position to zero.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47717,"byte_end":47761,"line_start":58,"line_end":58,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47766,"byte_end":47775,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47956,"byte_end":47971,"line_start":65,"line_end":65,"column_start":12,"column_end":27},"name":"remaining_slice","qualname":"<Bytes>::remaining_slice","value":"fn remaining_slice(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the remaining bytes in the buffer.\n","sig":null,"attributes":[{"value":"/ Get a reference to the remaining bytes in the buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47873,"byte_end":47930,"line_start":63,"line_end":63,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47935,"byte_end":47944,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48229,"byte_end":48237,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"position","qualname":"<Bytes>::position","value":"fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the position of the input buffer.","sig":null,"attributes":[{"value":"/ Return the position of the input buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48022,"byte_end":48066,"line_start":68,"line_end":68,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48071,"byte_end":48074,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This is not required for correctness, it only exists to help mimic","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48079,"byte_end":48149,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/ [Cursor::position](std::io::Cursor::position)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48154,"byte_end":48203,"line_start":71,"line_end":71,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48208,"byte_end":48217,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48353,"byte_end":48357,"line_start":79,"line_end":79,"column_start":8,"column_end":12},"name":"from","qualname":"<Bytes as std::convert::From>::from","value":"fn from(&'a [u8]) -> Self","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48336,"byte_end":48345,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48523,"byte_end":48530,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"read_u8","qualname":"<Bytes as decode::RmpRead>::read_u8","value":"fn read_u8(&mut Self) -> Result<u8, Self::Error>","parent":{"krate":0,"index":317},"children":[],"decl_id":{"krate":0,"index":319},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48506,"byte_end":48515,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48977,"byte_end":48991,"line_start":103,"line_end":103,"column_start":8,"column_end":22},"name":"read_exact_buf","qualname":"<Bytes as decode::RmpRead>::read_exact_buf","value":"fn read_exact_buf(&mut Self, &mut [u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":317},"children":[],"decl_id":{"krate":0,"index":321},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48960,"byte_end":48969,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":308},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7579,"byte_end":7589,"line_start":47,"line_end":47,"column_start":11,"column_end":21},"name":"RmpReadErr","qualname":"::decode::RmpReadErr","value":"RmpReadErr: Display + Debug + crate::errors::MaybeErrBound + 'static","parent":null,"children":[],"decl_id":null,"docs":" The error type for I/O operations on `RmpRead` and associated traits.","sig":null,"attributes":[{"value":"/ The error type for I/O operations on `RmpRead` and associated traits.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7441,"byte_end":7514,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7515,"byte_end":7518,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ For [std::io::Read], this is [std::io::Error]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7519,"byte_end":7568,"line_start":46,"line_end":46,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":313},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8417,"byte_end":8423,"line_start":69,"line_end":69,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::decode::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":317},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8963,"byte_end":8970,"line_start":86,"line_end":86,"column_start":11,"column_end":18},"name":"RmpRead","qualname":"::decode::RmpRead","value":"RmpRead: sealed::Sealed","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":775},{"krate":0,"index":779},{"krate":0,"index":783},{"krate":0,"index":787},{"krate":0,"index":791},{"krate":0,"index":795},{"krate":0,"index":799},{"krate":0,"index":803}],"decl_id":null,"docs":" A type that `rmp` supports reading from.","sig":null,"attributes":[{"value":"/ A type that `rmp` supports reading from.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8620,"byte_end":8664,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8665,"byte_end":8668,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ The methods of this trait should be considered an implementation detail (for now).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8669,"byte_end":8755,"line_start":80,"line_end":80,"column_start":1,"column_end":87}},{"value":"/ It is currently sealed (can not be implemented by the user).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8756,"byte_end":8820,"line_start":81,"line_end":81,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8821,"byte_end":8824,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ See also [std::io::Read] and [byteorder::ReadBytesExt]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8825,"byte_end":8883,"line_start":83,"line_end":83,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8884,"byte_end":8887,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Its primary implementations are [std::io::Read] and [Bytes].","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8888,"byte_end":8952,"line_start":85,"line_end":85,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":318},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8998,"byte_end":9003,"line_start":87,"line_end":87,"column_start":10,"column_end":15},"name":"Error","qualname":"::decode::RmpRead::Error","value":"type Error: RmpReadErr;","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9093,"byte_end":9100,"line_start":90,"line_end":90,"column_start":8,"column_end":15},"name":"read_u8","qualname":"::decode::RmpRead::read_u8","value":"fn read_u8(&mut Self) -> Result<u8, Self::Error>","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" Read a single (unsigned) byte from this stream\n","sig":null,"attributes":[{"value":"/ Read a single (unsigned) byte from this stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9021,"byte_end":9071,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9076,"byte_end":9085,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9447,"byte_end":9461,"line_start":101,"line_end":101,"column_start":8,"column_end":22},"name":"read_exact_buf","qualname":"::decode::RmpRead::read_exact_buf","value":"fn read_exact_buf(&mut Self, &mut [u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" Read the exact number of bytes needed to fill the specified buffer.","sig":null,"attributes":[{"value":"/ Read the exact number of bytes needed to fill the specified buffer.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9241,"byte_end":9312,"line_start":96,"line_end":96,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9317,"byte_end":9320,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ If there are not enough bytes, this will return an error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9325,"byte_end":9386,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9391,"byte_end":9394,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ See also [std::io::Read::read_exact]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9399,"byte_end":9439,"line_start":100,"line_end":100,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9699,"byte_end":9711,"line_start":108,"line_end":108,"column_start":8,"column_end":20},"name":"read_data_u8","qualname":"::decode::RmpRead::read_data_u8","value":"fn read_data_u8(&mut Self) -> Result<u8, ValueReadError<Self::Error>>","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" Read a single (unsigned) byte from this stream.\n","sig":null,"attributes":[{"value":"/ Read a single (unsigned) byte from this stream.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9607,"byte_end":9658,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9663,"byte_end":9672,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9932,"byte_end":9944,"line_start":114,"line_end":114,"column_start":8,"column_end":20},"name":"read_data_i8","qualname":"::decode::RmpRead::read_data_i8","value":"fn read_data_i8(&mut Self) -> Result<i8, ValueReadError<Self::Error>>","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" Read a single (signed) byte from this stream.\n","sig":null,"attributes":[{"value":"/ Read a single (signed) byte from this stream.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9842,"byte_end":9891,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":9896,"byte_end":9905,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":10088,"byte_end":10101,"line_start":119,"line_end":119,"column_start":9,"column_end":22},"name":"read_data_u16","qualname":"::decode::RmpRead::read_data_u16","value":"fn read_data_u16(&mut Self) -> Result<u16, ValueReadError<Self::Error>> where\nSelf: Sized","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7869,"byte_end":7878,"line_start":55,"line_end":55,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":10118,"byte_end":10131,"line_start":120,"line_end":120,"column_start":9,"column_end":22},"name":"read_data_u32","qualname":"::decode::RmpRead::read_data_u32","value":"fn read_data_u32(&mut Self) -> Result<u32, ValueReadError<Self::Error>> where\nSelf: Sized","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7869,"byte_end":7878,"line_start":55,"line_end":55,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":10148,"byte_end":10161,"line_start":121,"line_end":121,"column_start":9,"column_end":22},"name":"read_data_u64","qualname":"::decode::RmpRead::read_data_u64","value":"fn read_data_u64(&mut Self) -> Result<u64, ValueReadError<Self::Error>> where\nSelf: Sized","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7869,"byte_end":7878,"line_start":55,"line_end":55,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":10178,"byte_end":10191,"line_start":122,"line_end":122,"column_start":9,"column_end":22},"name":"read_data_i16","qualname":"::decode::RmpRead::read_data_i16","value":"fn read_data_i16(&mut Self) -> Result<i16, ValueReadError<Self::Error>> where\nSelf: Sized","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7869,"byte_end":7878,"line_start":55,"line_end":55,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":10208,"byte_end":10221,"line_start":123,"line_end":123,"column_start":9,"column_end":22},"name":"read_data_i32","qualname":"::decode::RmpRead::read_data_i32","value":"fn read_data_i32(&mut Self) -> Result<i32, ValueReadError<Self::Error>> where\nSelf: Sized","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7869,"byte_end":7878,"line_start":55,"line_end":55,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":10238,"byte_end":10251,"line_start":124,"line_end":124,"column_start":9,"column_end":22},"name":"read_data_i64","qualname":"::decode::RmpRead::read_data_i64","value":"fn read_data_i64(&mut Self) -> Result<i64, ValueReadError<Self::Error>> where\nSelf: Sized","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7869,"byte_end":7878,"line_start":55,"line_end":55,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":10268,"byte_end":10281,"line_start":125,"line_end":125,"column_start":9,"column_end":22},"name":"read_data_f32","qualname":"::decode::RmpRead::read_data_f32","value":"fn read_data_f32(&mut Self) -> Result<f32, ValueReadError<Self::Error>> where\nSelf: Sized","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7869,"byte_end":7878,"line_start":55,"line_end":55,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":10298,"byte_end":10311,"line_start":126,"line_end":126,"column_start":9,"column_end":22},"name":"read_data_f64","qualname":"::decode::RmpRead::read_data_f64","value":"fn read_data_f64(&mut Self) -> Result<f64, ValueReadError<Self::Error>> where\nSelf: Sized","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7869,"byte_end":7878,"line_start":55,"line_end":55,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":11576,"byte_end":11590,"line_start":169,"line_end":169,"column_start":8,"column_end":22},"name":"read_exact_buf","qualname":"<T as decode::RmpRead>::read_exact_buf","value":"fn read_exact_buf(&mut Self, &mut [u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":317},"children":[],"decl_id":{"krate":0,"index":321},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":11559,"byte_end":11568,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":827},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12126,"byte_end":12141,"line_start":188,"line_end":188,"column_start":12,"column_end":27},"name":"MarkerReadError","qualname":"::decode::MarkerReadError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that can occur when attempting to read a MessagePack marker from the reader.\n","sig":null,"attributes":[{"value":"/ An error that can occur when attempting to read a MessagePack marker from the reader.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":11956,"byte_end":12045,"line_start":185,"line_end":185,"column_start":1,"column_end":90}},{"value":"allow(deprecated)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12063,"byte_end":12083,"line_start":187,"line_end":187,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":830},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12165,"byte_end":12170,"line_start":188,"line_end":188,"column_start":51,"column_end":56},"name":"0","qualname":"::decode::MarkerReadError::0","value":"E","parent":{"krate":0,"index":827},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":836},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12421,"byte_end":12438,"line_start":195,"line_end":195,"column_start":5,"column_end":22},"name":"InvalidMarkerRead","qualname":"::decode::ValueReadError::InvalidMarkerRead","value":"ValueReadError::InvalidMarkerRead(E)","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" Failed to read the marker.\n","sig":null,"attributes":[{"value":"/ Failed to read the marker.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12386,"byte_end":12416,"line_start":194,"line_end":194,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":838},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12439,"byte_end":12440,"line_start":195,"line_end":195,"column_start":23,"column_end":24},"name":"0","qualname":"::decode::ValueReadError::InvalidMarkerRead::0","value":"E","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":839},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12480,"byte_end":12495,"line_start":197,"line_end":197,"column_start":5,"column_end":20},"name":"InvalidDataRead","qualname":"::decode::ValueReadError::InvalidDataRead","value":"ValueReadError::InvalidDataRead(E)","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" Failed to read the data.\n","sig":null,"attributes":[{"value":"/ Failed to read the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12447,"byte_end":12475,"line_start":196,"line_end":196,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":841},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12496,"byte_end":12497,"line_start":197,"line_end":197,"column_start":21,"column_end":22},"name":"0","qualname":"::decode::ValueReadError::InvalidDataRead::0","value":"E","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":842},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12564,"byte_end":12576,"line_start":199,"line_end":199,"column_start":5,"column_end":17},"name":"TypeMismatch","qualname":"::decode::ValueReadError::TypeMismatch","value":"ValueReadError::TypeMismatch(Marker)","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" The type decoded isn't match with the expected one.\n","sig":null,"attributes":[{"value":"/ The type decoded isn't match with the expected one.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12504,"byte_end":12559,"line_start":198,"line_end":198,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":844},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12577,"byte_end":12583,"line_start":199,"line_end":199,"column_start":18,"column_end":24},"name":"0","qualname":"::decode::ValueReadError::TypeMismatch::0","value":"marker::Marker","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":834},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12342,"byte_end":12356,"line_start":193,"line_end":193,"column_start":10,"column_end":24},"name":"ValueReadError","qualname":"::decode::ValueReadError","value":"enum ValueReadError<E = Error> where E: RmpReadErr {\n    InvalidMarkerRead(E),\n    InvalidDataRead(E),\n    TypeMismatch(Marker),\n}","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":842}],"decl_id":null,"docs":" An error which can occur when attempting to read a MessagePack value from the reader.\n","sig":null,"attributes":[{"value":"/ An error which can occur when attempting to read a MessagePack value from the reader.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12174,"byte_end":12263,"line_start":190,"line_end":190,"column_start":1,"column_end":90}},{"value":"allow(deprecated)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12281,"byte_end":12301,"line_start":192,"line_end":192,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12671,"byte_end":12677,"line_start":205,"line_end":205,"column_start":8,"column_end":14},"name":"source","qualname":"<ValueReadError as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn error::Error + 'static>","parent":{"krate":1,"index":2565},"children":[],"decl_id":{"krate":1,"index":2566},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12656,"byte_end":12663,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":13000,"byte_end":13003,"line_start":216,"line_end":216,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ValueReadError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10023},"children":[],"decl_id":{"krate":2,"index":10024},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12985,"byte_end":12992,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":13566,"byte_end":13570,"line_start":230,"line_end":230,"column_start":8,"column_end":12},"name":"from","qualname":"<ValueReadError<E> as std::convert::From>::from","value":"fn from(MarkerReadError<E>) -> ValueReadError<E>","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":13551,"byte_end":13558,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":13806,"byte_end":13810,"line_start":239,"line_end":239,"column_start":8,"column_end":12},"name":"from","qualname":"<MarkerReadError<E> as std::convert::From>::from","value":"fn from(E) -> MarkerReadError<E>","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":13791,"byte_end":13798,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":347},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":13997,"byte_end":14008,"line_start":246,"line_end":246,"column_start":8,"column_end":19},"name":"read_marker","qualname":"::decode::read_marker","value":"fn read_marker<R>(&mut R) -> Result<Marker, MarkerReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read a single byte from the given reader and to decode it as a MessagePack marker.\n","sig":null,"attributes":[{"value":"/ Attempts to read a single byte from the given reader and to decode it as a MessagePack marker.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":13881,"byte_end":13979,"line_start":244,"line_end":244,"column_start":1,"column_end":99}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":13980,"byte_end":13989,"line_start":245,"line_end":245,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":349},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14775,"byte_end":14783,"line_start":266,"line_end":266,"column_start":8,"column_end":16},"name":"read_nil","qualname":"::decode::read_nil","value":"fn read_nil<R>(&mut R) -> Result<(), ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read a single byte from the given reader and to decode it as a nil value.","sig":null,"attributes":[{"value":"/ Attempts to read a single byte from the given reader and to decode it as a nil value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14122,"byte_end":14211,"line_start":250,"line_end":250,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14212,"byte_end":14215,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, a nil value is represented as a single `0xc0` byte.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14216,"byte_end":14315,"line_start":252,"line_end":252,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14316,"byte_end":14319,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14320,"byte_end":14332,"line_start":254,"line_end":254,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14333,"byte_end":14336,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading the nil marker,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14337,"byte_end":14430,"line_start":256,"line_end":256,"column_start":1,"column_end":94}},{"value":"/ except the EINTR, which is handled internally.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14431,"byte_end":14481,"line_start":257,"line_end":257,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14482,"byte_end":14485,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14486,"byte_end":14577,"line_start":259,"line_end":259,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14578,"byte_end":14632,"line_start":260,"line_end":260,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14633,"byte_end":14636,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14637,"byte_end":14647,"line_start":262,"line_end":262,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14648,"byte_end":14651,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14652,"byte_end":14746,"line_start":264,"line_end":264,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14747,"byte_end":14767,"line_start":265,"line_end":265,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":351},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15649,"byte_end":15658,"line_start":290,"line_end":290,"column_start":8,"column_end":17},"name":"read_bool","qualname":"::decode::read_bool","value":"fn read_bool<R>(&mut R) -> Result<bool, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read a single byte from the given reader and to decode it as a boolean value.","sig":null,"attributes":[{"value":"/ Attempts to read a single byte from the given reader and to decode it as a boolean value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":14981,"byte_end":15074,"line_start":273,"line_end":273,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15075,"byte_end":15078,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, an encoded boolean value is represented as a single","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15079,"byte_end":15178,"line_start":275,"line_end":275,"column_start":1,"column_end":100}},{"value":"/ byte.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15179,"byte_end":15188,"line_start":276,"line_end":276,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15189,"byte_end":15192,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15193,"byte_end":15205,"line_start":278,"line_end":278,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15206,"byte_end":15209,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueReadError` on any I/O error while reading the bool marker,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15210,"byte_end":15304,"line_start":280,"line_end":280,"column_start":1,"column_end":95}},{"value":"/ except the EINTR, which is handled internally.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15305,"byte_end":15355,"line_start":281,"line_end":281,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15356,"byte_end":15359,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ It also returns `ValueReadError::TypeMismatch` if the actual type is not equal with the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15360,"byte_end":15451,"line_start":283,"line_end":283,"column_start":1,"column_end":92}},{"value":"/ expected one, indicating you with the actual type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15452,"byte_end":15506,"line_start":284,"line_end":284,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15507,"byte_end":15510,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15511,"byte_end":15521,"line_start":286,"line_end":286,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15522,"byte_end":15525,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15526,"byte_end":15620,"line_start":288,"line_end":288,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15621,"byte_end":15641,"line_start":289,"line_end":289,"column_start":1,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":850},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16149,"byte_end":16166,"line_start":303,"line_end":303,"column_start":5,"column_end":22},"name":"InvalidMarkerRead","qualname":"::decode::NumValueReadError::InvalidMarkerRead","value":"NumValueReadError::InvalidMarkerRead(E)","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":" Failed to read the marker.\n","sig":null,"attributes":[{"value":"/ Failed to read the marker.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16114,"byte_end":16144,"line_start":302,"line_end":302,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":852},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16167,"byte_end":16168,"line_start":303,"line_end":303,"column_start":23,"column_end":24},"name":"0","qualname":"::decode::NumValueReadError::InvalidMarkerRead::0","value":"E","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":853},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16208,"byte_end":16223,"line_start":305,"line_end":305,"column_start":5,"column_end":20},"name":"InvalidDataRead","qualname":"::decode::NumValueReadError::InvalidDataRead","value":"NumValueReadError::InvalidDataRead(E)","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":" Failed to read the data.\n","sig":null,"attributes":[{"value":"/ Failed to read the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16175,"byte_end":16203,"line_start":304,"line_end":304,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":855},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16224,"byte_end":16225,"line_start":305,"line_end":305,"column_start":21,"column_end":22},"name":"0","qualname":"::decode::NumValueReadError::InvalidDataRead::0","value":"E","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":856},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16292,"byte_end":16304,"line_start":307,"line_end":307,"column_start":5,"column_end":17},"name":"TypeMismatch","qualname":"::decode::NumValueReadError::TypeMismatch","value":"NumValueReadError::TypeMismatch(Marker)","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":" The type decoded isn't match with the expected one.\n","sig":null,"attributes":[{"value":"/ The type decoded isn't match with the expected one.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16232,"byte_end":16287,"line_start":306,"line_end":306,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":858},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16305,"byte_end":16311,"line_start":307,"line_end":307,"column_start":18,"column_end":24},"name":"0","qualname":"::decode::NumValueReadError::TypeMismatch::0","value":"marker::Marker","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":859},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16375,"byte_end":16385,"line_start":309,"line_end":309,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::decode::NumValueReadError::OutOfRange","value":"NumValueReadError::OutOfRange","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":" Out of range integral type conversion attempted.\n","sig":null,"attributes":[{"value":"/ Out of range integral type conversion attempted.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16318,"byte_end":16370,"line_start":308,"line_end":308,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":848},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16067,"byte_end":16084,"line_start":301,"line_end":301,"column_start":10,"column_end":27},"name":"NumValueReadError","qualname":"::decode::NumValueReadError","value":"enum NumValueReadError<E = Error> where E: RmpReadErr {\n    InvalidMarkerRead(E),\n    InvalidDataRead(E),\n    TypeMismatch(Marker),\n    OutOfRange,\n}","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":859}],"decl_id":null,"docs":" An error which can occur when attempting to read a MessagePack numeric value from the reader.\n","sig":null,"attributes":[{"value":"/ An error which can occur when attempting to read a MessagePack numeric value from the reader.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":15896,"byte_end":15993,"line_start":298,"line_end":298,"column_start":1,"column_end":98}},{"value":"allow(deprecated)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16011,"byte_end":16031,"line_start":300,"line_end":300,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16463,"byte_end":16469,"line_start":314,"line_end":314,"column_start":8,"column_end":14},"name":"source","qualname":"<NumValueReadError as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn error::Error + 'static>","parent":{"krate":1,"index":2565},"children":[],"decl_id":{"krate":1,"index":2566},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16854,"byte_end":16857,"line_start":325,"line_end":325,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NumValueReadError<E> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10023},"children":[],"decl_id":{"krate":2,"index":10024},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":17475,"byte_end":17479,"line_start":339,"line_end":339,"column_start":8,"column_end":12},"name":"from","qualname":"<NumValueReadError<E> as std::convert::From>::from","value":"fn from(MarkerReadError<E>) -> NumValueReadError<E>","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":17460,"byte_end":17467,"line_start":338,"line_end":338,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":17739,"byte_end":17743,"line_start":348,"line_end":348,"column_start":8,"column_end":12},"name":"from","qualname":"<NumValueReadError<E> as std::convert::From>::from","value":"fn from(ValueReadError<E>) -> NumValueReadError<E>","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":17724,"byte_end":17731,"line_start":347,"line_end":347,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":364},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":19464,"byte_end":19472,"line_start":387,"line_end":387,"column_start":8,"column_end":16},"name":"read_int","qualname":"::decode::read_int","value":"fn read_int<T, R>(&mut R) -> Result<T, NumValueReadError<R::Error>> where\nT: FromPrimitive, R: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read up to 9 bytes from the given reader and to decode them as integral `T` value.","sig":null,"attributes":[{"value":"/ Attempts to read up to 9 bytes from the given reader and to decode them as integral `T` value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18110,"byte_end":18208,"line_start":357,"line_end":357,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18209,"byte_end":18212,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ This function will try to read up to 9 bytes from the reader (1 for marker and up to 8 for data)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18213,"byte_end":18313,"line_start":359,"line_end":359,"column_start":1,"column_end":101}},{"value":"/ and interpret them as a big-endian `T`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18314,"byte_end":18357,"line_start":360,"line_end":360,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18358,"byte_end":18361,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ Unlike `read_*`, this function weakens type restrictions, allowing you to safely decode packed","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18362,"byte_end":18460,"line_start":362,"line_end":362,"column_start":1,"column_end":99}},{"value":"/ values even if you aren't sure about the actual integral type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18461,"byte_end":18527,"line_start":363,"line_end":363,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18528,"byte_end":18531,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18532,"byte_end":18544,"line_start":365,"line_end":365,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18545,"byte_end":18548,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ This function will return `NumValueReadError` on any I/O error while reading either the marker","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18549,"byte_end":18647,"line_start":367,"line_end":367,"column_start":1,"column_end":99}},{"value":"/ or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18648,"byte_end":18664,"line_start":368,"line_end":368,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18665,"byte_end":18668,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ It also returns `NumValueReadError::OutOfRange` if the actual type is not an integer or it does","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18669,"byte_end":18768,"line_start":370,"line_end":370,"column_start":1,"column_end":100}},{"value":"/ not fit in the given numeric range.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18769,"byte_end":18808,"line_start":371,"line_end":371,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18809,"byte_end":18812,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18813,"byte_end":18827,"line_start":373,"line_end":373,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18828,"byte_end":18831,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18832,"byte_end":18839,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"/ let buf = [0xcd, 0x1, 0x2c];","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18840,"byte_end":18872,"line_start":376,"line_end":376,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18873,"byte_end":18876,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(300u16, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18877,"byte_end":18947,"line_start":378,"line_end":378,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(300i16, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":18948,"byte_end":19018,"line_start":379,"line_end":379,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(300u32, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":19019,"byte_end":19089,"line_start":380,"line_end":380,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(300i32, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":19090,"byte_end":19160,"line_start":381,"line_end":381,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(300u64, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":19161,"byte_end":19231,"line_start":382,"line_end":382,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(300i64, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":19232,"byte_end":19302,"line_start":383,"line_end":383,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(300usize, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":19303,"byte_end":19375,"line_start":384,"line_end":384,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(300isize, rmp::decode::read_int(&mut &buf[..]).unwrap());","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":19376,"byte_end":19448,"line_start":385,"line_end":385,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":19449,"byte_end":19456,"line_start":386,"line_end":386,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":367},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":20704,"byte_end":20718,"line_start":417,"line_end":417,"column_start":8,"column_end":22},"name":"read_array_len","qualname":"::decode::read_array_len","value":"fn read_array_len<R>(&mut R) -> Result<u32, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read up to 5 bytes from the given reader and to decode them as a big-endian u32\n array size.","sig":null,"attributes":[{"value":"/ Attempts to read up to 5 bytes from the given reader and to decode them as a big-endian u32","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":20271,"byte_end":20366,"line_start":405,"line_end":405,"column_start":1,"column_end":96}},{"value":"/ array size.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":20367,"byte_end":20382,"line_start":406,"line_end":406,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":20383,"byte_end":20386,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ Array format family stores a sequence of elements in 1, 3, or 5 bytes of extra bytes in addition","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":20387,"byte_end":20487,"line_start":408,"line_end":408,"column_start":1,"column_end":101}},{"value":"/ to the elements.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":20488,"byte_end":20508,"line_start":409,"line_end":409,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":20509,"byte_end":20512,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":20513,"byte_end":20523,"line_start":411,"line_end":411,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":20524,"byte_end":20527,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":20528,"byte_end":20622,"line_start":413,"line_end":413,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":20623,"byte_end":20643,"line_start":414,"line_end":414,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":369},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":21451,"byte_end":21463,"line_start":440,"line_end":440,"column_start":8,"column_end":20},"name":"read_map_len","qualname":"::decode::read_map_len","value":"fn read_map_len<R>(&mut R) -> Result<u32, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read up to 5 bytes from the given reader and to decode them as a big-endian u32\n map size.","sig":null,"attributes":[{"value":"/ Attempts to read up to 5 bytes from the given reader and to decode them as a big-endian u32","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":21060,"byte_end":21155,"line_start":429,"line_end":429,"column_start":1,"column_end":96}},{"value":"/ map size.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":21156,"byte_end":21169,"line_start":430,"line_end":430,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":21170,"byte_end":21173,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ Map format family stores a sequence of elements in 1, 3, or 5 bytes of extra bytes in addition","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":21174,"byte_end":21272,"line_start":432,"line_end":432,"column_start":1,"column_end":99}},{"value":"/ to the elements.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":21273,"byte_end":21293,"line_start":433,"line_end":433,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":21294,"byte_end":21297,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":21298,"byte_end":21308,"line_start":435,"line_end":435,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":21309,"byte_end":21312,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":21313,"byte_end":21407,"line_start":437,"line_end":437,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":21408,"byte_end":21428,"line_start":438,"line_end":438,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":371},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":21606,"byte_end":21619,"line_start":445,"line_end":445,"column_start":8,"column_end":21},"name":"marker_to_len","qualname":"::decode::marker_to_len","value":"fn marker_to_len<R>(&mut R, Marker) -> Result<u32, ValueReadError<R::Error>>\nwhere R: RmpRead","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":373},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":22205,"byte_end":22217,"line_start":461,"line_end":461,"column_start":8,"column_end":20},"name":"read_bin_len","qualname":"::decode::read_bin_len","value":"fn read_bin_len<R>(&mut R) -> Result<u32, ValueReadError<R::Error>> where\nR: RmpRead","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read up to 5 bytes from the given reader and to decode them as Binary array length.","sig":null,"attributes":[{"value":"/ Attempts to read up to 5 bytes from the given reader and to decode them as Binary array length.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":21948,"byte_end":22047,"line_start":454,"line_end":454,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":22048,"byte_end":22051,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":22052,"byte_end":22062,"line_start":456,"line_end":456,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":22063,"byte_end":22066,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ This function will silently retry on every EINTR received from the underlying `Read` until","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":22067,"byte_end":22161,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ successful read.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":22162,"byte_end":22182,"line_start":459,"line_end":459,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":375},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encode","qualname":"::encode","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":395},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":458},{"krate":0,"index":476},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":656},{"krate":0,"index":918},{"krate":0,"index":926},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678}],"decl_id":null,"docs":" Provides various functions and structs for MessagePack encoding.\n","sig":null,"attributes":[{"value":"/ Provides various functions and structs for MessagePack encoding.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":50543,"byte_end":50611,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":391},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":61632,"byte_end":61645,"line_start":15,"line_end":15,"column_start":8,"column_end":21},"name":"write_bin_len","qualname":"::encode::bin::write_bin_len","value":"fn write_bin_len<W>(&mut W, u32) -> Result<Marker, ValueWriteError<W::Error>>\nwhere W: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient binary array length implementation to the given\n write, returning the marker used.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write the most efficient binary array length implementation to the given","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":61198,"byte_end":61298,"line_start":5,"line_end":5,"column_start":1,"column_end":101}},{"value":"/ write, returning the marker used.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":61299,"byte_end":61336,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":61337,"byte_end":61340,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is useful when you want to get full control for writing the data itself, for","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":61341,"byte_end":61435,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ example, when using non-blocking socket.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":61436,"byte_end":61480,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":61481,"byte_end":61484,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":61485,"byte_end":61497,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":61498,"byte_end":61501,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":61502,"byte_end":61600,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":61601,"byte_end":61624,"line_start":14,"line_end":14,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":393},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":62436,"byte_end":62445,"line_start":38,"line_end":38,"column_start":8,"column_end":17},"name":"write_bin","qualname":"::encode::bin::write_bin","value":"fn write_bin<W>(&mut W, &[u8]) -> Result<(), ValueWriteError<W::Error>> where\nW: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient binary implementation to the given `Write`.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write the most efficient binary implementation to the given `Write`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":62139,"byte_end":62235,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":62236,"byte_end":62239,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":62240,"byte_end":62252,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":62253,"byte_end":62256,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":62257,"byte_end":62355,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/bin.rs","byte_start":62356,"byte_end":62379,"line_start":36,"line_end":36,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":409},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":63081,"byte_end":63090,"line_start":13,"line_end":13,"column_start":8,"column_end":17},"name":"write_f32","qualname":"::encode::dec::write_f32","value":"fn write_f32<W>(&mut W, f32) -> Result<(), ValueWriteError<W::Error>> where\nW: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `f32` value as a 5-byte sequence into the given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write an `f32` value as a 5-byte sequence into the given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":62743,"byte_end":62834,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":62835,"byte_end":62838,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The first byte becomes the `f32` marker and the others will represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":62839,"byte_end":62929,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":62930,"byte_end":62933,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":62934,"byte_end":62946,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":62947,"byte_end":62950,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":62951,"byte_end":63049,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":63050,"byte_end":63073,"line_start":12,"line_end":12,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":411},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":63586,"byte_end":63595,"line_start":27,"line_end":27,"column_start":8,"column_end":17},"name":"write_f64","qualname":"::encode::dec::write_f64","value":"fn write_f64<W>(&mut W, f64) -> Result<(), ValueWriteError<W::Error>> where\nW: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `f64` value as a 9-byte sequence into the given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write an `f64` value as a 9-byte sequence into the given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":63248,"byte_end":63339,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":63340,"byte_end":63343,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The first byte becomes the `f64` marker and the others will represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":63344,"byte_end":63434,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":63435,"byte_end":63438,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":63439,"byte_end":63451,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":63452,"byte_end":63455,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":63456,"byte_end":63554,"line_start":25,"line_end":25,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/dec.rs","byte_start":63555,"byte_end":63578,"line_start":26,"line_end":26,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":445},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64816,"byte_end":64826,"line_start":29,"line_end":29,"column_start":8,"column_end":18},"name":"write_nfix","qualname":"::encode::sint::write_nfix","value":"fn write_nfix<W>(&mut W, i8) -> Result<(), W::Error> where W: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write a negative small integer value as a negative fixnum into the\n given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write a negative small integer value as a negative fixnum into the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":63914,"byte_end":64008,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64009,"byte_end":64025,"line_start":8,"line_end":8,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64026,"byte_end":64029,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, a negative fixed integer value is represented using","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64030,"byte_end":64129,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/ a single byte in `[0xe0; 0xff]` range inclusively, prepended with a special marker mask.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64130,"byte_end":64222,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64223,"byte_end":64226,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The function is **strict** with the input arguments - it is the user's responsibility to check","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64227,"byte_end":64325,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ if the value fits in the described range, otherwise it will panic.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64326,"byte_end":64396,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64397,"byte_end":64400,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If you are not sure if the value fits in the given range use `write_sint` instead, which","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64401,"byte_end":64493,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ automatically selects the most compact integer representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64494,"byte_end":64560,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64561,"byte_end":64564,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64565,"byte_end":64577,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64578,"byte_end":64581,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function will return `FixedValueWriteError` on any I/O error occurred while writing the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64582,"byte_end":64678,"line_start":21,"line_end":21,"column_start":1,"column_end":97}},{"value":"/ positive integer marker.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64679,"byte_end":64707,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64708,"byte_end":64711,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64712,"byte_end":64724,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64725,"byte_end":64728,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Panics if `val` does not fit in `[-32; 0)` range.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64729,"byte_end":64782,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64783,"byte_end":64792,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"track_caller","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64793,"byte_end":64808,"line_start":28,"line_end":28,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":448},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66108,"byte_end":66116,"line_start":63,"line_end":63,"column_start":8,"column_end":16},"name":"write_i8","qualname":"::encode::sint::write_i8","value":"fn write_i8<W>(&mut W, i8) -> Result<(), ValueWriteError<W::Error>> where\nW: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `i8` value as a 2-byte sequence into the given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write an `i8` value as a 2-byte sequence into the given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":64998,"byte_end":65088,"line_start":35,"line_end":35,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65089,"byte_end":65092,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The first byte becomes the marker and the second one will represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65093,"byte_end":65181,"line_start":37,"line_end":37,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65182,"byte_end":65185,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Note, that this function will encode the given value in 2-byte sequence no matter what, even if","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65186,"byte_end":65285,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"/ the value can be represented using single byte as a fixnum. Also note, that the first byte will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65286,"byte_end":65385,"line_start":40,"line_end":40,"column_start":1,"column_end":100}},{"value":"/ always be the i8 marker (`0xd0`).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65386,"byte_end":65423,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65424,"byte_end":65427,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ If you need to fit the given buffer efficiently use `write_sint` instead, which automatically","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65428,"byte_end":65525,"line_start":43,"line_end":43,"column_start":1,"column_end":98}},{"value":"/ selects the appropriate integer representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65526,"byte_end":65577,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65578,"byte_end":65581,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65582,"byte_end":65594,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65595,"byte_end":65598,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65599,"byte_end":65697,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65698,"byte_end":65721,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65722,"byte_end":65725,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65726,"byte_end":65740,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65741,"byte_end":65744,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65745,"byte_end":65752,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ let mut buf = [0x00, 0x00];","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65753,"byte_end":65784,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65785,"byte_end":65788,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ rmp::encode::write_i8(&mut &mut buf[..], 42).ok().unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65789,"byte_end":65852,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/ assert_eq!([0xd0, 0x2a], buf);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65853,"byte_end":65887,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65888,"byte_end":65891,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Note, that -18 can be represented simply as `[0xee]`, but the function emits 2-byte sequence.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65892,"byte_end":65992,"line_start":59,"line_end":59,"column_start":1,"column_end":101}},{"value":"/ rmp::encode::write_i8(&mut &mut buf[..], -18).ok().unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":65993,"byte_end":66057,"line_start":60,"line_end":60,"column_start":1,"column_end":65}},{"value":"/ assert_eq!([0xd0, 0xee], buf);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66058,"byte_end":66092,"line_start":61,"line_end":61,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66093,"byte_end":66100,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":450},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67000,"byte_end":67009,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"write_i16","qualname":"::encode::sint::write_i16","value":"fn write_i16<W>(&mut W, i16) -> Result<(), ValueWriteError<W::Error>> where\nW: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `i16` value as a 3-byte sequence into the given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write an `i16` value as a 3-byte sequence into the given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66271,"byte_end":66362,"line_start":69,"line_end":69,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66363,"byte_end":66366,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The first byte becomes the marker and the others will represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66367,"byte_end":66451,"line_start":71,"line_end":71,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66452,"byte_end":66455,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Note, that this function will encode the given value in 3-byte sequence no matter what, even if","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66456,"byte_end":66555,"line_start":73,"line_end":73,"column_start":1,"column_end":100}},{"value":"/ the value can be represented using single byte as a fixnum. Also note, that the first byte will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66556,"byte_end":66655,"line_start":74,"line_end":74,"column_start":1,"column_end":100}},{"value":"/ always be the i16 marker (`0xd1`).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66656,"byte_end":66694,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66695,"byte_end":66698,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If you need to fit the given buffer efficiently use `write_sint` instead, which automatically","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66699,"byte_end":66796,"line_start":77,"line_end":77,"column_start":1,"column_end":98}},{"value":"/ selects the appropriate integer representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66797,"byte_end":66848,"line_start":78,"line_end":78,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66849,"byte_end":66852,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66853,"byte_end":66865,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66866,"byte_end":66869,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66870,"byte_end":66968,"line_start":82,"line_end":82,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":66969,"byte_end":66992,"line_start":83,"line_end":83,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":452},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67896,"byte_end":67905,"line_start":105,"line_end":105,"column_start":8,"column_end":17},"name":"write_i32","qualname":"::encode::sint::write_i32","value":"fn write_i32<W>(&mut W, i32) -> Result<(), ValueWriteError<W::Error>> where\nW: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `i32` value as a 5-byte sequence into the given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write an `i32` value as a 5-byte sequence into the given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67167,"byte_end":67258,"line_start":90,"line_end":90,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67259,"byte_end":67262,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ The first byte becomes the marker and the others will represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67263,"byte_end":67347,"line_start":92,"line_end":92,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67348,"byte_end":67351,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Note, that this function will encode the given value in 5-byte sequence no matter what, even if","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67352,"byte_end":67451,"line_start":94,"line_end":94,"column_start":1,"column_end":100}},{"value":"/ the value can be represented using single byte as a fixnum. Also note, that the first byte will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67452,"byte_end":67551,"line_start":95,"line_end":95,"column_start":1,"column_end":100}},{"value":"/ always be the i32 marker (`0xd2`).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67552,"byte_end":67590,"line_start":96,"line_end":96,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67591,"byte_end":67594,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ If you need to fit the given buffer efficiently use `write_sint` instead, which automatically","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67595,"byte_end":67692,"line_start":98,"line_end":98,"column_start":1,"column_end":98}},{"value":"/ selects the appropriate integer representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67693,"byte_end":67744,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67745,"byte_end":67748,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67749,"byte_end":67761,"line_start":101,"line_end":101,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67762,"byte_end":67765,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67766,"byte_end":67864,"line_start":103,"line_end":103,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":67865,"byte_end":67888,"line_start":104,"line_end":104,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":454},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68792,"byte_end":68801,"line_start":126,"line_end":126,"column_start":8,"column_end":17},"name":"write_i64","qualname":"::encode::sint::write_i64","value":"fn write_i64<W>(&mut W, i64) -> Result<(), ValueWriteError<W::Error>> where\nW: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `i64` value as a 9-byte sequence into the given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write an `i64` value as a 9-byte sequence into the given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68063,"byte_end":68154,"line_start":111,"line_end":111,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68155,"byte_end":68158,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The first byte becomes the marker and the others will represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68159,"byte_end":68243,"line_start":113,"line_end":113,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68244,"byte_end":68247,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Note, that this function will encode the given value in 9-byte sequence no matter what, even if","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68248,"byte_end":68347,"line_start":115,"line_end":115,"column_start":1,"column_end":100}},{"value":"/ the value can be represented using single byte as a fixnum. Also note, that the first byte will","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68348,"byte_end":68447,"line_start":116,"line_end":116,"column_start":1,"column_end":100}},{"value":"/ always be the i16 marker (`0xd3`).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68448,"byte_end":68486,"line_start":117,"line_end":117,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68487,"byte_end":68490,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ If you need to fit the given buffer efficiently use `write_sint` instead, which automatically","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68491,"byte_end":68588,"line_start":119,"line_end":119,"column_start":1,"column_end":98}},{"value":"/ selects the appropriate integer representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68589,"byte_end":68640,"line_start":120,"line_end":120,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68641,"byte_end":68644,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68645,"byte_end":68657,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68658,"byte_end":68661,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68662,"byte_end":68760,"line_start":124,"line_end":124,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68761,"byte_end":68784,"line_start":125,"line_end":125,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":456},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69766,"byte_end":69776,"line_start":149,"line_end":149,"column_start":8,"column_end":18},"name":"write_sint","qualname":"::encode::sint::write_sint","value":"fn write_sint<W>(&mut W, i64) -> Result<Marker, ValueWriteError<W::Error>>\nwhere W: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `i64` value into the given write using the most efficient\n representation, returning the marker used.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write an `i64` value into the given write using the most efficient","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":68959,"byte_end":69053,"line_start":132,"line_end":132,"column_start":1,"column_end":95}},{"value":"/ representation, returning the marker used.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69054,"byte_end":69100,"line_start":133,"line_end":133,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69101,"byte_end":69104,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ This function obeys the MessagePack specification, which requires that the serializer SHOULD use","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69105,"byte_end":69205,"line_start":135,"line_end":135,"column_start":1,"column_end":101}},{"value":"/ the format which represents the data in the smallest number of bytes, with the exception of","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69206,"byte_end":69301,"line_start":136,"line_end":136,"column_start":1,"column_end":96}},{"value":"/ sized/unsized types.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69302,"byte_end":69326,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69327,"byte_end":69330,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ Note, that the function will **always** use signed integer representation even if the value can","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69331,"byte_end":69430,"line_start":139,"line_end":139,"column_start":1,"column_end":100}},{"value":"/ be more efficiently represented using unsigned integer encoding.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69431,"byte_end":69499,"line_start":140,"line_end":140,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69500,"byte_end":69503,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ The first byte becomes the marker and the others (if present, up to 9) will represent the data","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69504,"byte_end":69602,"line_start":142,"line_end":142,"column_start":1,"column_end":99}},{"value":"/ itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69603,"byte_end":69614,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69615,"byte_end":69618,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69619,"byte_end":69631,"line_start":145,"line_end":145,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69632,"byte_end":69635,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69636,"byte_end":69734,"line_start":147,"line_end":147,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/sint.rs","byte_start":69735,"byte_end":69758,"line_start":148,"line_end":148,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":472},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":71326,"byte_end":71339,"line_start":12,"line_end":12,"column_start":8,"column_end":21},"name":"write_str_len","qualname":"::encode::str::write_str_len","value":"fn write_str_len<W>(&mut W, u32) -> Result<Marker, ValueWriteError<W::Error>>\nwhere W: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient string length implementation to the given\n write, returning the marker used.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write the most efficient string length implementation to the given","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":71042,"byte_end":71136,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ write, returning the marker used.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":71137,"byte_end":71174,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":71175,"byte_end":71178,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":71179,"byte_end":71191,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":71192,"byte_end":71195,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":71196,"byte_end":71294,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":71295,"byte_end":71318,"line_start":11,"line_end":11,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":474},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":72240,"byte_end":72249,"line_start":39,"line_end":39,"column_start":8,"column_end":17},"name":"write_str","qualname":"::encode::str::write_str","value":"fn write_str<W>(&mut W, &str) -> Result<(), ValueWriteError<W::Error>> where\nW: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient string binary representation to the\n given `Write`.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write the most efficient string binary representation to the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":71932,"byte_end":72020,"line_start":31,"line_end":31,"column_start":1,"column_end":89}},{"value":"/ given `Write`.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":72021,"byte_end":72039,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":72040,"byte_end":72043,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":72044,"byte_end":72056,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":72057,"byte_end":72060,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":72061,"byte_end":72159,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/str.rs","byte_start":72160,"byte_end":72183,"line_start":37,"line_end":37,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73424,"byte_end":73434,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"write_pfix","qualname":"::encode::uint::write_pfix","value":"fn write_pfix<W>(&mut W, u8) -> Result<(), W::Error> where W: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an unsigned small integer value as a positive fixint into the\n given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write an unsigned small integer value as a positive fixint into the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":72550,"byte_end":72645,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"/ given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":72646,"byte_end":72662,"line_start":6,"line_end":6,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":72663,"byte_end":72666,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, a positive fixed integer value is represented using","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":72667,"byte_end":72766,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ a single byte in `[0x00; 0x7f]` range inclusively, prepended with a special marker mask.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":72767,"byte_end":72859,"line_start":9,"line_end":9,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":72860,"byte_end":72863,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The function is **strict** with the input arguments - it is the user's responsibility to check","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":72864,"byte_end":72962,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/ if the value fits in the described range, otherwise it will panic.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":72963,"byte_end":73033,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73034,"byte_end":73037,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you are not sure if the value fits in the given range use `write_uint` instead, which","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73038,"byte_end":73130,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/ automatically selects the most compact integer representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73131,"byte_end":73197,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73198,"byte_end":73201,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73202,"byte_end":73214,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73215,"byte_end":73218,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This function will return `FixedValueWriteError` on any I/O error occurred while writing the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73219,"byte_end":73315,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ positive integer marker.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73316,"byte_end":73344,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73345,"byte_end":73348,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73349,"byte_end":73361,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73362,"byte_end":73365,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Panics if `val` is greater than 127.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73366,"byte_end":73406,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73407,"byte_end":73416,"line_start":25,"line_end":25,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":494},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74634,"byte_end":74642,"line_start":58,"line_end":58,"column_start":8,"column_end":16},"name":"write_u8","qualname":"::encode::uint::write_u8","value":"fn write_u8<W>(&mut W, u8) -> Result<(), ValueWriteError<W::Error>> where\nW: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `u8` value as a 2-byte sequence into the given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write an `u8` value as a 2-byte sequence into the given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73594,"byte_end":73684,"line_start":32,"line_end":32,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73685,"byte_end":73688,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The first byte becomes the marker and the second one will represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73689,"byte_end":73777,"line_start":34,"line_end":34,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73778,"byte_end":73781,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note, that this function will encode the given value in 2-byte sequence no matter what, even if","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73782,"byte_end":73881,"line_start":36,"line_end":36,"column_start":1,"column_end":100}},{"value":"/ the value can be represented using single byte as a positive fixnum.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73882,"byte_end":73954,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73955,"byte_end":73958,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ If you need to fit the given buffer efficiently use `write_uint` instead, which automatically","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":73959,"byte_end":74056,"line_start":39,"line_end":39,"column_start":1,"column_end":98}},{"value":"/ selects the appropriate integer representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74057,"byte_end":74108,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74109,"byte_end":74112,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74113,"byte_end":74125,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74126,"byte_end":74129,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74130,"byte_end":74228,"line_start":44,"line_end":44,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74229,"byte_end":74252,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74253,"byte_end":74256,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74257,"byte_end":74271,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74272,"byte_end":74279,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ let mut buf = [0x00, 0x00];","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74280,"byte_end":74311,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74312,"byte_end":74315,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ rmp::encode::write_u8(&mut &mut buf[..], 146).ok().unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74316,"byte_end":74380,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ assert_eq!([0xcc, 0x92], buf);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74381,"byte_end":74415,"line_start":52,"line_end":52,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74416,"byte_end":74419,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // Note, that 42 can be represented simply as `[0x2a]`, but the function emits 2-byte sequence.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74420,"byte_end":74519,"line_start":54,"line_end":54,"column_start":1,"column_end":100}},{"value":"/ rmp::encode::write_u8(&mut &mut buf[..], 42).ok().unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74520,"byte_end":74583,"line_start":55,"line_end":55,"column_start":1,"column_end":64}},{"value":"/ assert_eq!([0xcc, 0x2a], buf);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74584,"byte_end":74618,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74619,"byte_end":74626,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":496},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75469,"byte_end":75478,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"write_u16","qualname":"::encode::uint::write_u16","value":"fn write_u16<W>(&mut W, u16) -> Result<(), ValueWriteError<W::Error>> where\nW: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `u16` value strictly as a 3-byte sequence into the given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write an `u16` value strictly as a 3-byte sequence into the given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74797,"byte_end":74897,"line_start":64,"line_end":64,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74898,"byte_end":74901,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The first byte becomes the marker and the others will represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74902,"byte_end":74986,"line_start":66,"line_end":66,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74987,"byte_end":74990,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Note, that this function will encode the given value in 3-byte sequence no matter what, even if","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":74991,"byte_end":75090,"line_start":68,"line_end":68,"column_start":1,"column_end":100}},{"value":"/ the value can be represented using single byte as a positive fixnum.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75091,"byte_end":75163,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75164,"byte_end":75167,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ If you need to fit the given buffer efficiently use `write_uint` instead, which automatically","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75168,"byte_end":75265,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/ selects the appropriate integer representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75266,"byte_end":75317,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75318,"byte_end":75321,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75322,"byte_end":75334,"line_start":74,"line_end":74,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75335,"byte_end":75338,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75339,"byte_end":75437,"line_start":76,"line_end":76,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75438,"byte_end":75461,"line_start":77,"line_end":77,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":498},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76308,"byte_end":76317,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"write_u32","qualname":"::encode::uint::write_u32","value":"fn write_u32<W>(&mut W, u32) -> Result<(), ValueWriteError<W::Error>> where\nW: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `u32` value strictly as a 5-byte sequence into the given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write an `u32` value strictly as a 5-byte sequence into the given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75636,"byte_end":75736,"line_start":84,"line_end":84,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75737,"byte_end":75740,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ The first byte becomes the marker and the others will represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75741,"byte_end":75825,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75826,"byte_end":75829,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note, that this function will encode the given value in 5-byte sequence no matter what, even if","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75830,"byte_end":75929,"line_start":88,"line_end":88,"column_start":1,"column_end":100}},{"value":"/ the value can be represented using single byte as a positive fixnum.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":75930,"byte_end":76002,"line_start":89,"line_end":89,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76003,"byte_end":76006,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ If you need to fit the given buffer efficiently use `write_uint` instead, which automatically","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76007,"byte_end":76104,"line_start":91,"line_end":91,"column_start":1,"column_end":98}},{"value":"/ selects the appropriate integer representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76105,"byte_end":76156,"line_start":92,"line_end":92,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76157,"byte_end":76160,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76161,"byte_end":76173,"line_start":94,"line_end":94,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76174,"byte_end":76177,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76178,"byte_end":76276,"line_start":96,"line_end":96,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76277,"byte_end":76300,"line_start":97,"line_end":97,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":500},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77147,"byte_end":77156,"line_start":118,"line_end":118,"column_start":8,"column_end":17},"name":"write_u64","qualname":"::encode::uint::write_u64","value":"fn write_u64<W>(&mut W, u64) -> Result<(), ValueWriteError<W::Error>> where\nW: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `u64` value strictly as a 9-byte sequence into the given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write an `u64` value strictly as a 9-byte sequence into the given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76475,"byte_end":76575,"line_start":104,"line_end":104,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76576,"byte_end":76579,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ The first byte becomes the marker and the others will represent the data itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76580,"byte_end":76664,"line_start":106,"line_end":106,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76665,"byte_end":76668,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Note, that this function will encode the given value in 9-byte sequence no matter what, even if","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76669,"byte_end":76768,"line_start":108,"line_end":108,"column_start":1,"column_end":100}},{"value":"/ the value can be represented using single byte as a positive fixnum.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76769,"byte_end":76841,"line_start":109,"line_end":109,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76842,"byte_end":76845,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ If you need to fit the given buffer efficiently use `write_uint` instead, which automatically","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76846,"byte_end":76943,"line_start":111,"line_end":111,"column_start":1,"column_end":98}},{"value":"/ selects the appropriate integer representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76944,"byte_end":76995,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":76996,"byte_end":76999,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77000,"byte_end":77012,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77013,"byte_end":77016,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77017,"byte_end":77115,"line_start":116,"line_end":116,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77116,"byte_end":77139,"line_start":117,"line_end":117,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77901,"byte_end":77911,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"write_uint","qualname":"::encode::uint::write_uint","value":"fn write_uint<W>(&mut W, u64) -> Result<Marker, ValueWriteError<W::Error>>\nwhere W: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write an `u64` value into the given write using the most efficient\n representation, returning the marker used.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write an `u64` value into the given write using the most efficient","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77314,"byte_end":77408,"line_start":124,"line_end":124,"column_start":1,"column_end":95}},{"value":"/ representation, returning the marker used.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77409,"byte_end":77455,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77456,"byte_end":77459,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ This function obeys the MessagePack specification, which requires that the serializer SHOULD use","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77460,"byte_end":77560,"line_start":127,"line_end":127,"column_start":1,"column_end":101}},{"value":"/ the format which represents the data in the smallest number of bytes.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77561,"byte_end":77634,"line_start":128,"line_end":128,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77635,"byte_end":77638,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ The first byte becomes the marker and the others (if present, up to 9) will represent the data","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77639,"byte_end":77737,"line_start":130,"line_end":130,"column_start":1,"column_end":99}},{"value":"/ itself.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77738,"byte_end":77749,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77750,"byte_end":77753,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77754,"byte_end":77766,"line_start":133,"line_end":133,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77767,"byte_end":77770,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77771,"byte_end":77869,"line_start":135,"line_end":135,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/uint.rs","byte_start":77870,"byte_end":77893,"line_start":136,"line_end":136,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":583},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::encode::buffer","value":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":591},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":609}],"decl_id":null,"docs":" Implementation of the [ByteBuf] type\n","sig":null,"attributes":[{"value":"/ Implementation of the [ByteBuf] type","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":78474,"byte_end":78514,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":590},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":79364,"byte_end":79388,"line_start":28,"line_end":28,"column_start":10,"column_end":34},"name":"FixedBufCapacityOverflow","qualname":"::encode::buffer::FixedBufCapacityOverflow","value":"std::io::Error","parent":null,"children":[],"decl_id":null,"docs":" An error returned from writing to `&mut [u8]`","sig":null,"attributes":[{"value":"/ An error returned from writing to `&mut [u8]`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":79212,"byte_end":79261,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":79262,"byte_end":79265,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Aliased for compatibility with `no_std` mode.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":79266,"byte_end":79315,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":79316,"byte_end":79339,"line_start":26,"line_end":26,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":864},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81271,"byte_end":81278,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"ByteBuf","qualname":"::encode::buffer::ByteBuf","value":"ByteBuf {  }","parent":null,"children":[{"krate":0,"index":865}],"decl_id":null,"docs":" A wrapper around `Vec<u8>` to serialize more efficiently.","sig":null,"attributes":[{"value":"/ A wrapper around `Vec<u8>` to serialize more efficiently.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":80770,"byte_end":80831,"line_start":71,"line_end":71,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":80832,"byte_end":80835,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This has a specialized implementation of `RmpWrite`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":80836,"byte_end":80891,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/ It gives `std::convert::Infailable` for errors.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":80892,"byte_end":80943,"line_start":74,"line_end":74,"column_start":1,"column_end":52}},{"value":"/ This is because writing to `Vec<T>` can only fail due to allocation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":80944,"byte_end":81016,"line_start":75,"line_end":75,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81017,"byte_end":81020,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This has the additional benefit of working on `#[no_std]`","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81021,"byte_end":81082,"line_start":77,"line_end":77,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81083,"byte_end":81086,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ See also [serde_bytes::ByteBuf](https://docs.rs/serde_bytes/0.11/serde_bytes/struct.ByteBuf.html)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81087,"byte_end":81188,"line_start":79,"line_end":79,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81380,"byte_end":81383,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<ByteBuf>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new empty buffer\n","sig":null,"attributes":[{"value":"/ Construct a new empty buffer","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81322,"byte_end":81354,"line_start":85,"line_end":85,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81359,"byte_end":81368,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81577,"byte_end":81590,"line_start":94,"line_end":94,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ByteBuf>::with_capacity","value":"fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new buffer with the specified capacity","sig":null,"attributes":[{"value":"/ Construct a new buffer with the specified capacity","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81444,"byte_end":81498,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81503,"byte_end":81506,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ See [Vec::with_capacity] for details","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81511,"byte_end":81551,"line_start":92,"line_end":92,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81556,"byte_end":81565,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81757,"byte_end":81765,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ByteBuf>::into_vec","value":"fn into_vec(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the underlying buffer of this vector\n","sig":null,"attributes":[{"value":"/ Unwrap the underlying buffer of this vector","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81684,"byte_end":81731,"line_start":97,"line_end":97,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81736,"byte_end":81745,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81884,"byte_end":81892,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ByteBuf>::from_vec","value":"fn from_vec(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrap the specified vector as a [ByteBuf]\n","sig":null,"attributes":[{"value":"/ Wrap the specified vector as a [ByteBuf]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81814,"byte_end":81858,"line_start":102,"line_end":102,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81863,"byte_end":81872,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82024,"byte_end":82030,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"name":"as_vec","qualname":"<ByteBuf>::as_vec","value":"fn as_vec(&Self) -> &Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this type as a [Vec]\n","sig":null,"attributes":[{"value":"/ Get a reference to this type as a [Vec]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81955,"byte_end":81998,"line_start":107,"line_end":107,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82003,"byte_end":82012,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82159,"byte_end":82169,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"as_mut_vec","qualname":"<ByteBuf>::as_mut_vec","value":"fn as_mut_vec(&mut Self) -> &mut Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this type as a [Vec]\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to this type as a [Vec]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82082,"byte_end":82133,"line_start":112,"line_end":112,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82138,"byte_end":82147,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82321,"byte_end":82329,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<ByteBuf>::as_slice","value":"fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to this type as a slice of bytes (`&[u8]`)\n","sig":null,"attributes":[{"value":"/ Get a reference to this type as a slice of bytes (`&[u8]`)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82233,"byte_end":82295,"line_start":117,"line_end":117,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82300,"byte_end":82309,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82414,"byte_end":82420,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<ByteBuf as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &[u8]","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82522,"byte_end":82528,"line_start":130,"line_end":130,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<ByteBuf as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Vec<u8>","parent":{"krate":2,"index":3074},"children":[],"decl_id":{"krate":2,"index":3076},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82505,"byte_end":82514,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82633,"byte_end":82639,"line_start":136,"line_end":136,"column_start":8,"column_end":14},"name":"as_mut","qualname":"<ByteBuf as std::convert::AsMut>::as_mut","value":"fn as_mut(&mut Self) -> &mut Vec<u8>","parent":{"krate":2,"index":3077},"children":[],"decl_id":{"krate":2,"index":3079},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82616,"byte_end":82625,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82755,"byte_end":82759,"line_start":142,"line_end":142,"column_start":8,"column_end":12},"name":"from","qualname":"<Vec<u8> as std::convert::From>::from","value":"fn from(ByteBuf) -> Self","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82738,"byte_end":82747,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82864,"byte_end":82868,"line_start":148,"line_end":148,"column_start":8,"column_end":12},"name":"from","qualname":"<ByteBuf as std::convert::From>::from","value":"fn from(Vec<u8>) -> Self","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82847,"byte_end":82856,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":83024,"byte_end":83032,"line_start":157,"line_end":157,"column_start":8,"column_end":16},"name":"write_u8","qualname":"<ByteBuf as encode::RmpWrite>::write_u8","value":"fn write_u8(&mut Self, u8) -> Result<(), Self::Error>","parent":{"krate":0,"index":650},"children":[],"decl_id":{"krate":0,"index":652},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":83007,"byte_end":83016,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":83155,"byte_end":83166,"line_start":163,"line_end":163,"column_start":8,"column_end":19},"name":"write_bytes","qualname":"<ByteBuf as encode::RmpWrite>::write_bytes","value":"fn write_bytes(&mut Self, &[u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":650},"children":[],"decl_id":{"krate":0,"index":653},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":83138,"byte_end":83147,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":619},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51403,"byte_end":51414,"line_start":35,"line_end":35,"column_start":11,"column_end":22},"name":"RmpWriteErr","qualname":"::encode::RmpWriteErr","value":"RmpWriteErr: Display + Debug + crate::errors::MaybeErrBound + 'static","parent":null,"children":[],"decl_id":null,"docs":" The error type for operations on the [RmpWrite] trait.","sig":null,"attributes":[{"value":"/ The error type for operations on the [RmpWrite] trait.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51224,"byte_end":51282,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51283,"byte_end":51286,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ For [std::io::Write], this is [std::io::Error]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51287,"byte_end":51337,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/ For [ByteBuf], this is [core::convert::Infallible]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51338,"byte_end":51392,"line_start":34,"line_end":34,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":631},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52152,"byte_end":52166,"line_start":58,"line_end":58,"column_start":12,"column_end":26},"name":"DataWriteError","qualname":"::encode::DataWriteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned from primitive values write functions.\n","sig":null,"attributes":[{"value":"/ An error returned from primitive values write functions.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52065,"byte_end":52125,"line_start":56,"line_end":56,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52274,"byte_end":52278,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"from","qualname":"<DataWriteError<E> as std::convert::From>::from","value":"fn from(E) -> DataWriteError<E>","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52245,"byte_end":52252,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52257,"byte_end":52266,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":638},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52809,"byte_end":52818,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"write_nil","qualname":"::encode::write_nil","value":"fn write_nil<W>(&mut W) -> Result<(), W::Error> where W: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write a nil value into the given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write a nil value into the given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52348,"byte_end":52415,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52416,"byte_end":52419,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, a nil value is represented as a single `0xc0` byte.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52420,"byte_end":52519,"line_start":71,"line_end":71,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52520,"byte_end":52523,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52524,"byte_end":52536,"line_start":73,"line_end":73,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52537,"byte_end":52540,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ This function will return `Error` on any I/O error occurred while writing the nil marker.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52541,"byte_end":52634,"line_start":75,"line_end":75,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52635,"byte_end":52638,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52639,"byte_end":52653,"line_start":77,"line_end":77,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52654,"byte_end":52657,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52658,"byte_end":52665,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52666,"byte_end":52695,"line_start":80,"line_end":80,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52696,"byte_end":52699,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ rmp::encode::write_nil(&mut buf).unwrap();","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52700,"byte_end":52746,"line_start":82,"line_end":82,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52747,"byte_end":52750,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec![0xc0], buf);","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52751,"byte_end":52783,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52784,"byte_end":52791,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52792,"byte_end":52801,"line_start":86,"line_end":86,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":641},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53261,"byte_end":53271,"line_start":101,"line_end":101,"column_start":8,"column_end":18},"name":"write_bool","qualname":"::encode::write_bool","value":"fn write_bool<W>(&mut W, bool) -> Result<(), W::Error> where W: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write a bool value into the given write.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write a bool value into the given write.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52925,"byte_end":52993,"line_start":91,"line_end":91,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52994,"byte_end":52997,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ According to the MessagePack specification, an encoded boolean value is represented as a single","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52998,"byte_end":53097,"line_start":93,"line_end":93,"column_start":1,"column_end":100}},{"value":"/ byte.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53098,"byte_end":53107,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53108,"byte_end":53111,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53112,"byte_end":53124,"line_start":96,"line_end":96,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53125,"byte_end":53128,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Each call to this function may generate an I/O error indicating that the operation could not be","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53129,"byte_end":53228,"line_start":98,"line_end":98,"column_start":1,"column_end":100}},{"value":"/ completed.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53229,"byte_end":53243,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53244,"byte_end":53253,"line_start":100,"line_end":100,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":645},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53475,"byte_end":53481,"line_start":108,"line_end":108,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::encode::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":650},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54714,"byte_end":54722,"line_start":144,"line_end":144,"column_start":11,"column_end":19},"name":"RmpWrite","qualname":"::encode::RmpWrite","value":"RmpWrite: sealed::Sealed","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":886},{"krate":0,"index":890},{"krate":0,"index":894},{"krate":0,"index":898},{"krate":0,"index":902},{"krate":0,"index":906},{"krate":0,"index":910},{"krate":0,"index":914}],"decl_id":null,"docs":" A type that `rmp` supports writing into.","sig":null,"attributes":[{"value":"/ A type that `rmp` supports writing into.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54366,"byte_end":54410,"line_start":136,"line_end":136,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54411,"byte_end":54414,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The methods of this trait should be considered an implementation detail (for now).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54415,"byte_end":54501,"line_start":138,"line_end":138,"column_start":1,"column_end":87}},{"value":"/ It is currently sealed (can not be implemented by the user).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54502,"byte_end":54566,"line_start":139,"line_end":139,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54567,"byte_end":54570,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ See also [std::uo::Write] and [byteorder::WriteBytesExt]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54571,"byte_end":54631,"line_start":141,"line_end":141,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54632,"byte_end":54635,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Its primary implementations are [std::io::Write] and [ByteBuf].","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54636,"byte_end":54703,"line_start":143,"line_end":143,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":651},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54750,"byte_end":54755,"line_start":145,"line_end":145,"column_start":10,"column_end":15},"name":"Error","qualname":"::encode::RmpWrite::Error","value":"type Error: RmpWriteErr;","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54835,"byte_end":54843,"line_start":149,"line_end":149,"column_start":8,"column_end":16},"name":"write_u8","qualname":"::encode::RmpWrite::write_u8","value":"fn write_u8(&mut Self, u8) -> Result<(), Self::Error>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Write a single byte to this stream\n","sig":null,"attributes":[{"value":"/ Write a single byte to this stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54775,"byte_end":54813,"line_start":147,"line_end":147,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54818,"byte_end":54827,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55137,"byte_end":55148,"line_start":158,"line_end":158,"column_start":8,"column_end":19},"name":"write_bytes","qualname":"::encode::RmpWrite::write_bytes","value":"fn write_bytes(&mut Self, &[u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Write a slice of bytes to the underlying stream","sig":null,"attributes":[{"value":"/ Write a slice of bytes to the underlying stream","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54960,"byte_end":55011,"line_start":154,"line_end":154,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55016,"byte_end":55019,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This will either write all the bytes or return an error.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55024,"byte_end":55084,"line_start":156,"line_end":156,"column_start":5,"column_end":65}},{"value":"/ See also [std::io::Write::write_all]","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55089,"byte_end":55129,"line_start":157,"line_end":157,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55378,"byte_end":55391,"line_start":165,"line_end":165,"column_start":8,"column_end":21},"name":"write_data_u8","qualname":"::encode::RmpWrite::write_data_u8","value":"fn write_data_u8(&mut Self, u8) -> Result<(), DataWriteError<Self::Error>>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Write a single (signed) byte to this stream.\n","sig":null,"attributes":[{"value":"/ Write a single (signed) byte to this stream.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55289,"byte_end":55337,"line_start":162,"line_end":162,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55342,"byte_end":55351,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55607,"byte_end":55620,"line_start":171,"line_end":171,"column_start":8,"column_end":21},"name":"write_data_i8","qualname":"::encode::RmpWrite::write_data_i8","value":"fn write_data_i8(&mut Self, i8) -> Result<(), DataWriteError<Self::Error>>","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Write a single (signed) byte to this stream.\n","sig":null,"attributes":[{"value":"/ Write a single (signed) byte to this stream.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55518,"byte_end":55566,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55571,"byte_end":55580,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55767,"byte_end":55781,"line_start":176,"line_end":176,"column_start":9,"column_end":23},"name":"write_data_u16","qualname":"::encode::RmpWrite::write_data_u16","value":"fn write_data_u16(&mut Self, u16) -> Result<(), DataWriteError<Self::Error>>\nwhere Self: Sized","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53857,"byte_end":53866,"line_start":122,"line_end":122,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55798,"byte_end":55812,"line_start":177,"line_end":177,"column_start":9,"column_end":23},"name":"write_data_u32","qualname":"::encode::RmpWrite::write_data_u32","value":"fn write_data_u32(&mut Self, u32) -> Result<(), DataWriteError<Self::Error>>\nwhere Self: Sized","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53857,"byte_end":53866,"line_start":122,"line_end":122,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55829,"byte_end":55843,"line_start":178,"line_end":178,"column_start":9,"column_end":23},"name":"write_data_u64","qualname":"::encode::RmpWrite::write_data_u64","value":"fn write_data_u64(&mut Self, u64) -> Result<(), DataWriteError<Self::Error>>\nwhere Self: Sized","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53857,"byte_end":53866,"line_start":122,"line_end":122,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55860,"byte_end":55874,"line_start":179,"line_end":179,"column_start":9,"column_end":23},"name":"write_data_i16","qualname":"::encode::RmpWrite::write_data_i16","value":"fn write_data_i16(&mut Self, i16) -> Result<(), DataWriteError<Self::Error>>\nwhere Self: Sized","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53857,"byte_end":53866,"line_start":122,"line_end":122,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55891,"byte_end":55905,"line_start":180,"line_end":180,"column_start":9,"column_end":23},"name":"write_data_i32","qualname":"::encode::RmpWrite::write_data_i32","value":"fn write_data_i32(&mut Self, i32) -> Result<(), DataWriteError<Self::Error>>\nwhere Self: Sized","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53857,"byte_end":53866,"line_start":122,"line_end":122,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55922,"byte_end":55936,"line_start":181,"line_end":181,"column_start":9,"column_end":23},"name":"write_data_i64","qualname":"::encode::RmpWrite::write_data_i64","value":"fn write_data_i64(&mut Self, i64) -> Result<(), DataWriteError<Self::Error>>\nwhere Self: Sized","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53857,"byte_end":53866,"line_start":122,"line_end":122,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55953,"byte_end":55967,"line_start":182,"line_end":182,"column_start":9,"column_end":23},"name":"write_data_f32","qualname":"::encode::RmpWrite::write_data_f32","value":"fn write_data_f32(&mut Self, f32) -> Result<(), DataWriteError<Self::Error>>\nwhere Self: Sized","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53857,"byte_end":53866,"line_start":122,"line_end":122,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":55984,"byte_end":55998,"line_start":183,"line_end":183,"column_start":9,"column_end":23},"name":"write_data_f64","qualname":"::encode::RmpWrite::write_data_f64","value":"fn write_data_f64(&mut Self, f64) -> Result<(), DataWriteError<Self::Error>>\nwhere Self: Sized","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53857,"byte_end":53866,"line_start":122,"line_end":122,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56136,"byte_end":56147,"line_start":192,"line_end":192,"column_start":8,"column_end":19},"name":"write_bytes","qualname":"<T as encode::RmpWrite>::write_bytes","value":"fn write_bytes(&mut Self, &[u8]) -> Result<(), Self::Error>","parent":{"krate":0,"index":650},"children":[],"decl_id":{"krate":0,"index":653},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56119,"byte_end":56128,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":920},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56487,"byte_end":56505,"line_start":202,"line_end":202,"column_start":5,"column_end":23},"name":"InvalidMarkerWrite","qualname":"::encode::ValueWriteError::InvalidMarkerWrite","value":"ValueWriteError::InvalidMarkerWrite(E)","parent":{"krate":0,"index":918},"children":[],"decl_id":null,"docs":" I/O error while writing marker.\n","sig":null,"attributes":[{"value":"/ I/O error while writing marker.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56447,"byte_end":56482,"line_start":201,"line_end":201,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":922},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56506,"byte_end":56507,"line_start":202,"line_end":202,"column_start":24,"column_end":25},"name":"0","qualname":"::encode::ValueWriteError::InvalidMarkerWrite::0","value":"E","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":923},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56552,"byte_end":56568,"line_start":204,"line_end":204,"column_start":5,"column_end":21},"name":"InvalidDataWrite","qualname":"::encode::ValueWriteError::InvalidDataWrite","value":"ValueWriteError::InvalidDataWrite(E)","parent":{"krate":0,"index":918},"children":[],"decl_id":null,"docs":" I/O error while writing data.\n","sig":null,"attributes":[{"value":"/ I/O error while writing data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56514,"byte_end":56547,"line_start":203,"line_end":203,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":925},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56569,"byte_end":56570,"line_start":204,"line_end":204,"column_start":22,"column_end":23},"name":"0","qualname":"::encode::ValueWriteError::InvalidDataWrite::0","value":"E","parent":{"krate":0,"index":923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":918},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56401,"byte_end":56416,"line_start":200,"line_end":200,"column_start":10,"column_end":25},"name":"ValueWriteError","qualname":"::encode::ValueWriteError","value":"enum ValueWriteError<E = Error> where E: RmpWriteErr {\n    InvalidMarkerWrite(E),\n    InvalidDataWrite(E),\n}","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":923}],"decl_id":null,"docs":" An error that can occur when attempting to write multi-byte MessagePack value.\n","sig":null,"attributes":[{"value":"/ An error that can occur when attempting to write multi-byte MessagePack value.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56237,"byte_end":56319,"line_start":197,"line_end":197,"column_start":1,"column_end":83}},{"value":"allow(deprecated)","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56337,"byte_end":56357,"line_start":199,"line_end":199,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56667,"byte_end":56671,"line_start":209,"line_end":209,"column_start":8,"column_end":12},"name":"from","qualname":"<ValueWriteError<E> as std::convert::From>::from","value":"fn from(MarkerWriteError<E>) -> Self","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56652,"byte_end":56659,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56915,"byte_end":56919,"line_start":218,"line_end":218,"column_start":8,"column_end":12},"name":"from","qualname":"<ValueWriteError<E> as std::convert::From>::from","value":"fn from(DataWriteError<E>) -> Self","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56900,"byte_end":56907,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":57204,"byte_end":57208,"line_start":228,"line_end":228,"column_start":8,"column_end":12},"name":"from","qualname":"<std::io::Error as std::convert::From>::from","value":"fn from(ValueWriteError<std::io::Error>) -> std::io::Error","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":57189,"byte_end":57196,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":57522,"byte_end":57528,"line_start":239,"line_end":239,"column_start":8,"column_end":14},"name":"source","qualname":"<ValueWriteError<E> as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn error::Error + 'static>","parent":{"krate":1,"index":2565},"children":[],"decl_id":{"krate":1,"index":2566},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":57507,"byte_end":57514,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":57821,"byte_end":57824,"line_start":249,"line_end":249,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ValueWriteError<E> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10023},"children":[],"decl_id":{"krate":2,"index":10024},"docs":"","sig":null,"attributes":[{"value":"cold","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":57806,"byte_end":57813,"line_start":248,"line_end":248,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":674},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":58247,"byte_end":58262,"line_start":261,"line_end":261,"column_start":8,"column_end":23},"name":"write_array_len","qualname":"::encode::write_array_len","value":"fn write_array_len<W>(&mut W, u32)\n-> Result<Marker, ValueWriteError<W::Error>> where W: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient array length implementation to the given write,\n returning the marker used.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write the most efficient array length implementation to the given write,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":57964,"byte_end":58064,"line_start":254,"line_end":254,"column_start":1,"column_end":101}},{"value":"/ returning the marker used.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":58065,"byte_end":58095,"line_start":255,"line_end":255,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":58096,"byte_end":58099,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":58100,"byte_end":58112,"line_start":257,"line_end":257,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":58113,"byte_end":58116,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":58117,"byte_end":58215,"line_start":259,"line_end":259,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":58216,"byte_end":58239,"line_start":260,"line_end":260,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":676},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59036,"byte_end":59049,"line_start":285,"line_end":285,"column_start":8,"column_end":21},"name":"write_map_len","qualname":"::encode::write_map_len","value":"fn write_map_len<W>(&mut W, u32) -> Result<Marker, ValueWriteError<W::Error>>\nwhere W: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient map length implementation to the given write,\n returning the marker used.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write the most efficient map length implementation to the given write,","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":58755,"byte_end":58853,"line_start":278,"line_end":278,"column_start":1,"column_end":99}},{"value":"/ returning the marker used.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":58854,"byte_end":58884,"line_start":279,"line_end":279,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":58885,"byte_end":58888,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":58889,"byte_end":58901,"line_start":281,"line_end":281,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":58902,"byte_end":58905,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":58906,"byte_end":59004,"line_start":283,"line_end":283,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59005,"byte_end":59028,"line_start":284,"line_end":284,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":678},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59961,"byte_end":59975,"line_start":314,"line_end":314,"column_start":8,"column_end":22},"name":"write_ext_meta","qualname":"::encode::write_ext_meta","value":"fn write_ext_meta<W>(&mut W, u32, i8)\n-> Result<Marker, ValueWriteError<W::Error>> where W: RmpWrite","parent":null,"children":[],"decl_id":null,"docs":" Encodes and attempts to write the most efficient ext metadata implementation to the given\n write, returning the marker used.","sig":null,"attributes":[{"value":"/ Encodes and attempts to write the most efficient ext metadata implementation to the given","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59530,"byte_end":59623,"line_start":302,"line_end":302,"column_start":1,"column_end":94}},{"value":"/ write, returning the marker used.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59624,"byte_end":59661,"line_start":303,"line_end":303,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59662,"byte_end":59665,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59666,"byte_end":59678,"line_start":305,"line_end":305,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59679,"byte_end":59682,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ This function will return `ValueWriteError` on any I/O error occurred while writing either the","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59683,"byte_end":59781,"line_start":307,"line_end":307,"column_start":1,"column_end":99}},{"value":"/ marker or the data.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59782,"byte_end":59805,"line_start":308,"line_end":308,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59806,"byte_end":59809,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59810,"byte_end":59822,"line_start":310,"line_end":310,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59823,"byte_end":59826,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ Panics if `ty` is negative, because it is reserved for future MessagePack extension including","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59827,"byte_end":59924,"line_start":312,"line_end":312,"column_start":1,"column_end":98}},{"value":"/ 2-byte type information.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":59925,"byte_end":59953,"line_start":313,"line_end":313,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":930},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83845,"byte_end":83851,"line_start":8,"line_end":8,"column_start":5,"column_end":11},"name":"FixPos","qualname":"::marker::Marker::FixPos","value":"Marker::FixPos(u8)","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":932},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83852,"byte_end":83854,"line_start":8,"line_end":8,"column_start":12,"column_end":14},"name":"0","qualname":"::marker::Marker::FixPos::0","value":"u8","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":933},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83861,"byte_end":83867,"line_start":9,"line_end":9,"column_start":5,"column_end":11},"name":"FixNeg","qualname":"::marker::Marker::FixNeg","value":"Marker::FixNeg(i8)","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":935},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83868,"byte_end":83870,"line_start":9,"line_end":9,"column_start":12,"column_end":14},"name":"0","qualname":"::marker::Marker::FixNeg::0","value":"i8","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":936},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83877,"byte_end":83881,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"name":"Null","qualname":"::marker::Marker::Null","value":"Marker::Null","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":938},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83887,"byte_end":83891,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"True","qualname":"::marker::Marker::True","value":"Marker::True","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":940},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83897,"byte_end":83902,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"False","qualname":"::marker::Marker::False","value":"Marker::False","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":942},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83908,"byte_end":83910,"line_start":13,"line_end":13,"column_start":5,"column_end":7},"name":"U8","qualname":"::marker::Marker::U8","value":"Marker::U8","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":944},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83916,"byte_end":83919,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"U16","qualname":"::marker::Marker::U16","value":"Marker::U16","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":946},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83925,"byte_end":83928,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"U32","qualname":"::marker::Marker::U32","value":"Marker::U32","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":948},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83934,"byte_end":83937,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"U64","qualname":"::marker::Marker::U64","value":"Marker::U64","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":950},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83943,"byte_end":83945,"line_start":17,"line_end":17,"column_start":5,"column_end":7},"name":"I8","qualname":"::marker::Marker::I8","value":"Marker::I8","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":952},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83951,"byte_end":83954,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"I16","qualname":"::marker::Marker::I16","value":"Marker::I16","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":954},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83960,"byte_end":83963,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"I32","qualname":"::marker::Marker::I32","value":"Marker::I32","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":956},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83969,"byte_end":83972,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"I64","qualname":"::marker::Marker::I64","value":"Marker::I64","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":958},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83978,"byte_end":83981,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"F32","qualname":"::marker::Marker::F32","value":"Marker::F32","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":960},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83987,"byte_end":83990,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"F64","qualname":"::marker::Marker::F64","value":"Marker::F64","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":962},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83996,"byte_end":84002,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"FixStr","qualname":"::marker::Marker::FixStr","value":"Marker::FixStr(u8)","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":964},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84003,"byte_end":84005,"line_start":23,"line_end":23,"column_start":12,"column_end":14},"name":"0","qualname":"::marker::Marker::FixStr::0","value":"u8","parent":{"krate":0,"index":962},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":965},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84012,"byte_end":84016,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Str8","qualname":"::marker::Marker::Str8","value":"Marker::Str8","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":967},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84022,"byte_end":84027,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Str16","qualname":"::marker::Marker::Str16","value":"Marker::Str16","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":969},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84033,"byte_end":84038,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Str32","qualname":"::marker::Marker::Str32","value":"Marker::Str32","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":971},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84044,"byte_end":84048,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Bin8","qualname":"::marker::Marker::Bin8","value":"Marker::Bin8","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":973},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84054,"byte_end":84059,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Bin16","qualname":"::marker::Marker::Bin16","value":"Marker::Bin16","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":975},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84065,"byte_end":84070,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Bin32","qualname":"::marker::Marker::Bin32","value":"Marker::Bin32","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":977},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84076,"byte_end":84084,"line_start":30,"line_end":30,"column_start":5,"column_end":13},"name":"FixArray","qualname":"::marker::Marker::FixArray","value":"Marker::FixArray(u8)","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":979},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84085,"byte_end":84087,"line_start":30,"line_end":30,"column_start":14,"column_end":16},"name":"0","qualname":"::marker::Marker::FixArray::0","value":"u8","parent":{"krate":0,"index":977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":980},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84094,"byte_end":84101,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Array16","qualname":"::marker::Marker::Array16","value":"Marker::Array16","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":982},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84107,"byte_end":84114,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"name":"Array32","qualname":"::marker::Marker::Array32","value":"Marker::Array32","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":984},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84120,"byte_end":84126,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"FixMap","qualname":"::marker::Marker::FixMap","value":"Marker::FixMap(u8)","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":986},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84127,"byte_end":84129,"line_start":33,"line_end":33,"column_start":12,"column_end":14},"name":"0","qualname":"::marker::Marker::FixMap::0","value":"u8","parent":{"krate":0,"index":984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":987},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84136,"byte_end":84141,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Map16","qualname":"::marker::Marker::Map16","value":"Marker::Map16","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":989},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84147,"byte_end":84152,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Map32","qualname":"::marker::Marker::Map32","value":"Marker::Map32","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":991},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84158,"byte_end":84165,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"FixExt1","qualname":"::marker::Marker::FixExt1","value":"Marker::FixExt1","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":993},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84171,"byte_end":84178,"line_start":37,"line_end":37,"column_start":5,"column_end":12},"name":"FixExt2","qualname":"::marker::Marker::FixExt2","value":"Marker::FixExt2","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":995},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84184,"byte_end":84191,"line_start":38,"line_end":38,"column_start":5,"column_end":12},"name":"FixExt4","qualname":"::marker::Marker::FixExt4","value":"Marker::FixExt4","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":997},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84197,"byte_end":84204,"line_start":39,"line_end":39,"column_start":5,"column_end":12},"name":"FixExt8","qualname":"::marker::Marker::FixExt8","value":"Marker::FixExt8","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":999},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84210,"byte_end":84218,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"FixExt16","qualname":"::marker::Marker::FixExt16","value":"Marker::FixExt16","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1001},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84224,"byte_end":84228,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Ext8","qualname":"::marker::Marker::Ext8","value":"Marker::Ext8","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1003},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84234,"byte_end":84239,"line_start":42,"line_end":42,"column_start":5,"column_end":10},"name":"Ext16","qualname":"::marker::Marker::Ext16","value":"Marker::Ext16","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1005},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84245,"byte_end":84250,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Ext32","qualname":"::marker::Marker::Ext32","value":"Marker::Ext32","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1007},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84256,"byte_end":84264,"line_start":44,"line_end":44,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::marker::Marker::Reserved","value":"Marker::Reserved","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":929},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83832,"byte_end":83838,"line_start":7,"line_end":7,"column_start":10,"column_end":16},"name":"Marker","qualname":"::marker::Marker","value":"enum Marker {\n    FixPos(u8),\n    FixNeg(i8),\n    Null,\n    True,\n    False,\n    U8,\n    U16,\n    U32,\n    U64,\n    I8,\n    I16,\n    I32,\n    I64,\n    F32,\n    F64,\n    FixStr(u8),\n    Str8,\n    Str16,\n    Str32,\n    Bin8,\n    Bin16,\n    Bin32,\n    FixArray(u8),\n    Array16,\n    Array32,\n    FixMap(u8),\n    Map16,\n    Map32,\n    FixExt1,\n    FixExt2,\n    FixExt4,\n    FixExt8,\n    FixExt16,\n    Ext8,\n    Ext16,\n    Ext32,\n    Reserved,\n}","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1007}],"decl_id":null,"docs":" Format markers.\n","sig":null,"attributes":[{"value":"/ Format markers.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":83762,"byte_end":83781,"line_start":5,"line_end":5,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84349,"byte_end":84356,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Marker>::from_u8","value":"fn from_u8(u8) -> Marker","parent":null,"children":[],"decl_id":null,"docs":" Construct a msgpack marker from a single byte.\n","sig":null,"attributes":[{"value":"/ Construct a msgpack marker from a single byte.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84287,"byte_end":84337,"line_start":48,"line_end":48,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":85950,"byte_end":85955,"line_start":93,"line_end":93,"column_start":12,"column_end":17},"name":"to_u8","qualname":"<Marker>::to_u8","value":"fn to_u8(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Converts a marker object into a single-byte representation.\n","sig":null,"attributes":[{"value":"/ Converts a marker object into a single-byte representation.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":85875,"byte_end":85938,"line_start":92,"line_end":92,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":87734,"byte_end":87738,"line_start":149,"line_end":149,"column_start":8,"column_end":12},"name":"from","qualname":"<Marker as std::convert::From>::from","value":"fn from(u8) -> Marker","parent":{"krate":2,"index":3083},"children":[],"decl_id":{"krate":2,"index":3085},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":87717,"byte_end":87726,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":87846,"byte_end":87850,"line_start":156,"line_end":156,"column_start":8,"column_end":12},"name":"into","qualname":"<Marker as std::convert::Into>::into","value":"fn into(Self) -> u8","parent":{"krate":2,"index":3080},"children":[],"decl_id":{"krate":2,"index":3082},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":87829,"byte_end":87838,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":692},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":88794,"byte_end":88799,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"::std::io::Error","parent":null,"children":[],"decl_id":null,"docs":" An alias to the \"default\" error handling type.","sig":null,"attributes":[{"value":"/ An alias to the \"default\" error handling type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":88057,"byte_end":88107,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":88108,"byte_end":88111,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is problematic because when working on `#[no_std]`, because there is no [`std::error::Error`] trait and also no [`std::io::Error`] type.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":88112,"byte_end":88257,"line_start":7,"line_end":7,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":88258,"byte_end":88261,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Furthermore, this doesn't abstract over the differences between different implementations of [`RmpRead`](crate::decode::RmpRead)/[`RmpWrite`](crate::encode::RmpWrite).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":88262,"byte_end":88433,"line_start":9,"line_end":9,"column_start":1,"column_end":172}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":88434,"byte_end":88437,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When working directly with bytes streams, the error type is actually [Infallible](core::convert::Infallible).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":88438,"byte_end":88551,"line_start":11,"line_end":11,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":88552,"byte_end":88555,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ For these two reasons, this type is deprecated","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":88556,"byte_end":88606,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":88607,"byte_end":88630,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"deprecated(note =\n\"Doesn't abstract over RmpRead/RmpWrite (or work on no_std), use RmpRead::Error/RmpWrite::Error and RmpReadErr/RmpWriteErr instead\")","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":88631,"byte_end":88784,"line_start":15,"line_end":15,"column_start":1,"column_end":154}}]},{"kind":"Trait","id":{"krate":0,"index":693},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":89125,"byte_end":89138,"line_start":28,"line_end":28,"column_start":11,"column_end":24},"name":"MaybeErrBound","qualname":"::errors::MaybeErrBound","value":"MaybeErrBound: std::error::Error","parent":null,"children":[],"decl_id":null,"docs":" Internal type used to abstract over the [`std::error::Error`] trait","sig":null,"attributes":[{"value":"/ Internal type used to abstract over the [`std::error::Error`] trait","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":88958,"byte_end":89029,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":89030,"byte_end":89033,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is a nop in no-std environments.","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":89034,"byte_end":89075,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":89076,"byte_end":89099,"line_start":26,"line_end":26,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":699},"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5909,"byte_end":5924,"line_start":162,"line_end":162,"column_start":11,"column_end":26},"name":"MSGPACK_VERSION","qualname":"::MSGPACK_VERSION","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Version of the MessagePack [spec](http://github.com/msgpack/msgpack/blob/master/spec.md).\n","sig":null,"attributes":[{"value":"/ Version of the MessagePack [spec](http://github.com/msgpack/msgpack/blob/master/spec.md).","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5805,"byte_end":5898,"line_start":161,"line_end":161,"column_start":1,"column_end":94}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35362,"byte_end":35379,"line_start":21,"line_end":21,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35854,"byte_end":35871,"line_start":34,"line_end":34,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36074,"byte_end":36091,"line_start":41,"line_end":41,"column_start":53,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46249,"byte_end":46263,"line_start":20,"line_end":20,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46627,"byte_end":46641,"line_start":30,"line_end":30,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46665,"byte_end":46679,"line_start":31,"line_end":31,"column_start":21,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47655,"byte_end":47660,"line_start":55,"line_end":55,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48320,"byte_end":48325,"line_start":77,"line_end":77,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48456,"byte_end":48461,"line_start":84,"line_end":84,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7704,"byte_end":7709,"line_start":49,"line_end":49,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7748,"byte_end":7758,"line_start":50,"line_end":50,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8502,"byte_end":8503,"line_start":71,"line_end":71,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8603,"byte_end":8608,"line_start":74,"line_end":74,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":11517,"byte_end":11518,"line_start":165,"line_end":165,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":11852,"byte_end":11868,"line_start":177,"line_end":177,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12635,"byte_end":12649,"line_start":203,"line_end":203,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12964,"byte_end":12978,"line_start":214,"line_end":214,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":13527,"byte_end":13541,"line_start":228,"line_end":228,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":13766,"byte_end":13781,"line_start":237,"line_end":237,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16436,"byte_end":16453,"line_start":313,"line_end":313,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16824,"byte_end":16841,"line_start":324,"line_end":324,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":17433,"byte_end":17450,"line_start":337,"line_end":337,"column_start":50,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":17697,"byte_end":17714,"line_start":346,"line_end":346,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81308,"byte_end":81315,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82397,"byte_end":82404,"line_start":123,"line_end":123,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82491,"byte_end":82498,"line_start":128,"line_end":128,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82602,"byte_end":82609,"line_start":134,"line_end":134,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82724,"byte_end":82727,"line_start":140,"line_end":140,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82833,"byte_end":82840,"line_start":146,"line_end":146,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82948,"byte_end":82955,"line_start":153,"line_end":153,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51530,"byte_end":51535,"line_start":37,"line_end":37,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51575,"byte_end":51585,"line_start":38,"line_end":38,"column_start":37,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51743,"byte_end":51759,"line_start":43,"line_end":43,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52221,"byte_end":52235,"line_start":60,"line_end":60,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53561,"byte_end":53562,"line_start":110,"line_end":110,"column_start":49,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53735,"byte_end":53742,"line_start":115,"line_end":115,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56077,"byte_end":56078,"line_start":188,"line_end":188,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56627,"byte_end":56642,"line_start":207,"line_end":207,"column_start":52,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56875,"byte_end":56890,"line_start":216,"line_end":216,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":57177,"byte_end":57182,"line_start":226,"line_end":226,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":57482,"byte_end":57497,"line_start":237,"line_end":237,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":57781,"byte_end":57796,"line_start":247,"line_end":247,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84274,"byte_end":84280,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":87704,"byte_end":87710,"line_start":147,"line_end":147,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":87816,"byte_end":87822,"line_start":154,"line_end":154,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":89239,"byte_end":89240,"line_start":30,"line_end":30,"column_start":55,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5724,"byte_end":5730,"line_start":154,"line_end":154,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7343,"byte_end":7348,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":272}},{"kind":"Mod","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/lib.rs","byte_start":5740,"byte_end":5746,"line_start":155,"line_end":155,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":375}},{"kind":"Mod","span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51123,"byte_end":51129,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":583}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35362,"byte_end":35379,"line_start":21,"line_end":21,"column_start":42,"column_end":59},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":709},"to":{"krate":1,"index":2565}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":35854,"byte_end":35871,"line_start":34,"line_end":34,"column_start":37,"column_end":54},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":709},"to":{"krate":2,"index":10023}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/str.rs","byte_start":36074,"byte_end":36091,"line_start":41,"line_end":41,"column_start":53,"column_end":70},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":709},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46249,"byte_end":46263,"line_start":20,"line_end":20,"column_start":18,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":10023}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46627,"byte_end":46641,"line_start":30,"line_end":30,"column_start":28,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":2565}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":46665,"byte_end":46679,"line_start":31,"line_end":31,"column_start":21,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":47655,"byte_end":47660,"line_start":55,"line_end":55,"column_start":10,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48320,"byte_end":48325,"line_start":77,"line_end":77,"column_start":29,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":739},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/bytes.rs","byte_start":48456,"byte_end":48461,"line_start":84,"line_end":84,"column_start":18,"column_end":23},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":739},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7591,"byte_end":7598,"line_start":47,"line_end":47,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":10023},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7601,"byte_end":7606,"line_start":47,"line_end":47,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":10016},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7624,"byte_end":7637,"line_start":47,"line_end":47,"column_start":56,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":693},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7704,"byte_end":7709,"line_start":49,"line_end":49,"column_start":30,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":1,"index":3955},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":7748,"byte_end":7758,"line_start":50,"line_end":50,"column_start":36,"column_end":46},"kind":{"Impl":{"id":10}},"from":{"krate":2,"index":38398},"to":{"krate":0,"index":308}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8502,"byte_end":8503,"line_start":71,"line_end":71,"column_start":48,"column_end":49},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":315},"to":{"krate":0,"index":313}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8603,"byte_end":8608,"line_start":74,"line_end":74,"column_start":28,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":739},"to":{"krate":0,"index":313}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":8980,"byte_end":8986,"line_start":86,"line_end":86,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":313},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":11517,"byte_end":11518,"line_start":165,"line_end":165,"column_start":36,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":327},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":11852,"byte_end":11868,"line_start":177,"line_end":177,"column_start":33,"column_end":49},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":330},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12635,"byte_end":12649,"line_start":203,"line_end":203,"column_start":23,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":834},"to":{"krate":1,"index":2565}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":12964,"byte_end":12978,"line_start":214,"line_end":214,"column_start":18,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":834},"to":{"krate":2,"index":10023}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":13527,"byte_end":13541,"line_start":228,"line_end":228,"column_start":50,"column_end":64},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":834},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":13766,"byte_end":13781,"line_start":237,"line_end":237,"column_start":33,"column_end":48},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":827},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16436,"byte_end":16453,"line_start":313,"line_end":313,"column_start":23,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":848},"to":{"krate":1,"index":2565}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":16824,"byte_end":16841,"line_start":324,"line_end":324,"column_start":33,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":848},"to":{"krate":2,"index":10023}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":17433,"byte_end":17450,"line_start":337,"line_end":337,"column_start":50,"column_end":67},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":848},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/decode/mod.rs","byte_start":17697,"byte_end":17714,"line_start":346,"line_end":346,"column_start":49,"column_end":66},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":848},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":81308,"byte_end":81315,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82397,"byte_end":82404,"line_start":123,"line_end":123,"column_start":22,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82491,"byte_end":82498,"line_start":128,"line_end":128,"column_start":25,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3074}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82602,"byte_end":82609,"line_start":134,"line_end":134,"column_start":25,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82724,"byte_end":82727,"line_start":140,"line_end":140,"column_start":24,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":7448},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82833,"byte_end":82840,"line_start":146,"line_end":146,"column_start":24,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/buffer.rs","byte_start":82948,"byte_end":82955,"line_start":153,"line_end":153,"column_start":19,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":864},"to":{"krate":0,"index":650}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51416,"byte_end":51423,"line_start":35,"line_end":35,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":10023},"to":{"krate":0,"index":619}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51426,"byte_end":51431,"line_start":35,"line_end":35,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":10016},"to":{"krate":0,"index":619}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51449,"byte_end":51462,"line_start":35,"line_end":35,"column_start":57,"column_end":70},"kind":"SuperTrait","from":{"krate":0,"index":693},"to":{"krate":0,"index":619}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51530,"byte_end":51535,"line_start":37,"line_end":37,"column_start":31,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":3955},"to":{"krate":0,"index":619}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51575,"byte_end":51585,"line_start":38,"line_end":38,"column_start":37,"column_end":47},"kind":{"Impl":{"id":31}},"from":{"krate":2,"index":38398},"to":{"krate":0,"index":619}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":51743,"byte_end":51759,"line_start":43,"line_end":43,"column_start":34,"column_end":50},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":622},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":52221,"byte_end":52235,"line_start":60,"line_end":60,"column_start":34,"column_end":48},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":631},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53561,"byte_end":53562,"line_start":110,"line_end":110,"column_start":49,"column_end":50},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":647},"to":{"krate":0,"index":645}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":53735,"byte_end":53742,"line_start":115,"line_end":115,"column_start":28,"column_end":35},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":864},"to":{"krate":0,"index":645}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":54732,"byte_end":54738,"line_start":144,"line_end":144,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":645},"to":{"krate":0,"index":650}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56077,"byte_end":56078,"line_start":188,"line_end":188,"column_start":38,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":657},"to":{"krate":0,"index":650}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56627,"byte_end":56642,"line_start":207,"line_end":207,"column_start":52,"column_end":67},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":56875,"byte_end":56890,"line_start":216,"line_end":216,"column_start":50,"column_end":65},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":57177,"byte_end":57182,"line_start":226,"line_end":226,"column_start":57,"column_end":62},"kind":{"Impl":{"id":39}},"from":{"krate":1,"index":3955},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":57482,"byte_end":57497,"line_start":237,"line_end":237,"column_start":39,"column_end":54},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":918},"to":{"krate":1,"index":2565}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/encode/mod.rs","byte_start":57781,"byte_end":57796,"line_start":247,"line_end":247,"column_start":34,"column_end":49},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":918},"to":{"krate":2,"index":10023}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":84274,"byte_end":84280,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":87704,"byte_end":87710,"line_start":147,"line_end":147,"column_start":19,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":929},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/marker.rs","byte_start":87816,"byte_end":87822,"line_start":154,"line_end":154,"column_start":19,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":929},"to":{"krate":2,"index":3080}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":89152,"byte_end":89157,"line_start":28,"line_end":28,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":2565},"to":{"krate":0,"index":693}},{"span":{"file_name":"/home/pythomancer/.cargo/registry/src/github.com-1ecc6299db9ec823/rmp-0.8.11/src/errors.rs","byte_start":89239,"byte_end":89240,"line_start":30,"line_end":30,"column_start":55,"column_end":56},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":695},"to":{"krate":0,"index":693}}]}